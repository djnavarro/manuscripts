{\rtf1\ansi \deflang1033\deff0{\fonttbl
{\f0\froman \fcharset0 \fprq2 Times New Roman;}{\f1\froman \fcharset161 \fprq2 Times New Roman Greek;}{\f2\froman \fcharset238 \fprq2 Times New Roman CE;}
{\f3\fmodern \fcharset0 \fprq1 Courier New;}{\f4\fnil \fcharset129 \fprq2 ;}{\f5\fswiss \fcharset0 \fprq2 Arial;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue0;}
{\stylesheet{\fs20 \snext0 Normal;}
{\s1 \qj QuickFormat1;}
{\s2 \qj _26;}
{\s3 \qj\fi-720\li1440\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _25;}
{\s4 \qj\li2160\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _24;}
{\s5 \qj\li2880\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _23;}
{\s6 \qj\li3600\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _22;}
{\s7 \qj\li4320\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _21;}
{\s8 \qj\li5040\tx5040\tx5760\tx6480\tx7200\tx7920 _20;}
{\s9 \qj\li5760\tx5760\tx6480\tx7200\tx7920 _19;}
{\s10 \qj\li6480\tx6480\tx7200\tx7920 _18;}
{\s11 \qj\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _17;}
{\s12 \qj\fi-720\li1440\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _16;}
{\s13 \qj\li2160\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _15;}
{\s14 \qj\li2880\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _14;}
{\s15 \qj\li3600\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _13;}
{\s16 \qj\li4320\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _12;}
{\s17 \qj\li5040\tx5040\tx5760\tx6480\tx7200\tx7920 _11;}
{\s18 \qj\li5760\tx5760\tx6480\tx7200\tx7920 _10;}
{\s19 \qj\li6480\tx6480\tx7200\tx7920 _9;}
{\s20 \qj\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _8;}
{\s21 \qj\fi-720\li1440\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _7;}
{\s22 \qj\li2160\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _6;}
{\s23 \qj\li2880\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _5;}
{\s24 \qj\li3600\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _4;}
{\s25 \qj\li4320\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 _3;}
{\s26 \qj\li5040\tx5040\tx5760\tx6480\tx7200\tx7920 _2;}
{\s27 \qj\li5760\tx5760\tx6480\tx7200\tx7920 _1;}
{\s28 \qj\li6480\tx6480\tx7200\tx7920 _;}
{\*\cs29 \additive Default Para;}
{\s30 \qj\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 Default;}
}\notabind\margl1440\margr1440\hyphhotz936\ftnbj\fet2\ftnrstpg\aftnnar\viewkind1\lytprtmet\subfontbysize \sectd \sbknone\pgndec\headery1440\footery1440\endnhere\endnhere 
{\header {
\posxr\nowrap {\field{\*\fldinst { PAGE  }}}\par}
\par}
{\*\pnseclvl1\pndec\pnstart1{\pntxta .}}
{\*\pnseclvl2\pnlcltr\pnstart1{\pntxta .}}
{\*\pnseclvl3\pnlcrm\pnstart1{\pntxta .}}
{\*\pnseclvl4\pndec\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl5\pnlcltr\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl6\pnlcrm\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pndec\pnstart1{\pntxta .}}
{\*\pnseclvl8\pnlcltr\pnstart1{\pntxta .}}
{\*\pnseclvl9\pnlcrm\pnstart1}

{\field{\*\fldinst {\lang4105  SEQ CHAPTER \\h \\r 1}}{\fldrslt }}\pard \fs24\qc 
{\plain \fs24 \b BEYOND GOODNESS OF FIT: PARAMETER SPACE PARTITIONING}{\plain \fs24 \par
}\pard \fs24
{\plain \fs24 \par
}{\plain \fs24 Imagine you are a medical doctor. How comfortable would you be prescribing a newly developed \softline
medication for which there is minimal knowledge of how it works or of its side effects? An \softline
analogous situation exists today in the psychological sciences in modeling human behavior. \softline
Quantitative modeling has evolved into an influential and increasingly popular research tool and \softline
method of inquiry, yet our understanding of model behavior is too often quite limited (e.g., why \softline
the model behaves in a particular way and the range of other behaviors it exhibits). In fact, model \softline
behavior can be down right mysterious (Dawson & Shamanski, 1994; McCloskey, 1991). This \softline
observation is not a criticism about models or modeling, but a comment about the absence of \softline
methods for studying them.\par
}{\plain \fs24 \par
}{\plain \fs24 Modeling will be most fruitful when the consequences of a modeler{\u8217\'92}s design choices are \softline
understood. A similarly thorough understanding is also necesasry to make knowledgable choices \softline
in model selection. Curent model analysis tools are not capable of providing this insight. The \softline
purpose of this paper is to fill this gap by introducing a powerful, general-purpose tool for model \softline
analysis and selection.\par
}{\plain \fs24 \par
}\pard \fs24\qc 
{\plain \fs24 }{\plain \fs24 \b Current Methods of Model Analysis}{\plain \fs24 \par
}\pard \fs24
{\plain \fs24 Much of present-day model evaluation and comparison assess what we have recently dubbed \softline
Local Model Analysis (LMA; Navarro, Pitt, & Myung, 2004). The term refers to evaluation in a \softline
specific experimental context The most frequent form of LMA is testing model performance \softline
against human performance, for example, by fitting a mathematical model to the data or \softline
simulating the human pattern with a connectionist model. Because data are a reflection of the \softline
psychological process under study, a good fit to the data is a necessary condition a model must \softline
satisfy to be taken seriously. A good fit determines how well a model passes the sufficiency test \softline
of mimicking  human performance. It is especially useful in the early stages of model \softline
development as a quick and easy check on sufficiency. Quantitative measures of fit include \softline
percent variance accounted for, root mean square deviation, and maximum likelihood. \par
}{\plain \fs24 \par
}{\plain \fs24 As with any quantitative measure, it is important to be aware of their limitations of goodness-of-fit (GOF) measures. For example, they can be biased when assumptions are violated (normality \softline
in the case of root mean square deviation). Although a good fit makes a model a member of the \softline
class of possible contenders, this class will almost always be quite large. If two models that one \softline
is comparing fit the data similarly well, other analysis methods are needed to choose between \softline
them.\par
}{\plain \fs24 \par
}{\plain \fs24 Another LMA method that is useful for probing model behavior more deeply is a sensitivity \softline
analysis, in which a model{\u8217\'92}s parameters are varied around its best-fitting values to learn how \softline
robust model behavior is to slight variations of those parameters. If a good fit reflects a \softline
fundamental property of the model, then this behavior should be stable across reasonable \softline
parameter variation. Another reason a model should satisfy this criterion is that human data are \softline
noisy. A model should not be so sensitive that its behavior changes noticeably when noise is 
encountered. Cross validation, in which a model is fit to the second of two data sets using the \softline
best fitting parameter values from fitting the first data set, is a fit-based approach to quantifying \softline
this sensitivity.\par
}{\plain \fs24 \par
}{\plain \fs24 A drawback of all LMA methods is that they are local.  Each fit provides a view of model \softline
performance in a specific experimental design (e.g., conditions, stimuli). Each view is also \softline
always in relative to how humans performed, which not only limits what we learn about model \softline
performance (e.g., whatelse can it fit?) but also makes it difficult to get a sense of overall model \softline
behavior when these views are combined. We are left with snapshots of model performance that \softline
are diffciut to piece together into a comprehensive understanding of the model. The task of \softline
comparing two models is even more arduous.\par
}{\plain \fs24 \par
}{\plain \fs24 For these reasons, we have been interested in developing Global Model Analysis (GMA) \softline
techniques. They are intended to complement LMA, not replace it. The idea is that by stepping \softline
back from a particular data sample and obtaining a broader view of how a model performs, we \softline
can gain a deeper understanding of model behavior and how it compares to competing models. \par
}{\plain \fs24 \par
}{\plain \fs24 One measure of GMA is a model{\u8217\'92}s complexity, which quantifies its inherent data-fitting ability \softline
in an experimental design (Grunwald, Myung, & Pitt, in press; Pitt, Myung, & Zhang, 2002; \softline
Rissanen, 1996; 2001).  The method is mathematically rigorous, but a few requirements currently \softline
limit its application to the diverse range of models in psychology. One is that it is only applicable \softline
to statistical (parametric, algebraically formulated) models. Perhaps more serious from the \softline
standpoint of GMA, it generates only a single value regarding model adequacy. Although a \softline
useful piece of information, what is needed is are ways to learn about the the general and atypical \softline
behavioral characteristics of a model.\par
}{\plain \fs24 \par
}{\plain \fs24 [Insert a few paragraphs describing grid search and Dunn{\u8217\'92}s signed-difference analysis as methods \softline
of GMA. Describe how they work, what they are good for. The following paragraphs might need \softline
to be revised slightly to reference them or encoporate into the discussion. Does this belong \softline
elsewhere? For example, we could save this to the GD, where a more extended comparison could \softline
be made.]\par
}{\plain \fs24 \par
}{\plain \fs24 Recently, Navarro et al (2004; Kim, Navarro, Pitt, & Myung, in press; Pitt & Navarro, in press; \softline
see also Wagenmakers et al, 2004) developed a GMA method called }{\plain \fs24 \i Landscaping}{\plain \fs24  that attempts \softline
to achieve the same goals as grid search and signed-difference analysis while still maintaining \softline
ties to measures of model complexity. A landscape is a plot of the relative fits of two models to a \softline
range of data sets generated by the models in a particular experimental design. Two examples are \softline
shown in Figure 1. In each, the fit of each model is along an axis, with better moving outward \softline
from the origin. The diagonal line represents the location in this {\u8220\'93}fit space{\u8221\'94} of equal fit by the \softline
two models. Points above the line indicate a better fit by model A, and points below it by model \softline
B. The lightly shaded points were data sets generated by model A (with noise added). The reverse \softline
was the case for the dark points. The high degree of overlap of the distributions in the left panel \softline
indicates both models fit both data sets simiarly well. In this experimental setup, the models are 
indiscriminable. The separation of the distributions in the plot on the right indicates the models \softline
are discriminable, most decisively if data were generated in the regions furthest from the criterion \softline
line, where one model provides a vastly superior fit than the other.\par
}{\plain \fs24 \par
}\pard \fs24\qc 
{\plain \fs24 }{\plain \fs24 \i Figure 1 here}{\plain \fs24 \par
}\pard \fs24
{\plain \fs24 \par
}{\plain \fs24 Landscaping is attractive because landscapes are relatively easy to create, requiring only a \softline
comparison of fits to data sets. In addition, landscapes can be used to assess the informativeness \softline
of data in distinguishing models by overplotting in a landscape data collected in past studies. In \softline
short, the landscape provides a global perspective from which to understand the relationship \softline
between two models and their fits to data.\par
}{\plain \fs24 \par
}{\plain \fs24 Landscaping has two drawbacks, however. Like the complexity measure mentioned above, it too \softline
is restricted to statistical models. More importantly, comparison of only fits cannot tell us much \softline
about the functional relationship between models. For example, are the models virtually \softline
isomorphic in a particular experimental setup, generating the same data patterns across the entire \softline
parameter space? Or do models generate only one or two common data patterns, one of which \softline
happens to be the empirical pattern? Whichever is the case, how central or peripheral is the \softline
human pattern in model performance? Questions like these, which are at the heart of GMA, \softline
cannot be addressed by GOF measures alone.\par
}{\plain \fs24 \par
}{\plain \fs24 We introduce a general-purpose version of landscaping that overcomes these two hurdles. It is \softline
called }{\plain \fs24 \i Parameter Space Partitioning }{\plain \fs24 (PSP), and involves doing exactly what the name implies: A \softline
model{\u8217\'92}s parameter space is literally partitioned into regions that correspond to the data patterns \softline
that could be generated in an experiment. These partitions can then be studied to learn about a \softline
model{\u8217\'92}s behavior and compared across models to assess their similarities.\par
}{\plain \fs24 \par
}\pard \fs24\qc 
{\plain \fs24 }{\plain \fs24 \b Parameter Space Partitioning:}{\plain \fs24  }{\plain \fs24 \b Peering into the Black Box of Model Behavior}{\plain \fs24 \par
}\pard \fs24
{\plain \fs24 To illustrate PSP, consider a visual word recognition experiment in which participants are asked \softline
to categorize stimuli as words or  nonwords and response time to words is measured as the \softline
dependent variable across  three experimental conditions, A, B and C. Suppose we are interested \softline
in the ordinal relationship (fastest to slowest) across conditions. In this case, there are 13 possible \softline
orderings (including equalities) that can be observed across the three conditions (e.g., A > B > C, \softline
A > B = C, B > C = A, etc). Each of these orderings defines a data pattern. Suppose that mean \softline
participant performance yielded the pattern B > C > A. \par
}{\plain \fs24 \par
}{\plain \fs24 Now consider two hypothetical models, M}{\plain \fs24 \sub 1}{\plain \fs24  and M}{\plain \fs24 \sub 2}{\plain \fs24 , of word recognition, each with two \softline
parameters. Using PSP, we can answer the following questions about the relationship between \softline
the models and the empirical data generated in the experiment: How many of the thirteen data \softline
patterns can each model produce? What part of the parameter space includes the empirical \softline
pattern? How much of the space is occupied by the empirical pattern? What data patterns are \softline
found in nearby regions as well as the rest of the parameter space?\par
}{\plain \fs24 \par
}{\plain \fs24 Figure 2 shows the parameter space of each model partitioned into the data patterns it can \softline
generate. Model M}{\plain \fs24 \sub 1}{\plain \fs24  produces three, one of which is the }{\plain \fs24 emipircal pattern. Note how it is central \softline
to model performance, occupying the largest portion of the parameter space. Even though the \softline
model generates two other patterns, they are smaller and differ minimally from the empirical \softline
pattern. In contrast, M}{\plain \fs24 \sub 2}{\plain \fs24  produces nine of the thirteen patterns. Although one is the empirical \softline
pattern, M}{\plain \fs24 \sub 2}{\plain \fs24 's performance is not impressive because it can mimic almost any pattern that could be \softline
generated in the experiment. Its predictive power is too great. Indeed, that M}{\plain \fs24 \sub 2}{\plain \fs24  can mimic human \softline
performance seems almost incidental. Not only does the empirical pattern occupy a small region \softline
of the parameter space but larger regions are produced by patterns that do not human-like (e.g., \softline
C>A>B).\par
}{\plain \fs24 \par
}\pard \fs24\qc 
{\plain \fs24 }{\plain \fs24 \i Figure 2 here}{\plain \fs24 \par
}\pard \fs24
{\plain \fs24 \par
}\pard \fs24\qc 
{\plain \fs24 }{\plain \fs24 \ul Challenges in Implementing PSP}{\plain \fs24 \par
}\pard \fs24
{\plain \fs24 The preceding example illustrates the gist of the method and describes some of what can be \softline
learned with it. Implementation of the method requires solving two non-trivial problems. One is \softline
how to define a data pattern, and the other is how to devise an efficient search algorithm to find \softline
the data patterns.\par
}{\plain \fs24  \ul0 \tab \ul0 \tab \ul0 \tab \ul0 \tab \ul0 \tab \ul0 \tab \ul0 \tab \ul0 \tab \ul0 \tab \par
}{\plain \fs24 Each set of a model{\u8217\'92}s parameter values generates a model output, but not every model output is a \softline
distinct data pattern. How many qualitatively {\u8220\'93}different{\u8221\'94} outputs can a model produce? \softline
Answering this question, which is what PSP enables us to do, depends critically on how a data \softline
pattern is defined. This is something which will vary from experiment to experiment, and indeed \softline
may vary within an experiment depending upon what a researcher wants to learn. Although there \softline
is no general solution, the scientist usually knows what patterns should be found in order to \softline
support or falsify a model. Most of the time, ordinal predictions are being tested. In this case, a \softline
{\u8220\'93}natural{\u8221\'94} definition of a data pattern is the ordinal relationship of model outputs, as in the above \softline
example. Nevertheless, it is a good idea to try out a couple of different definitions and to perform \softline
sensitivity analyses to ascertain if and to what extent conclusions obtained under one definition \softline
hold across others. An example of this is presented later in the paper.\par
}{\plain \fs24 \par
}{\plain \fs24 Once a data pattern is defined, the next challenge is to find all patterns a model can simulate. The \softline
data space by definition is made up of all patterns that can be observed given an experimental \softline
design, however improbable. The space may contain a huge number of patterns, only a small \softline
fraction of which correspond to a model{\u8217\'92}s predictions, so it is essential to use an efficient search \softline
algorithm that finds all of the patterns the model can generate in a reasonable amount of time.\par
}{\plain \fs24 \par
}\pard \fs24\qc 
{\plain \fs24 }{\plain \fs24 \ul The PSP Algorithm}{\plain \fs24 \par
}\pard \fs24
{\plain \fs24 The problem to be solved is to partition a multi-dimensional parameter space into an unknown \softline
number of regions, each of which by definition corresponds to a unique data pattern.. Given the \softline
dimensionality of the parameter space of most models is quite high, brute force search methods \softline
to find all regions, such as Simple Monte Carlo (SMC; a random search procedure) will not work \softline
(or take far too long to succeed), precisely because the search is random. Markov Chain Monte 
Carlo (MCMC; Gilk et al, 1996) is a much more sophisticated sampling method that we \softline
encorporated into an algorithm that efficiently finds all regions.\par
}{\plain \fs24 \par
}\pard \fs24\s1 
{\plain \fs24 Application of the PSP algorithm begins with a starting set of parameter values at which the \softline
model can generate a valid data pattern (i.e., one that satisfies the definition). This initial set can \softline
be supplied by the modeler or from an exploratory run using SMC. Given the parameter set and \softline
the corresponding data pattern generated by the model, the algorithm samples nearby points in \softline
the parameter space to map the region that defines the data pattern. MCMC is }{\plain \fs24 used to \softline
approximate quickly and accurately the shape of this region. The process then begins anew by \softline
sampling a nearby point just outside of this region.\par
}\pard \fs24
{\plain \fs24 \par
}{\plain \fs24 Figure 3 illustrates how the algorithm works in the space of a two-parameter model.  The process \softline
begins with the initial parameter set serving as the current point in the parameter space (solid \softline
point in panel a). A }{\plain \fs24 \i candidate}{\plain \fs24  sample point (shaded point) is drawn from a small, predefined \softline
region, called a  jumping distribution, centered at the current point. The model is then run with \softline
the candidate parameter values and its output is evaluated to determine if the data pattern is the \softline
same as that generated by the initial point. If so, the candidate point is accepted as the next point \softline
from which another candidate point is drawn. If the new candidate point does not yield the same \softline
data pattern as the initial one, it is rejected as belonging to the current region. Another jump from \softline
the initial point is attempted, accepting those points that yield the same data pattern. The \softline
sequence of all accepted points recorded across all trials is called the }{\plain \fs24 \i Markov chain \softline
}{\plain \fs24 corresponding to the current data pattern. This sample of points is used to estimate the size of the \softline
region occupied by the data pattern (panel b). The theory of MCMC guarantees that the sample of \softline
accepted points will eventually be distributed uniformly over the region. This feature of MCMC \softline
allows us to estimate accurately the volume occupied by the region, regardless of its size. \par
}{\plain \fs24 \par
}\pard \fs24\qc 
{\plain \fs24 }{\plain \fs24 \i Figure 3 here}{\plain \fs24 \par
}\pard \fs24
{\plain \fs24 \par
}{\plain \fs24 Every rejected point (shaded point in panel b), which must be outside the current region, is \softline
checked to see if it generates a new valid data pattern. If so, a new Markov chain corresponding \softline
to the newly discovered pattern is started to define the new region. In effect, accepted points are \softline
used to shift the jumping distribution around inside the current region to map it completely, \softline
whereas rejected ones are used initiate new MCMC search processes to map new regions. Over \softline
time, as many search processes as there are unique data patterns will be run. Additional details \softline
about the algorithm are described in Appendix A.\par
}{\plain \fs24 \par
}\pard \fs24\qc 
{\plain \fs24 }{\plain \fs24 \ul Algorithm Evaluation}{\plain \fs24 \par
}\pard \fs24
{\plain \fs24 We tested the accuracy of the PSP algorithm by measuring its ability to find all of the data \softline
patterns defined for a particular model. The difficulty of the search problem was varied by \softline
manipulating the definition of a pattern (i.e., number of patterns) and the number of parameters \softline
in the model. The extent of both (see Table 1) was deliberately made large to make the test  \softline
challenging The efficiency of the algorithm was measured by comparing its performance to SMC \softline
(random search).\par
}{\plain \fs24 The model was a hypercube whose dimensionality }{\plain \fs24 \i d}{\plain \fs24  (i.e., number of parameters) was 5, 10, or \softline
15.To illustrate the evaluation method, a two-dimensional model (d = 2) is depicted in Figure 4 \softline
that contains twenty data regions (outlined in bold) that the algorithm had to find. Note that a \softline
large portion of the space does not produce any valid data patterns. Also note that the sizes of the \softline
data regions vary a great deal. Some are elicited by a wide range of parameter values whereas \softline
others can be produced only by a small ranges of values. This contrast grows exponentially as the \softline
dimensionality of the model increases, and was purposefully introduced into the test to make the \softline
search difficult and approximate the complexities (i.e., nonlinearities) in cognitive models. Ten \softline
independent runs of each search method were carried out to assess the reliability of algorithm \softline
performance. \par
}{\plain \fs24 \par
}\pard \fs24\qc 
{\plain \fs24 }{\plain \fs24 \i Figures 4 and 5 here}{\plain \fs24 \par
}\pard \fs24
{\plain \fs24 \par
}{\plain \fs24 Figure 5 shows performance of the PSP algorithm for a search problem in which there were one \softline
hundred regions embedded in a 10-dimensional hypercube (d=10). The PSP algorithm found all \softline
regions and did so in nine minutes. SMC found only about 23 patterns in nine minutes, and given \softline
its sluggish performance, it seems doubtful that SMC would find all of them in anything close to \softline
a reasonable amount of time.\par
}{\plain \fs24 \par
}{\plain \fs24 Table 1 summarizes results from the complete test. The mean proportion of patterns found is \softline
listed in each cell. Results are clear and consistent. The PSP algorithm almost always found all of \softline
the patterns whereas SMC failed to do so in every condition. Most noteworthy is the success of \softline
the PSP algorithm in the toughest situation, when there were 15 parameters and 500 data \softline
patterns. Its near perfect success suggests it is likely to perform admirably in other testing \softline
situations. In the remainder of this paper, we describe its applications to analyzing performance \softline
of a single model and to comparing design differences between models.\par
}{\plain \fs24 \par
}\pard \fs24\qc 
{\plain \fs24 }{\plain \fs24 \i Table 1 here}{\plain \fs24 \par
}\sect \sectd \sbknone\marglsxn1800\margrsxn1800\pgndec\headery1440\footery1440\endnhere\endnhere 
{\header {
\posxr\nowrap {\field{\*\fldinst { PAGE  }}}\par}
\par}
{\*\pnseclvl1\pndec\pnstart1{\pntxta .}}
{\*\pnseclvl2\pnlcltr\pnstart1{\pntxta .}}
{\*\pnseclvl3\pnlcrm\pnstart1{\pntxta .}}
{\*\pnseclvl4\pndec\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl5\pnlcltr\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl6\pnlcrm\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pndec\pnstart1{\pntxta .}}
{\*\pnseclvl8\pnlcltr\pnstart1{\pntxta .}}
{\*\pnseclvl9\pnlcrm\pnstart1}

\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}\sect \sectd \sbknone\pgndec\headery1440\footery1440\endnhere\endnhere 
{\header {
\posxr\nowrap {\field{\*\fldinst { PAGE  }}}\par}
\par}
{\*\pnseclvl1\pndec\pnstart1{\pntxta .}}
{\*\pnseclvl2\pnlcltr\pnstart1{\pntxta .}}
{\*\pnseclvl3\pnlcrm\pnstart1{\pntxta .}}
{\*\pnseclvl4\pndec\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl5\pnlcltr\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl6\pnlcrm\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pndec\pnstart1{\pntxta .}}
{\*\pnseclvl8\pnlcltr\pnstart1{\pntxta .}}
{\*\pnseclvl9\pnlcrm\pnstart1}

\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \b Evaluating Global Model Behavior in Relation to Empirical Data: A Test of ALCOVE\par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 Differences between LMA and GMA are most apparent when methods of each type are used to \softline
evaluate a model in the context of a new empirical finding. In LMA, a model{\u8217\'92}s ability to fit (or \softline
simulate) the data is taken as evidence that it approximates the underlying cognitive process. In \softline
GMA, the definition of {\u8220\'93}fit{\u8221\'94} is relaxed to be a qualitative, ordinal relation on the same scale as \softline
the experimental predictions themselves. Model performance is then evaluated by determining \softline
how many of the possible orderings in the experiment can it produce and and how central is the \softline
empirical pattern among them (Figure 2). In essence, the local precision of LMA is replaced by \softline
knowledge of the model{\u8217\'92}s inherent pattern-producing ability and the centrality or exclusivity of \softline
the empirical pattern.\par
}{\plain \fs24 \par
}{\plain \fs24 In this section, we examined the behavior of ALCOVE (Kruschke 1992), an exemplar-based \softline
account of human category learning, in the context of the seminal Shepard, Hovland, and Jenkins \softline
(1961) experiment. While there are some category learning effects that it does not capture 
without extension or modification (e.g, Kruschke & Erikson 1995, Lee & Navarro 2002), \softline
ALCOVE remains a simple and powerful account of a broad range of phenomena.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \ul The ALCOVE  Model\par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 In some category learning experiments, participants are shown a sequence of stimuli, each of \softline
which possesses some unknown category label. The task is to learn which labels go with which \softline
stimuli, using the feedback provided after responses are made. ALCOVE solves this problem in \softline
the following way (for a detailed description, see Kruschke 1992). When stimulus }{\plain \fs24 \i i}{\plain \fs24  is presented \softline
to ALCOVE, its similarity to each of the previously stored exemplars, }{\plain \fs24 \i s{\field{\*\fldinst ADVANCE \\d 3}{\fldrslt }}ij{\field{\*\fldinst ADVANCE \\u 3}{\fldrslt }}}{\plain \fs24 , is calculated. \softline
Following Shepard (1987), similarity is assumed to decay exponentially (with a width parameter \softline
}{\plain \fs24 \i c}{\plain \fs24 ) as a function of the attention-weighted city-block distance between the two stimuli in an \softline
appropriate psychological space. After estimating these similarities, ALCOVE forms response \softline
strengths for each of the possible categories. These are calculated using associative weights \softline
maintained between each of the stimuli and the categories. The probability of choosing the }{\plain \fs24 \i k}{\plain \fs24 -th \softline
category follows the choice rule (Luce, 1963) with parameter }{\plain \fs24 \i {\f1\u966\'f6}}{\plain \fs24 .\par
}{\plain \fs24 \par
}{\plain \fs24 Having produced probabilities for each of the various possible categorization responses, \softline
ALCOVE is provided with feedback from an external source. This takes the form of a {\u8220\'93}humble \softline
teacher{\u8221\'94} vector, in which learning is only required in cases where the wrong response was made.  \softline
Two learning rules are then applied, both derived by seeking to minimize the sum-squared error \softline
between the response strengths and the teaching vector, using a simple gradient descent approach \softline
to optimization. Using these rules, ALCOVE updates the associative weights (with parameter }{\plain \fs24 \i {\f1\u951\'e7}{\field{\*\fldinst ADVANCE \\d 3}{\fldrslt }}w{\field{\*\fldinst ADVANCE \\u 3}{\fldrslt }}}{\plain \fs24  \softline
for the learning rate) and the attention weights (with a learning rate parameter }{\plain \fs24 \i {\f1\u951\'e7}{\field{\*\fldinst ADVANCE \\d 3}{\fldrslt }}a{\field{\*\fldinst ADVANCE \\u 3}{\fldrslt }}}{\plain \fs24 ) prior to \softline
observing the next stimulus.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \ul The Shepard, Hovland and Jenkins Task\par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 In a classic experiment, Shepard, Hovland and Jenkins (1961) studied human performance in a \softline
category learning task involving eight stimuli divided evenly between two categories. The stimuli \softline
were generated by varying exhaustively three binary dimensions such as color (black vs. white), \softline
size (small vs. large) and shape (square vs. triangle). They observed that, if these dimensions are \softline
regarded as interchangeable, there are only six possible category structures across the stimulus \softline
set, illustrated in Figure 6a. This means, for example, that the category structure that divides all \softline
squares into one category, and all triangles into the other is regarded as equivalent to the category \softline
structure that divides small shapes from large ones, as shown in the lower right.\par
}{\plain \fs24 \par
}{\plain \fs24 Empirically, Shepard et al. (1961) found robust differences in the way in which each of the six \softline
fundamental category structures was learned. In particular, by measuring the mean number of \softline
errors made by subjects in learning each type of category structure, they found that Type I was \softline
learned more easily than Type II, which in turn was learned more easily than Types III, IV and V \softline
(which all had similar error measures), and that Type VI was the most difficult to learn.  More \softline
recently, Nosofsky, Gluck, Palmeri, McKinley and Glauthier (1994), replicated Shepard et al.'s \softline
(1961) task using many more subjects, and reported detailed information relating to the learning \softline
curves.  Figure 6b shows the mean proportion of errors for each category type. Consistent with 
the conclusions originally drawn by Shepard et al. (1961), it is generally held that the \softline
theoretically important qualitative trend in these data is the finding that there is a natural ordering \softline
on these curves, namely that I<II<(III, IV, V)<VI. This kind of pattern is called a weak order, \softline
since the possibility of ties is allowed.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \i Figure 6 here}{\plain \fs24 \par
}\pard \fs24\s30\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \ul \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 The psychological importance of this weak order structure is substantial. Suppose we had two \softline
models of the category learning process, }{\plain \fs24 \i A}{\plain \fs24  and }{\plain \fs24 \i B}{\plain \fs24 , of roughly equal complexity. Model }{\plain \fs24 \i A}{\plain \fs24  provides \softline
a reasonably good quantitative fit to the data, by assuming that all types are learned at the same \softline
rate, which closely approximates the average across the six empirical curves. In contrast, model \softline
}{\plain \fs24 \i B}{\plain \fs24  reproduces the ordering I<II<(III, IV, V)<VI, but learns far too slowly and, as a result, fits the \softline
data much worse than model }{\plain \fs24 \i A}{\plain \fs24 . Since the models are of equivalent complexity, a classical model \softline
selection analysis would prefer model }{\plain \fs24 \i A}{\plain \fs24 . However, while clearly both models have some flaws, \softline
most psychologists would prefer model B, because it captures the}{\plain \fs24 \i  theoretically relevant }{\plain \fs24 property \softline
of the data. This discrepancy arises because statistical criteria tend to assume that all properties of \softline
the data are equally relevant. In many psychological applications, this is not the case. In what \softline
follows, we will assume that the weak order structure is the important theoretical property of the \softline
empirical data, and will use the PSP method to ask how effectively ALCOVE captures this \softline
structure.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \ul The PSP Analysis}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 As with any parameterized model, ALCOVE makes different predictions at different parameter \softline
values }{\plain \fs24 \b (CITATION: the paper that Tom Palmeri sent Jay??)}{\plain \fs24  . When applied to the Shepard \softline
et al. (1961) task, ALCOVE will sometimes produce curves that have the same qualitative \softline
ordering as the empirical data, but at other times they will look quite different. It would be nice to \softline
know something about the }{\plain \fs24 \i other}{\plain \fs24  orders that ALCOVE can produce, since it seems that we might \softline
learn something about the model itself. A PSP analysis can provide such information. Using the \softline
{\u8220\'93}weak order{\u8221\'94} definition of a pattern of curves, there are 4683 different data patterns that a model \softline
could produce. One would hope that ALCOVE generates only a small proportion of these, and \softline
that the extra patterns it does produce are interpretable in terms of human performance. \par
}{\plain \fs24 \par
}{\plain \fs24 \ul Preliminaries\par
}{\plain \fs24 We now have a model, a data set, and an intuitive definition of a data pattern. To perform PSP \softline
analyses, a formal method of associating a set of learning curves with a particular pattern must be \softline
rigorously defined. The judgement that I<II<(III, IV, V)<VI is the appropriate empirical pattern \softline
has generally been based on visual inspection of the curves. It is possible to be more precise \softline
about this, allowing us to uniquely associate a set of learning curves with a qualitative ordering to \softline
yield a data pattern. The details of this procedure, which is essentially a clustering analysis, are \softline
provided in Appendix B. \par
}{\plain \fs24 \par
}{\plain \fs24 For the PSP analysis of ALCOVE, we constrained the parameter vectors (}{\plain \fs24 \i c}{\plain \fs24 ,}{\plain \fs24 \i  {\f1\u966\'f6}}{\plain \fs24 ,}{\plain \fs24 \i   {\f1\u951\'e7}{\field{\*\fldinst ADVANCE \\d 3}{\fldrslt }}w{\field{\*\fldinst ADVANCE \\u 3}{\fldrslt }}}{\plain \fs24 , }{\plain \fs24 \i {\f1\u951\'e7}{\field{\*\fldinst ADVANCE \\d 3}{\fldrslt }}a{\field{\*\fldinst ADVANCE \\u 3}{\fldrslt }}}{\plain \fs24 ) to lie \softline
between (0,0,0,0) and (20,6,.2,.2), and disallowed any parameter combination that did not 
produce monotonic curves. A technical complication is introduced by the fact that ALCOVE{\u8217\'92}s \softline
predictions are slightly dependent on the order in which stimuli are observed. Each stimulus has \softline
a different effect on ALCOVE, so variations in order of presentation produce slight perturbations \softline
in the response curves. However, even these minor perturbations can violate the continuity \softline
assumptions that underlie the PSP algorithm. In order to deal with these order effects, we chose \softline
20 random stimulus orders, and ran the PSP algorithm 10 times for each stimulus order, yielding \softline
a total of 200 runs. As it turns out, the important properties of ALCOVE are invariant under \softline
stimulus reordering, but some unimportant properties are not. \par
}{\plain \fs24 \par
}{\plain \fs24 \ul How Many Data Patterns can ALCOVE Produce?\par
}{\plain \fs24 After running the PSP algorithm 200  times, we observed that each run produced a different \softline
number of patterns, ranging from a minimum of 32 to a maximum of 122. Although this range is \softline
substantial, it reflects an inherent variability in ALCOVE moreso than the PSP algorithm itself. \softline
The mean number of patterns recovered for a particular stimulus order ranged from 46.5 to \softline
102.8, while the range in the number of patterns recovered within an order was minimal: the \softline
smallest range was a mere 7 patterns, while the largest was 36. Moreover, there was an important \softline
amount of redundancy across the 200 runs, with 17 patterns being found on every occasion, \softline
which included the empirical pattern I<II<(III,IV,V)<VI. We will refer to these 17 patterns as \softline
{\u8220\'93}universal{\u8221\'94} patterns, and the other 183 patterns as {\u8220\'93}particular{\u8221\'94} patterns. \par
}{\plain \fs24 \par
}{\plain \fs24 Compared to the set of all 4683 possible data patterns, even the largest count of 17+183=200 \softline
patterns encompassed by ALCOVE is quite a small number. In a sense, this is quite a success for \softline
the model, because the empirical pattern suddenly looks far less unlikely if we assume humans \softline
do something rather ALCOVE-like. Even in the scenario where we allow }{\plain \fs24 \i all}{\plain \fs24  200 recovered \softline
patterns to be treated as a genuine ALCOVE prediction, the empirical pattern is one 1 pattern in \softline
200, rising from the much less satisfying base rate of 1 in 4683. Even if the substantive \softline
predictions are restricted to the set of universal patterns, the empirical pattern is now 1 in 17. \softline
Either way, ALCOVE provides a reasonably good qualitative account of these data.\par
}{\plain \fs24 \par
}{\plain \fs24 This initial analysis demonstrates that ALCOVE passes a basic sufficiency test, in that it can \softline
account for the qualitative structure of the observed data without {\u8220\'93}going overboard{\u8221\'94}, and \softline
producing every possible pattern. Of course, as psychologists, we are interested in more than just \softline
how many patterns that ALCOVE, and this analysis is just the tip of the iceberg as far as what \softline
can be learned from PSP. For example, it would be useful to know what kinds of category-type \softline
orderings are generally preserved across all 200 data patterns. One crude method for determining \softline
this is to find the average position (i.e., its rank among the six curves) of each category type \softline
across all patterns. This is illustrated in Figure 7, which plots the mean rank for each of the six \softline
types across all patterns for both universal and particular patterns. It is clear that  rank tends to \softline
increase as the index of the type increases. The main difference between the two types of patterns \softline
is that the universals do not really distinguish between Types II, III and possibly IV, whereas the \softline
particulars do. Nevertheless, it seems to be the case that, on average, rank does not decrease with \softline
index. This is encouraging, because both empirically and algebraically, the difficulty of the task \softline
either increases or stays constant as the index increases (see Feldman 2000). This analysis 
demonstrates that on average, the set of 200 patterns that make up ALCOVE{\u8217\'92}s entire set of \softline
qualitative predictions roughly preserve an important property of the empirical data: A \softline
monotonic increase in learning difficulty across category type.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \i Figure 7  here\par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 \ul Which Patterns Matter?\par
}{\plain \fs24 The preceding analysis considered the collection of all 200 patterns as equally informative. \softline
However, the very fact that some are frequent (universals) and others rare (particulars) suggests \softline
that some may be more representative of model behavior than others. We explore this possibility \softline
here.\par
}{\plain \fs24 \par
}{\plain \fs24 The frequency with which a pattern is found strikes us as an unsatisfying definition of its \softline
importance to a model{\u8217\'92}s behavior, since it confounds the model properties with the robustness of \softline
the search algorithm. It was therefore necessary to make some assumptions that allow us to \softline
identify the major patterns that are responsible for most of ALCOVE{\u8217\'92}s behavior. If we accept the \softline
notion that ALCOVE's parameters are interpretable and psychologically well-founded (see \softline
Kruschke 1993), then it makes sense to treat the parameter space itself as embodying not just its \softline
full range of behaviors, but those that best characterize its performance. Specifically, if a pattern \softline
can be produced only within a tiny region in the parameter space, then it is probably safe to \softline
dismiss it as largely irrelevant to the model. By doing this for all data patterns, we can estimate \softline
the proportion of the parameter space that is taken up by each, and then use these quantities to \softline
identify the most prevalent patterns.\par
}{\plain \fs24 \par
}{\plain \fs24 Note that the outcome of such an analysis depends on the manner in which ALCOVE{\u8217\'92}s \softline
parameters are formalized. In statistical terms, the conclusions are no longer invariant under \softline
reparametrization. This is not necessarily a bad thing, so long as we have some principled prior \softline
reason on how to parametrize the model. Arguably, the nature of the exemplar theory on which \softline
ALCOVE is based, and the manner in which the model captures Kruschke{\u8217\'92}s (1993) {\u8220\'93}three \softline
principles{\u8221\'94}, provide exactly this kind of justification. \par
}{\plain \fs24 \par
}{\plain \fs24 As it turns out, there is a strong relationship between the size (i.e., volume) of the region \softline
occuppied by a pattern and the frequency with which it was discovered across the 200 runs. In \softline
Figure 8, the log of the average volume for each of the 200 patterns discovered is plotted against \softline
the frequency with which they were discovered. Patterns shown on the far left are the ultimate \softline
particulars, having been discovered only once, while patterns on the far right are the universals, \softline
having been discovered on every occasion. Noting that the scale is logarithmic, we observe that \softline
the universals are by far the largest patterns. The empirical pattern, indicated by the circle, is one \softline
of the larger patterns, and is a universal.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \i Figure 8 here\par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 The data in Figure 8 let us refine the answer to the question, {\u8220\'93}To what extent does ALCOVE 
}{\plain \fs24 \i predict}{\plain \fs24  the empirical pattern?{\u8221\'94} The fact that the empirical pattern is among the 17 universals is \softline
encouraging, as is the regularity suggested by Figure 7. However, by considering the size of the \softline
various regions, we can take this analysis a step further. We could, for instance, exclude all \softline
patterns that do not reach some minimum average size. This approach is illustrated by the \softline
horizontal threshold shown in Figure 8: only patterns that occupy more than 1% of the parameter \softline
space on average lie above this line. This is a pretty stringent test, given that the parameter space \softline
is four-dimensional. Indeed, the empirical pattern occupies only about 2% of the space. \par
}{\plain \fs24 \par
}{\plain \fs24 In total, only twelve patterns (all universals) occupy more than 1% of the space, as shown in \softline
Table 2, and some general properties of ALCOVE{\u8217\'92}s behavior emerge when examined together. \softline
Looking across patterns, it is clear that Types III and IV are always (12 of 12) predicted to be \softline
learned at about the same rate, and Type V is usually (10 of 12) also about the same. Type VI, on \softline
the other hand, is mostly learned slower than III, IV and V (7 of 12). Type I is usually (9 of 12) \softline
faster than III-VI, as is Type II (8 of 12). So, not only is the empirically-observed pattern \softline
I<II<(III,IV,V)<VI among the largest patterns (it is the eighth largest), but the other large patterns \softline
generally preserve most of the pairwise relations found in the empirical data. They are, in short, \softline
{\u8220\'93}close{\u8221\'94} to the empirical pattern. The exception to this claim regards the relationship between \softline
Types I and II. Their ordering is ambiguous. It might be that I<II (5 of 12), or I=II (4 of 12), or \softline
even II<I (3 of 12). In this case, ALCOVE does not make a strong qualitative prediction.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \i Table 2 here\par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 \ul Summary\par
}{\plain \fs24 These analyses demonstrate that ALCOVE makes strong and accurate predictions about the \softline
qualitative structure of the data that should be found in the Shepard et al (1961) task.\par
}{\plain \fs24 [Review types of analyses that were performed and what was found.]}{\plain \fs24 }{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \b Probing Design Differences Between Models: \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \b A Comparison of Merge and TRACE}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 In addition to learning about the behavior of a single model, PSP analyses can inform us about \softline
the behavioral consequences of design differences between models. In this section, we \softline
demonstrate its application to comparing two localist connectionist models of speech perception. \softline
Connectionist models were chosen to show how PSP analyses can help make inroads into \softline
understanding the behaviors of highly nonlinear models that results from the interconnectedness \softline
among their parts. The localist variety was chosen because of its popularity in some content areas \softline
(e.g., language, memory; Grainger & Jacobs, 1998). This particular pair of models,  TRACE \softline
(McClelland & Elman, 1986) and Merge (Norris, McQueen, & Cutler, 2000), was chosen to \softline
learn the extent to which their slight architectural differences make them functionally distinct, \softline
and because we had previously worked with them (Brunsman, Myung, & Pitt, 1999). \par
}{\plain \fs24 \par
}{\plain \fs24 Schematic diagrams of the designs of each model are shown in Figure 9. They are similar in \softline
many ways. Both have a phonemic input stage and a word stage. There are excitatory connections \softline
from the phoneme input to the word stages, and inhibitory connections within the word stage. 
They differ in how prior knowledge is combined with phonemic input to yield a phonemic \softline
decision (percept). In TRACE, word (prior) knowledge can directly affect sensory processing of \softline
phonemes. This is represented by direct excitatory connections from the word stage back down to \softline
the phoneme stage. Also note that in TRACE the phoneme stages performs double duty, also \softline
serving as a phoneme decision stage. In Merge, these two duties are purposefully separated into \softline
two distinct stages to prevent word information from affecting sensory registration of phonemes. \softline
Instead, lexical knowledge affects phoneme identification via excitatory connections from the \softline
word to the phoneme-decision stage. In contrast to the direct interaction between phoneme and \softline
word levels in TRACE, these two sources of information are integrated at a later decision stage \softline
in Merge.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \i Figure 9 here}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 Although not visible in the diagrams in Figure 9, the models differ in another important way. In \softline
keeping with the belief that bottom-up (sensory) information must take priority in guiding \softline
perception early in processing, activation of a phoneme decision node in Merge must be initiated \softline
by phoneme input }{\plain \fs24 \i before }{\plain \fs24 excitatory lexical activation can affect phoneme decision making. \softline
TRACE contains no such constraint.\par
}{\plain \fs24 \par
}{\plain \fs24 The goal of our investigation was to assess the impact of these two design differences on }{\plain \fs24 \i global \softline
}{\plain \fs24 model behavior. Norris et al (2000) proposed Merge as an alternative to TRACE because they \softline
felt the evidence from the experimental literature did not warrant a conclusion as strong as direct \softline
word-to-phoneme feedback (i.e., interaction). Integration of phonemic and word information at a \softline
later decision stage is, in their view, more in line with the data.\par
}{\plain \fs24 \par
}{\plain \fs24 The adequacy of the Merge architecture was demonstrated in simulation tests in which it \softline
performed just as well as, if not slightly better than, TRACE in reproducing key experimental \softline
findings of how word knowledge affects phoneme processing.  PSP analyses of the models{\u8217\'92} \softline
behaviors were performed in two of these experimental settings. In the first, the subcategorical \softline
mismatch study by }{\plain \fs24 Marslen-Wilson and  Warren (1994)}{\plain \fs24 , the consequences of splitting  phoneme \softline
processing into separate input and decision stages was evaluated. In the second, the indirect \softline
inhibition experiment of Frauenfelder, Segui, and Dijkstra (1990), the contribution of the bottom-up priority rule to model performance was examined.\par
}{\plain \fs24 \par
}{\plain \fs24 To compare the two models, it was necessary to equate them in every way possible to ensure that \softline
differences in performance were attributable only to design differences, not other factors, such as \softline
the size of the lexicon. In essence, we wanted to compare the fundamental structural and \softline
functional properties that define the models. We did this by first implementing the version of \softline
Merge described in Norris et al (2000), and then making the necessary changes to Merge to turn \softline
it into TRACE (Norris et al essentially did this). When finished, the source code for the two \softline
models, written in Matlab, was identical except for the sections that corresponded to their design \softline
differences. TRACE required 4 fewer parameters than Merge (8 vs. 12) because the phoneme 
input and decision stages were combined. The names of the parameters, along with other model \softline
details, are in Appendix C.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \ul Interaction vs Integration}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 The first comparison of the two models was performed in the context of the subcategorical \softline
mismatch experiment of Marslen-Wilson and Warren (1994, Experiment 1; McQueen, Norris, & \softline
Cutler, 1999, Experiment 3).  It is attractive because of the large number of conditions and \softline
response alternatives, which together permitted detailed analyses of model behavior at both the \softline
phonemic and lexical levels.\par
}{\plain \fs24 \par
}{\plain \fs24 In the experiment, listeners heard one-syllable utterances and then had to classify them as words \softline
or nonwords (lexical decision task) or categorize the final phoneme (phonemic decision task). \softline
The stimuli were made by appending a phoneme (e.g., /b/ or /z/) that was excised from the end of \softline
a word (e.g.,}{\plain \fs24 \i  job}{\plain \fs24 ) or nonword (e.g., }{\plain \fs24 \i joz}{\plain \fs24 ) to three preceding contexts, to yield six experimental \softline
conditions (listed in Table 3). The first context was a new token of those same items but with the \softline
final consonant removed (e.g., }{\plain \fs24 \i jo}{\plain \fs24 ), to create cross-spliced versions of  }{\plain \fs24 \i job }{\plain \fs24 and }{\plain \fs24 \i joz}{\plain \fs24 . The second \softline
consisted of equivalent stretches of speech from a word that differed only in the final consonant \softline
(e.g,, }{\plain \fs24 \i jo }{\plain \fs24 from }{\plain \fs24 \i jog }{\plain \fs24 in both cases}{\plain \fs24 ). The third was the same as the second except that the initial parts \softline
were excised from two nonwords (e.g., }{\plain \fs24 \i jo }{\plain \fs24 from }{\plain \fs24 \i jod }{\plain \fs24 and }{\plain \fs24 \i jo }{\plain \fs24 from }{\plain \fs24 \i jov}{\plain \fs24 ). \par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \i Table 3 here}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 Because cues to phoneme identity overlap in time (due to coarticulation in speech), a \softline
consequence of cross-splicing is that cues to the identity of the final consonant will conflict when \softline
the first word ends in a consonant different from the second. For example,  }{\plain \fs24 \i jo }{\plain \fs24 from }{\plain \fs24 \i jog}{\plain \fs24  contains \softline
cues to /g/ at the end of the vowel, which will be present in the resulting stimulus when \softline
combined with the /b/ from }{\plain \fs24 \i job}{\plain \fs24  (Condition 2 in Table 3).}{\plain \fs24 \par
}{\plain \fs24 \par
}{\plain \fs24 Marslen-Wilson and Warren (1994) were interested in how such stimuli affect phoneme and \softline
lexical processing. As the results in Table 3 show (taken from McQueen et al, 1999), in the \softline
lexical decision task, reaction times slowed when listeners heard cross-spliced stimuli, but \softline
responding was not affected by the source of the conflicting cues (i.e., Conditions 2 and 3 are \softline
equivalent).  Phoneme categorization, in contrast, was sensitive to the subtle variation in \softline
phonetic detail, but only when the stimulus itself formed a nonword (e.g., }{\plain \fs24 \i joz}{\plain \fs24 ; Conditions 5 and \softline
6).\par
}{\plain \fs24 \par
}{\plain \fs24 Merge can simulate this complex pattern of results. TRACE can as well if the number of \softline
processing cycles is increased from one to 15 (Norris et al, 2000). As with ALCOVE, a PSP \softline
analysis will reveal what other data patterns (i.e., lexical/phoneme classification responses) these \softline
models can generate in the experimental design. By comparing their frequency, similarity, and \softline
the centrality of the empirical data among all patterns, the consequences of splitting the phoneme \softline
level in two should begin to emerge. This comparison can also be extended to the reaction time \softline
data to determine if ordinal relations across conditions are maintained or violated.\par
}{\plain \fs24 To the extent that differences are found across models, they are more than likely a result of their \softline
different structural properties (one phoneme stage vs two). The use of cross-spliced stimuli \softline
nullifies the bottom-up priority rule in Merge, which otherwise might have contributed to any \softline
differences (see Norris et al, 2000, for details).\par
}{\plain \fs24 \par
}{\plain \fs24 \ul Details of the PSP analysis}{\plain \fs24 \par
}{\plain \fs24 Recall that a PSP analysis requires the researcher to define a data pattern in the experimental \softline
setting. Frequently this will take the form of ordinal relations among conditions. In the \softline
subcategorical mismatch experiment, there were two dependent measures of performance, \softline
classification (What was the final phoneme? Was the utterance a word?) and the speed with \softline
which this decision was made (response time). Rather than define a data pattern using both \softline
measures simultaneously, we first compared classification behavior of the models within their \softline
parameter spaces and then performed a focused investigation of the RT predictions within the \softline
region occupied by the empirical data pattern (i.e., listener performance).\par
}{\plain \fs24 \par
}{\plain \fs24 Classification in connectionist models is usually defined as the activation state of the network \softline
when specific decision criteria are met, such as a phoneme node exceeding an activation \softline
threshold. Because there are multiple experimental conditions in the experiment, as with the \softline
ALCOVE analysis, a data pattern is really a profile of model classifications across these \softline
conditions. In the subcategorical mismatch experiment, there are six conditions, with a phoneme \softline
and lexical response in each, for a total of 12 categorization responses that together yield a single \softline
data pattern.\par
}{\plain \fs24 \par
}{\plain \fs24 Given the large number of conditions and multiple response alternatives in each task, the total \softline
number of possible data patterns is enormous. To understand why, take a look at the right half of \softline
Table 3, which lays out the conditions and response categories for each task in the model \softline
simulations. There were four possible phoneme responses, /b/, /g/, /z/, /v/.  In lexical decision, \softline
there were three categories, a nonword response and two word responses, {\u8220\'93}job{\u8221\'94} and {\u8220\'93}jog.{\u8221\'94} The \softline
reason for distinguishing between the words was that just as listeners would perceive two \softline
different words, we were interested in whether the models, if given the opportunity, would \softline
differentiate between them as well. The cells of this 6x7 response matrix that contain asterisks \softline
denote human classification performance and constitute the empirical data pattern. A change in \softline
any of these responses produces a new data pattern. With four phoneme and 3 lexical responses, \softline
there were a total of 2,985,984 (4}{\plain \fs24 \super 6}{\plain \fs24  x 3}{\plain \fs24 \super 6}{\plain \fs24 ) patterns. Of interest is how many and which of these \softline
patterns TRACE and Merge produce.\par
}{\plain \fs24 \par
}{\plain \fs24 Not one but two decision rules were used to define a categorization response by the models. The \softline
effect of these rules is that they establish the necessary mapping between the continuous space of \softline
network states to the discrete space of data patterns, making it possible to associate each data \softline
pattern with a region in parameter space. Because any one rule could yield a distorted view of \softline
model performance, the use of two enabled us to assess the generality of the results. In addition, \softline
we found that some model properties that are not evident with one criterion emerged when \softline
performance was compared across the rules. The first rule, labeled }{\plain \fs24 \i weak threshold}{\plain \fs24 , was a fixed 
activation threshold, with values of .4 for phoneme nodes and .2 for lexical nodes. It is the same \softline
rule used by Norris et al (2000), and was adopted to maintain continuity across studies.\par
}{\plain \fs24 \par
}{\plain \fs24 The second rule, dubbed }{\plain \fs24 \i stringent threshold}{\plain \fs24 , required classification to be more decisive by \softline
requiring the activation level of competing nodes to be significantly lower than the winning node. \softline
Two threholds were used, the higher of which is the lower bound for the chosen node and the \softline
lower of which is the upper bound for the nearest competitor. These values were .45 and .25 for \softline
phoneme classification, and .25 and .15 for lexical decision. Two other constraints were also \softline
enforced as part of the stringent threhold. There had to be a minimum difference in activation \softline
between the winning node and its closest competitor of .3 for phoneme classification and .15 for \softline
lexical decision. Finally, for nonword responses in lexical decision, the difference in activation \softline
between the two lexical items, }{\plain \fs24 \i jog}{\plain \fs24  and }{\plain \fs24 \i job}{\plain \fs24 , could not be more than .10.\par
}{\plain \fs24 \par
}{\plain \fs24 The models were designed as depicted in Figure 9. }{\plain \fs24 \i job}{\plain \fs24  and }{\plain \fs24 \i jog }{\plain \fs24 were the only two lexical nodes \softline
and there were the necessary phoneme nodes, with  /b/, /z/, /g/, /v/ being of  primary interest. The \softline
PSP algorithm was run using each model and decision rule. It is important to understand that \softline
when a model simulation was performed with a set of parameter values, to obtain a data pattern, \softline
all six stimuli (Table 3) had to be fed to the model and both phoneme and lexical classification \softline
responses assessed. The algoritm and models were run in Matlab  on a Pentium IV computer. \softline
The time required to find all patterns varied greatly, taking as little as 22 minutes (TRACE, \softline
stringent threshold) and as long as 24 hours (Merge, stringent threshold).  The consistency of \softline
results was ascertained using five multiple runs for each model and threshold.\par
}{\plain \fs24 \par
}{\plain \fs24 \ul Classification Analyses}{\plain \fs24 \par
}{\plain \fs24 Adoption of almost any decision rule means that not every model simulation with a given set of \softline
parameter values will yield a response pattern that satisfies the rule. Failure to do so can be for a \softline
variety of reasons, such as no node reaching threshold or multiple nodes exceeding threshold. As \softline
a result, there can be sizable regions of the parameter space that contain what can be considered \softline
invalid (no-response or strange-response) patterns. Athough the study and comparison of such \softline
patterns across models could be informative, we restricted our analyses to those regions that \softline
yielded patterns that satistifed one of the two rules (i.e., valid patterns).\par
}{\plain \fs24 \par
}{\plain \fs24 The analysis began by comparing classification (asymmtopic) performance of the two models. \softline
Table 4 contains a number of measures that define their relationship under the weak and stringent \softline
thresholds. The second column contains venn diagrams that depict the similarity relation between \softline
the models when measured in terms of the data patterns each can generate. Looking first at the \softline
weak threshold data, both models generate 22 common patterns, with TRACE producing only a \softline
few unique patterns compared to Merge (3 vs 29). The filled dot represents the empirical pattern. \softline
Its location in the intersection indicates that both models can produce it.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \i Table 4 here}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 The nature of the overlap in the diagram reflects the fact that TRACE is virtually nested within \softline
Merge, with 22 of its 25 patterns also being ones that Merge produces. This nested relationship, \softline
combined with the 29 extra Merge patterns, suggests that in the subcategorical design, Merge is a \softline
more flexible model than TRACE. That is, Merge{\u8217\'92}s ability to generate more data patterns makes \softline
it more complex than TRACE (Myung, 2000; Pitt et al, 2002). That said, the difference is it not \softline
all that great, although it does not disappear under further scrutiny (see below). Perhaps most \softline
impressively, both models are highly constrained in their performance, generating fewer than 60 \softline
of the some 3 million patterns that are possible in the design.\par
}{\plain \fs24 \par
}{\plain \fs24 As might be expected when the stringent threshold is imposed, both models generate fewer \softline
patterns, with TRACE producing 7 (72% fewer) and Merge 32 (27% fewer). Despite the \softline
differential effects of the change in threshold, the relationship between the models remains \softline
unchanged, with TRACE still nested within Merge. One surprise is that the lone unique TRACE \softline
pattern turns out to be the empirical data, which Merge no longer generates. What stands out \softline
most in a comparison of the venn diagrams is that the change in threshold primarily caused a \softline
drop in the number of common patterns, indicating that the models are more distinct under the \softline
stringent threshold. To understand why, the regions in parameter space occcupied by these \softline
patterns must be examined.\par
}{\plain \fs24 \par
}{\plain \fs24 Columns 3 and 4 contain estimates of the proportion of the parameter space occupied by the \softline
valid data patterns. Far less of TRACE{\u8217\'92}s parameter space is used than Merge{\u8217\'92}s. Predictably, the \softline
regions shrink when the stringent threshold is applied, although the shrinkage is much more \softline
dramatic for Merge than TRACE. If one then examines how much of each valid volume is \softline
occupied by common and unique patterns, an answer to the above question presents itself. For \softline
TRACE (column 5), this region is occupied almost entirely by the 22 common patterns (.99). \softline
Under the stringent threhold, this value drops slightly to .84, but because there is only one unique \softline
pattern in this case, its value must be .16, the size of the region occupied by the empirical pattern. \softline
The remaining 15 common patterns occupied such tiny regions in TRACE{\u8217\'92}s parameter space \softline
under the weak threshold that application of the stringent threshold eliminated them. A similar \softline
situation occurred with Merge (column 6), with 12 of the 16 common patterns (of which the \softline
empirical pattern was one) disappearing due to a change in threshold. Four became unique to \softline
Merge. A few patterns unique to each model also failed to satisfy the stringent threshold (3 for \softline
TRACE and 7 for Merge).\par
}{\plain \fs24 \par
}{\plain \fs24 Although a change in threshold brings out differences in the models, analysis of their common \softline
patterns and their behaviors in other ways reveals an impressive degree of similarity. For \softline
example, under the weak threshold, the regions in parameter space of all 22 patterns are \softline
comparable in size across models. To measure this, we correlated the rank orderings (from \softline
smallest to largest) of the volumes in the two models. Use of the actual volume estimates \softline
themselves is inappropriate because of differences in model structure and  parameterization. \softline
With rho= .79, the correlation is high. For the stringent threshold it is even higher,  rho=1.0, but \softline
keep in mind that there were only six data points in this analysis. Such strong associations \softline
indicates that the overlap between models is not just nominal in terms of shared data patterns, but 
those regions are similar in relative size with all other common regions, making them \softline
functionally highly similar at a qualitative level.\par
}{\plain \fs24 \par
}{\plain \fs24 To the extent that a model produces data patterns other than the empirical one, a mark of a good \softline
model is for its performance to degrade gracefully. In the present context, this means that \softline
deviations from the empirical pattern should be minor, not severe. We measured the degree of \softline
deviation by comparing each mismatching pattern (common and unique) with the empirical \softline
pattern and counting the number of mismatches. Because predictions across 12 conditions \softline
constitute a data pattern, there were a maximum of 12 mismatches (6 phonemic and 6 lexical). \softline
Histograms of the mismatch distances were create for both models and are show in Figure 10, \softline
along with a histogram of the frequency of all possible mismatches.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \i Figure 10 here}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 Both models show a remarkable proclivity to produce human-like data. The distributions are \softline
positioned near the zero endpoint (empirical pattern) with peaks between 2 and 4 mistmatches. \softline
The probability is virtually zero that a random model (i.e., a random sample of patterns) would \softline
display such a low mismatch frequency. Changes in threshold shift the distributions ever so \softline
slightly righward. Both Merge distributions are shifted slightly to the right of the TRACE \softline
distributions. This latter result is likely due to Merge{\u8217\'92}s unique patterns given that most of \softline
TRACE{\u8217\'92}s patterns are nested within Merge{\u8217\'92}s. [Footnote]\par
}{\plain \fs24 \par
}{\plain \fs24 An equally desireable property of a model is that patterns that mismatch across many conditions \softline
occupy a much smaller region in the parameter space than those that mismatch by only one or \softline
two conditions. That is, mismatching patterns on the right side of the histograms in Figure 10 \softline
should have smaller volumes than those on the left. This turns out to be the case for both models \softline
and to a similar extent. When pattern volume is correlated with mismatch distance, there is a \softline
modest relationship between the measures (r=.35 for TRACE and .34 for Merge).\par
}{\plain \fs24 \par
}{\plain \fs24 The data in Figure 10 raise questions such as what types of classification errors were made and \softline
whether they were the same across models? To answer them, the proportion of mismatches in \softline
each of the 12 conditions was computed for each model and are plotted in Figure 11. The profile \softline
of mismatches across conditions reveals more similarities than differences between the models. \softline
In 10 of the 12 conditions, both models performed similarly. Neither model produced a single \softline
mismatch in the same four conditions, and both models produced mismatches in the same six \softline
conditions. Looking across all conditions, model behavior differs in two global ways. Merge \softline
produced more phoneme misclassifications (conditions 3 and 6) and TRACE produced a greater \softline
proportion of lexical misclassifications. In the four phoneme conditions in which errors were \softline
made, the final phoneme was created by crosss-splicing two different phonemes, creating input \softline
that specified one weakly and the other strongly. The errors are a result of misclassifying the \softline
phoneme as the more weakly specified (lowercase) alternative (e.g.,  }{\plain \fs24 \i g}{\plain \fs24  instead of }{\plain \fs24 \i B}{\plain \fs24 ). By design, \softline
Merge{\u8217\'92}s bottom-up only architecture hightens its sensitivity to sensory information, which in the \softline
present simulation made it a bit more biased than TRACE to misclassify cross-spliced phonemes.\par
}{\plain \fs24 Lexical misclassification errors in TRACE are due to a bias to respond nonword, which is a bit \softline
mysterious. If anything, one would expect the excitatory loop between the phoneme and lexical \softline
levels to give TRACE a lexical bias. Note that not all misclassifications are due to responding \softline
{\u8220\'93}nonword.{\u8221\'94}  In condition 5, they are entirely due to classifying the stimulus as }{\plain \fs24 \i jog}{\plain \fs24 . This also \softline
occurred in condition 2, but much less often. Misclassificaitons as jog constituted .08 of the \softline
mistmaches for TRACE and .03 for Merge.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \i Figure 11 here}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 Although some misclassifications can be legitimized on many grounds (e.g., humans make such \softline
errors, perception of ambiguous stimuli will not be constant), it is important to determine \softline
whether they are characteristic behaviors of the model or ideosyncratic patterns, rather like the \softline
{\u8220\'93}particulars{\u8221\'94} defined in the ALCOVE analysis. That is, it is useful to distinguish between \softline
unrepresentiative and representative behaviors. To do so, we measured the volumes of all regions \softline
identified by the PSP algorithm. As in the ALCOVE analysis, a threshold of 1% of the valid \softline
volume was adopted to define a meaningful pattern. When this is done, many patterns turn out to \softline
be noise and the set of representative patterns is reduced to a handful. For TRACE, 21 of its \softline
patterns (3 unique and 18 common) do not meet this criterion. Four patterns, all common, \softline
dominate in volume, together accounting for 99% of the volume (range 3.8 % - 45.2%).  For \softline
Merge, the set of dominant patterns is larger, and is split equally between common and unique \softline
patterns. Thirty six patterns (21 unique and 15 common) fail to reach the 1% criterion. Seven \softline
common (range 1.3 - 21.1) and eight unique (1.4 - 15.7) patterns do so and make up 96% of the \softline
valid volume. Even with a threshold that eliminated 75% of all patterns, the asymmetry in pattern \softline
generation between the models is still present (TRACE=4; Merge=15).\par
}{\plain \fs24 \par
}{\plain \fs24 The volumes of the representative common patterns are graphed in Figure 12. The numerals in \softline
the legend refer to the mismatch distance of each region from the empirical pattern. Most \softline
obvious is the fact that the empirical pattern is much larger in TRACE than in Merge (33.1% and \softline
6.8%) and that one mismatching pattern (filled black) dominates in both models (45.2% and \softline
21.1%). This pattern turns out to be one in which there is a bias to classify all stimuli as \softline
nonwords. As a group, the eight unique Merge patterns mismatch the empirical pattern more than \softline
the common patterns. The largest pattern occupies a region of 15.7% (six mismatches), nearly \softline
twice the next largest region (8.9%). In this pattern, not only did Merge exhibit the same \softline
nonword response bias, but it also categorized cross-spliced phonemes as the competing \softline
(remnant) phoneme.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \i Figure 12 here}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 \ul Reaction Time Analyses}{\plain \fs24 \par
}{\plain \fs24 Up to this point in the analysis we have compared asymmptotic performance of the models, but \softline
the time course of processing is equally important, as experimental predictions often hinge on \softline
differences in response times between conditions. Connectionist models are generally evaluated \softline
on their ability to classify stimuli at a rate (e.g., number of cycles) that maintains the same 
ordinal relations across conditions found with RTs. To assess the robustness of simulation \softline
performance, parameters can be varied slightly and additional simulations can be run to ensure \softline
that the model does not violate this ordering (e.g., by producing a reversal of the RT pattern). In \softline
their tests of Merge and TRACE, Norris et al (2000) found neither produced an RT reversal. Our \softline
test was a more exhaustive version of theirs.\par
}{\plain \fs24 \par
}{\plain \fs24 The PSP analysis defines for us the region in the parameter space of each model that corresponds \softline
to the empirical pattern. When assessing RT performance, what we want to know is whether \softline
there are any points in this region (i.e., parameter sets) that yield invalid RT patterns, as defined \softline
by the ordinal relations among conditions in the experiment (i.e., the RT pattern in the six \softline
phonemic and three lexical conditions in Table 3). To perform this analysis, 10,000 points were \softline
sampled over the uniform distribution of the empirical region. Simulations were then run with \softline
each sample and the cycle time at which classification occurred was measured and compared \softline
across all conditions. Violations were defined as reversals in cycle times between adjacent \softline
conditions (e.g., condition 1 vs. condition2) in phoneme classification and lexical decision.  Just \softline
as Norris et al (2000) reported, we did not find a single reveral between conditions for either \softline
model.\par
}{\plain \fs24 \par
}{\plain \fs24 \ul Summary}{\plain \fs24 \par
}{\plain \fs24 The PSP analyses reveal that the consequences of splitting the phoneme level in two, which \softline
effectively softens lexical influences, produces a slightly more flexible model, one that can of \softline
producing more data patterns. This was found when all patterns were considered and when those \softline
that were deemed most representative were considered. Of more interest is the nature of this \softline
additional flexibility; that is, the relationship between the models as a result of the structural \softline
change. By splitting the phoneme level in two, Merge did not undergo significant \softline
transformations. Rather, the model{\u8217\'92}s behavior was expanded, as the nested relationship shows. \softline
Merge retained  many of TRACE{\u8217\'92}s behaviors (producing most of its patterns) plus acquired new \softline
ones. A consequence of this expansion is that the representativeness of these behaviors is \softline
considerably different across models, as shown in Figure 12. It is because these are quantitative \softline
more so than qualitative that the models are so similar on other dimensions (e.g., frequency and \softline
types of mismatches, response time relations between conditions).\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \ul The Bottom-up Priority Rule}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 This second comparison of TRACE and Merge was performed to determine how the addition of \softline
a bottom-up priority rule in Merge distinguishes it from TRACE. Recall that the two models \softline
differ in the sources of information that can initiate phoneme decision making. In Merge, for a \softline
phoneme decision node to become activated (Figure 9), excitation must be initiated from the \softline
phoneme input stage (i.e., evidence for the phoneme must be in the acoustic signal). In TRACE, \softline
this is not required. Initial activation via top-down connections from the word stage is possible. \softline
For example, having been presented with }{\plain \fs24 \i jo}{\plain \fs24  in }{\plain \fs24 \i job}{\plain \fs24 , excitation from the }{\plain \fs24 \i job }{\plain \fs24 node will feedback \softline
and excite the }{\plain \fs24 \i b}{\plain \fs24  node. Inhibitory connections between phoneme nodes makes it possible to \softline
observe indirect word-to-phoneme inhibition, because the activated }{\plain \fs24 \i b}{\plain \fs24  node will in turn inhibit 
competing phoneme nodes (e.g., }{\plain \fs24 \i g)}{\plain \fs24 . Thus, word nodes have the ability to excite directly and \softline
inhibit indirectly phoneme nodes.\par
}{\plain \fs24 \par
}{\plain \fs24 Frauenfelder et al (1990, Experiment 3) tested TRACE{\u8217\'92}s prediction of indirect word-to-phoneme \softline
inhibition. Listeners had to monitor for phonemes that occurred late in multisyllabic words and \softline
nonwords. Of interest was whether reaction times to the target phoneme would slow when \softline
listeners heard stimuli that should cause indirect phoneme inhibition. Three conditions are of \softline
interest in the present analysis. A word condition (e.g., }{\plain \fs24 \i habi}{\plain \fs24 \i\ul t}{\plain \fs24 , with }{\plain \fs24 \i /t/}{\plain \fs24  as the target phoneme) \softline
served as a lower bound on responding because lexical and phonemic information should \softline
combine to yield fast RTs. A control nonword condition (e.g., }{\plain \fs24 \i mabi}{\plain \fs24 \i\ul l}{\plain \fs24 , with }{\plain \fs24 \i /l/ }{\plain \fs24 as the target \softline
phoneme) served as a reference against which to measure inhibition. Because }{\plain \fs24 \i mabil }{\plain \fs24 is not a \softline
word, there should be no top-down lexical facilitation or inhibition when responding to /l/; \softline
responses should be based on sensory input alone. In the third, inhibitory condition, listeners \softline
heard nonwords like }{\plain \fs24 \i habil}{\plain \fs24 , with }{\plain \fs24 \i l }{\plain \fs24 as the target phoneme. A slowdown in RT relative to the \softline
control nonword condition is expected if there is in fact inhibition. This is because the first part \softline
of the stimulus, }{\plain \fs24 \i habi}{\plain \fs24 , will excite }{\plain \fs24 \i habit}{\plain \fs24 , whose activation should then feed back down and excite \softline
/t/, which will then inhibit /l/.\par
}{\plain \fs24 \par
}{\plain \fs24 The RT slowdown in the inhibition condition was small and not reliable, a null result which has \softline
been interpreted as arguing against word-to-phoneme excitation in TRACE. However, in \softline
simulations of indirect inhibition, TRACE{\u8217\'92}s behavior is not cut and dry, with inhibition being \softline
more likely with longer than shorter words (Norris et al, 2000}{\plain \fs24 ).  In contrast, the bottom-up \softline
priority rule in Merge guarantees that it produces consistent performance that never yields \softline
inhibition.\par
}{\plain \fs24 \par
}{\plain \fs24 A PSP analysis was performed on TRACE and Merge using the aforementioned experimental \softline
setup to gain a deeper understanding of how the priority rule distinguishes Merge from TRACE. \softline
TRACE{\u8217\'92}s variable behavior is a sign that it can generate more data patterns than Merge. If this is \softline
the case, is the absence of the priority rule the main cause, or is it also due to structural \softline
differences between the models as well?\par
}{\plain \fs24 \par
}{\plain \fs24 To address this question, we ran PSP analyses on both models with and without the bottom-up \softline
priority (BUP) rule in what amounted to a 2x2 factorial design, shown in Table 5. The lower left \softline
and upper right cells represent the models as originally formulated. This comparison serves as a \softline
reference from which to understand the contribution of the priority rule and the models{\u8217\'92} \softline
structures in affecting behavior. Comparisons of results between columns (i.e., models) \softline
neutralizes the effects of the priority rule. If the rule is primarily responsible for differences in \softline
model behavior, then the results for both models should be quite similar when the rule is and is \softline
not operational. If differences still remain, then structural differences are also contributing to \softline
their diverse behaviors. In short, these analyses will tell us whether Merge, without its priority \softline
rule, behaves like TRACE, and whether TRACE, with the priority rule, mimics MERGE. \par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \i Table 5 here}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \ul Details of the PSP Analysis}{\plain \fs24 \par
}{\plain \fs24 The design of the indirect inhibition experiment is much simpler than the subcategorical \softline
mismatch experiment. There are only three conditions and only a single response decision \softline
(phonemic). To simulate the experiment, the combination of so few conditions and a simple \softline
model design (one lexical and two critical phoneme nodes) would yield so few potential data \softline
patterns that the analysis might not provide satisfying answers to our question. We therefore \softline
added a lexical decision response (word or nonword) to the design on the grounds that listeners \softline
would, if asked, accurately categorize each stimulus as a word or nonword. The models should \softline
perform similarly. This additional response permitted a more fine-grained analysis and \softline
comparison of the models.\par
}{\plain \fs24 \par
}{\plain \fs24 Input to the models consisted of three utterances: }{\plain \fs24 \i habit}{\plain \fs24 , }{\plain \fs24 \i mabil}{\plain \fs24 , }{\plain \fs24 \i habil}{\plain \fs24 . }{\plain \fs24 \i habit }{\plain \fs24 was selected to be \softline
moderately long (five phonemes) so that indirect inhibition would have a chance to emerge. Both \softline
models were modified from the previous test to consist of only one lexical node (h}{\plain \fs24 \i abit}{\plain \fs24 ) and the \softline
appropriate phoneme input/decision nodes, with /t/ and /l/ of most interest because their \softline
activation functions were used to test for inhibition. With two classification response, each with \softline
two alternatives,  and three stimulus conditions, there were a total of 64 possible data patterns (2}{\plain \fs24 \super 3}{\plain \fs24  \softline
x 2}{\plain \fs24 \super 3}{\plain \fs24 ).\par
}{\plain \fs24 \par
}{\plain \fs24 To examine the effect of the BUP rule on model performance, phoneme activation parameters \softline
were adjusted accordingly in each model prior to running the PSP algorithm. The same two \softline
decision rules were again used to assess the generality of results. With two decision rules and two \softline
priority rules, the algorithm was run four times on each model. The consistency of the results for \softline
each analysis was ascertained by rerunning the algorithm five times. The averaged data are \softline
presented below. No more than seven minutes were required to find all patterns in any run.\par
}{\plain \fs24 \par
}{\plain \fs24 \ul Classification Analyses}{\plain \fs24 \par
}{\plain \fs24 The classification data are shown in column 3 of Table 6, with the first row containing the \softline
comparison of the models as originally designed (TRACE without BUP and Merge with it). The \softline
venn diagram shows that the relationship between the models is opposite of that in the \softline
subcategorical mismatch experiment (Table 4), with Merge now embedded in TRACE, and \softline
TRACE producing three times as many data patterns as Merge (12 vs. 4). Both models area again \softline
highly constrained in their behavior, producing nowhere near the 64 possible data patterns in the \softline
experimental design.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \i Table 6 here}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 TRACE{\u8217\'92}s extra flexibility in this experimental setup jibes with Norris et al{\u8217\'92}s (2000) observation \softline
of TRACE{\u8217\'92}s variable behavior in producing indirect inhibition. That this flexibility is due to the \softline
absence of a BUP rule can be seen by examining the venn diagrams in the remaining rows. When \softline
the priority rules are swapped between models (row 2), their relationship reverses. TRACE \softline
shrinks from twelve to four pattners while Merge grows from four to twelve, embedding TRACE \softline
in Merge.\par
}{\plain \fs24 This reversal is not merely in terms of the number of data patterns, but extends to the actual data \softline
patterns themselves. That is, even though the models trade places in terms of their relationship, \softline
the common and unique patterns remain the same. To see that this is the case, look at the venn \softline
diagrams in rows 3 and 4, where the priority rule is either on or off at the same time in the two \softline
models. In both situations TRACE and Merge overlap completely, producing only common \softline
patterns, four when the priority rule is on and 12 when it is off, which matches exactly what was \softline
found in rows 1 and 2. Comparison of the diagrams in column 3, one can see that when the \softline
priority rule was on, the models always generated four patterns. When it was off, they generated \softline
12.\par
}{\plain \fs24 \par
}{\plain \fs24 The isomorphism of the models models with and without the priority rule is surprising. Within \softline
this experimental design, their qualitative behaviors are identical in terms of the patterns they can \softline
generate, and point to the the rule itself as a primary determiner of behavioral differences. As will \softline
be discussed shortly, this interchangeability shows up in the RT analyses.\par
}{\plain \fs24 \par
}{\plain \fs24 Columns 4-7 in Table 6 contain volume measurements whose relationship between models is \softline
similar to that found in the subcategorical mismatch analyses. TRACE{\u8217\'92}s valid region of the \softline
parameter space is much smaller than Merge{\u8217\'92}s. This relationship changes little as a function of \softline
the priority rule. When common data patterns occupy only a portion of the valid volume (rows 1 \softline
and 2), the region is larger for TRACE (.75) than Merge (.56), indicating that the unique patterns \softline
occupy a smaller region in TRACE{\u8217\'92}s parameter space. This difference foreshadows what will \softline
happen under the stringent threshold.\par
}{\plain \fs24 \par
}{\plain \fs24 The last column in Table 6 shows the relationship between the models when the stringent \softline
threshold was used. A quick glance at all venn diagrams shows the isomorphism no longer holds. \softline
This can be seen most clearly in the top cell, where the embedding is the reverse of that found \softline
with the weak threshold. TRACE produced only three of the 12 patterns, two of which are shared \softline
by Merge. In contrast, Merge produced the same four patterns. In rows 2-4, TRACE remains \softline
embedded in Merge, producing the same few patterns (never the empirical one). It appears that \softline
under the stringent threshold, TRACE generated so few patterns to begin with that there was \softline
little opportunity for the priority rule to alter model behavior. In contrast, Merge behaved just as \softline
it did under the weak thresold, generating more patterns without the rule (rows 2 and 3) than with \softline
it (rows 1 and 3). Notice that what changes most down this colum of venn diagrams is number of \softline
unique patterns generated by Merge.[FN]\par
}{\plain \fs24 \par
}{\plain \fs24  The reason for this asymmetric effect of the stringent threshold on the two models can be \softline
understood by examining the volume measurements under the weak threshold (Figure 13). \softline
Region sizes are shown for both models with and without the priority rule. Each section of a \softline
vertical bar represents a different data pattern, except those denoted by gray shading, which \softline
represents the combined area of eight regions, most of which are visible for Merge but not for \softline
TRACE. In the first bar (TRACE, No BUP) these eight, which together total less than 1% of the \softline
volume, plus the human region are so small that they disappear when the stringent threshold is \softline
applied, which results in the sharp drop in the number of data patterns TRACE can generate. 
These same regions are much larger in Merge (only one is less than 1% of the volume), and \softline
although they shrink in size, they do not disappear when the stringent threshold is applied.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \i Figure 13 here}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 Further insight into the effects of the priority rule on model behavior can be obtained by \softline
comparing the types of misclassification errors made by the models when the rule was on and off. \softline
As in Figure 12, each section of bar is filled with a graphic pattern that denotes the mismatch \softline
distance of the data pattern from the empirical data, which is the bottom section and contains no \softline
pattern. In TRACE, the empirical pattern itself occupies a small region in the parameter space \softline
that changes imperceptibly in size when bottom-up information is given priority. In Merge, \softline
however, not only is this region much larger, but it enlarges even more with the priority rule, \softline
occupying 29% of the valid volume. Although TRACE can produce the empirical pattern, it is \softline
clearly a more central pattern in Merge. Whatismore, the priority rule enhances this centrality.\par
}{\plain \fs24 \par
}{\plain \fs24 Most of the mismatching patterns, especially those that occupied the largest regions, rarely \softline
veered far from the empirical pattern, differing by one or two responses out of a possible six. \softline
Comparison of the bars between models shows that the same biases exhibited by the models in \softline
the subcategorization experiment are present here as well. A few patterns dominate the parameter \softline
space in TRACE whereas the space is split among patterns more equitably  in Merge. This is \softline
most evident in the No BUP conditions, where a pattern with two mismatches occupies half \softline
(.506) of TRACE{\u8217\'92}s volume. The errors in this instance are due to lexical misclassifications in \softline
which the two nonwords (}{\plain \fs24 \i mabit }{\plain \fs24 and }{\plain \fs24 \i habil}{\plain \fs24 ) were categorized as words. Merge exhibits a much \softline
weaker tendency to do this (.068). Instead, the pattern occupying the largest volume in Merge \softline
does just the opposite: }{\plain \fs24 \i habit}{\plain \fs24  is classified as a nonword. TRACE does this as well. Application of \softline
the priority rule (bars 2 and 4) increases these tendencies in both models (i.e., the regions \softline
increase in size).\par
}{\plain \fs24 \par
}{\plain \fs24 \ul Reaction Time Analyses}{\plain \fs24 \par
}{\plain \fs24 RT analyses were perfromed only on the weak threshold data because TRACE failed to generate \softline
the human pattern under the stringent threshold. The region occupied by the empirical pattern \softline
was probed for parameter sets that violated the ordering of mean participant response times \softline
across the three conditions (}{\plain \fs24 \i habit }{\plain \fs24 < }{\plain \fs24 \i mabil }{\plain \fs24 = }{\plain \fs24 \i habil}{\plain \fs24 ). Model behavior with and without the priority \softline
rule was also examined.\par
}{\plain \fs24 \par
}{\plain \fs24 The procedure was the same as that used in the first comparison of the models. Samples (10,000) \softline
were drawn from the uniform distribution over the region of the empirical pattern and the model \softline
was run with each set of parameter values. The cycle at which phoneme classification occurred \softline
was recorded across condtions. Because performance violations amount to a reversal in cycle \softline
classification time between adjacent conditions, we calculated the difference in cycle time of \softline
neighboring conditions, }{\plain \fs24 \i habit}{\plain \fs24  vs. }{\plain \fs24 \i mabil}{\plain \fs24 , and }{\plain \fs24 \i mabil }{\plain \fs24 vs. }{\plain \fs24 \i habil}{\plain \fs24 . Distributions of these difference \softline
scores (over all samples) are plotted in Figure 14. Cycle times to }{\plain \fs24 \i mabil }{\plain \fs24 were subtracted from \softline
those in the other two conditions. The top graphs contain the comparison of the models as 
originally formulated (TRACE without BUP, Merge with BUP). In the bottom pair of graphs the \softline
priority rules were swapped across models. The left-hand graphs contain the }{\plain \fs24 \i habit-mabil \softline
}{\plain \fs24 comparison and the right-hand graphs the more theoretically important, }{\plain \fs24 \i mabil }{\plain \fs24 vs }{\plain \fs24 \i habil}{\plain \fs24 , \softline
comparison.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \i Figure 14 here}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 In the upper left graph, both models produce the correct ordering, with phoneme classification \softline
always being faster in a word (}{\plain \fs24 \i habit}{\plain \fs24 ) than nonword (}{\plain \fs24 \i mabil}{\plain \fs24 ) context.  What differs between the \softline
models are the shapes of the distributions, with TRACE{\u8217\'92}s being sharply peaked and Merge{\u8217\'92}s \softline
more diffuse. Data from the }{\plain \fs24 \i mabil }{\plain \fs24 - }{\plain \fs24 \i habil}{\plain \fs24  comparison}{\plain \fs24  are in the right graph. Here we see the \softline
effects of the priority rule, with Merge always generating the correct prediction of identical \softline
classification times in the two conditions (zero RT difference), but TRACE showing indirect \softline
inhibition, with recognition times slightly longer to /l/ in }{\plain \fs24 \i habil }{\plain \fs24 than in }{\plain \fs24 \i mabil}{\plain \fs24 , hence the negative \softline
difference score. Although this effect is usually small, choice of parameter settings could lead to \softline
different conclusions, where occasionally the effect would be large.\par
}{\plain \fs24 \par
}{\plain \fs24 That equivalent classification times in the }{\plain \fs24 \i mabil }{\plain \fs24 and }{\plain \fs24 \i habil }{\plain \fs24 conditions are due to the priority rule \softline
can be seen in the lower right graph, where TRACE was run with the BUP rule and Merge \softline
without it. Just as in the classification data in Table 6, their performance reverses: TRACE now \softline
produces no difference across conditions whereas Merge displays indirect inhibition. The two \softline
left-hand graphs are quite similar despite the priority rule shifting between models. This indicates \softline
that the word-nonword difference in phoneme processing is mostly determined by model \softline
architecture.\par
}{\plain \fs24 \par
}{\plain \fs24 Scanning across all four graphs, it is clear that the interactive architecture of TRACE constrains \softline
classification time more so than the integrative architecture of Merge. Regardless of priority rule, \softline
both models show a tendency to produce small rather than large differences scores, but TRACE \softline
more so than Merge given the height and location of the peaks of the distributions.\par
}{\plain \fs24 \par
}{\plain \fs24 \ul Summary}{\plain \fs24 \par
}{\plain \fs24 This second comparison of TRACE and Merge was undertaken to learn how the bottom-up \softline
priority rule can differentiate the two models. The PSP analyses under the weak and stringent \softline
threholds showed that the rule reduces model flexibility and confirmed its necessity for \softline
simulating the correct pattern of response times. By turning the rule on and off across models, we \softline
discovered that they behave identically, producing qualitiatively indistinguishable data patterns. \softline
Only when the volumes of these patterns were inspected did performance differences due to \softline
model architecture emerge. Merge{\u8217\'92}s integrative architecture is somewhat better suited for \softline
mimicking human behavior in this experimental design. Not only is the empirical pattern more \softline
central in Merge, but this was true regardless of whether the priority rule was in place. Such \softline
findings and conclusions are possible because of the global perspective on model behavior that a \softline
PSP analysis provides.\par
}{\plain \fs24 \par
}\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 }{\plain \fs24 \b General Discussion}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 Models are becoming increasingly useful tools for psychologists. They help us make sense out of \softline
mounds of data, provide insights and new conceptual understanding, and they can even point the \softline
way on how to proceed next in a research program. To use them most productively, we need to \softline
understand their behavior.  PSP was developed with this goal in mind. A model{\u8217\'92}s ability to \softline
mimic human data is evaulated in the context of the other data patterns that it can generate in an \softline
experimental design, thereby providing a richer context in which to understand what it means for \softline
a model to account for an experimental finding. \par
}{\plain \fs24 \par
}{\plain \fs24 The two examples of its application in this paper were meant to demonstrate some of the uses of \softline
this versatile tool. In the case of ALCOVE, PSP was used as described above, to evaluate the \softline
model{\u8217\'92}s soundness in capturing an empirical result. One of the pieces of information that the PSP \softline
analysis supplies which is also obtained with methods of local model analysis, is that the model \softline
performs like humans, learning the classification tasks in a specific order. Much more \softline
importantly, by studying the partitioned parameter space, we learn how representative this \softline
behavior is of the model and how many other data patterns the model can produce in the \softline
experiemntal design. Some of these might be plausible alternative response patterns. Others \softline
might occupy such a small region in the parameter space that they should be considered spurious \softline
and  uncharacteristic of the model.\par
}{\plain \fs24 \par
}{\plain \fs24 The global perspective on model behavior that PSP provides allows one to learn the scope of a \softline
model, the extent to which it generates other data patterns, in an experimental setting. This \softline
relationship between a model and the experimental setting can also be viewed from the opposite \softline
vantage point by asking how much the experiment is likely to tap the limits of the model. To the \softline
extent that it does, the experiment has the potential to generate informative results. One lesson \softline
that comes out of the two applications of PSP here is that the fewwer the number of conditions, \softline
and the fewer the possible relationships between them, the less informative the test may be.\par
}{\plain \fs24 \par
}{\plain \fs24 In the second example, PSP was used to study the behavioral consequences of slight design \softline
differences between two localist connectionist models, Merge and TRACE. To do this, data \softline
patterns and their corresponding volumes in parameter space were compared across models in \softline
two experimental settings that were intended to bring out design differences. Many more \softline
similarities than differences were were found in classification behavior. RT analyses of the \softline
region occupied by the empirical data led to the same conclusion. Qualitatively, TRACE and \softline
Merge were indistinguishable. Only in the volume analyses were differences found. These took \softline
form of biases in emphasizing some data patterns over others. If the volume of the empirical \softline
region is taken as the degree of support for a model, then TRACE seemed better suited to \softline
capturing the subcategorical mismatch data and Merge the indirect inhibition data.\par
}{\plain \fs24 \par
}{\plain \fs24 Although one might not be surprised by the models{\u8217\'92} similarities, the PSP anaysis provides the \softline
evidence to support such a claim. Furthermore, they suggest how difficult it might be to find a \softline
situation in which they make different qualitative predictions, the primary yardstick used to \softline
evaluated such models. However, PSP might be just the tool to assist in this endevour, by 
enabling the researcher to essentially pretest an experiment to learn whether it could discriminate \softline
between the models. Once an experiment is designed, the models can be run through the PSP \softline
algorithm to determine which data patterns are shared and unique. To the extent that  participants \softline
are likely to produce those in the latter category, the experiment has the potential to discriminate \softline
between the models.\par
}{\plain \fs24 \par
}{\plain \fs24 Of course, the meaningfulness of any such analysis depends on how a data pattern is defined. \softline
Conclusions may be specific to a definition, which is why it can be worthwhile to use more than \softline
one, as was done when comparing TRACE and Merge. Because ordinal predictions dominate in \softline
most experimental work, the task of defining a data pattern is relatively straight forward. Indeed, \softline
this is in part what makes PSP widely applicable. It does not depend on the model being able to \softline
fit the data quantitively. Another reason PSP is applicable to a wide range of models is because \softline
of how the model interfaces with the the algorithm. In a sense, the model is just a module in the \softline
algorithm, which makes it possible to insert models of almost any type, be they algebraic, \softline
algorithmic, connectionist, etc. Indeed, this feature of the algorithm makes it possible to compare \softline
models across these types, something that can be quite difficult to do. \par
}{\plain \fs24 \par
}{\plain \fs24 Model development. \par
}{\plain \fs24 study model design itself\par
}{\plain \fs24 Discuss usefulness of parameter analyses in RT data.\par
}{\plain \fs24 \par
}{\plain \fs24 One of the great advantages of PSP is that it allows us to learn what kinds of data patterns a \softline
model can produce. Inspection and further analysis of these patterns provides a wealth of \softline
information about model behavior.\par
}{\plain \fs24 \par
}{\plain \fs24 Extensive experience with a model will, without a doubt, provide one with good intuitions about \softline
model behavior. PSP analyses confirm these intuitions, expose their extent, as well as introduce \softline
the modeler to additional tendencies and behaviors that might not have been anticipated.\par
}\page 
\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 Need to cite Roberts and Pashler (2000; p. 384) as a 2D example of parameter space partitioning. \softline
Insert this is as a simple case, easy to solve because of the low dimensionality.\par
}{\plain \fs24 \par
}{\plain \fs24 PSP was demonstrated in the context of connectionist models for other reasons. An attractive \softline
feature of this style of modeling is that simple, general-purpose mechanisms can be combined to \softline
describe complex behaviors. The power of these models has been considered a vice or a virtue. \softline
PSP can be used to ensure that their power is concentrated on describing human behavior, not \softline
any behavior.\par
}{\plain \fs24 \par
}{\plain \fs24 Because PSP is a search problem, it is subject to many of the same difficulties found in nonlinear \softline
function optimization and integration, which work under a set of regularity conditions about the \softline
target function, such as continuity, smoothness, stationarity, existence of a solution within a finite \softline
limit and so on.}{\plain \fs24  For this reason, the algorithm is currently limited in scope. For example, a \softline
probabilistic (e.g., stochastic) model can be analyzed by PSP only if its simulational component \softline
can be replaced with a closed-form probability density function. Another requirement is that the \softline
range of parameters must be finite. If some unconstrained parameters are unavoidable (i.e., \softline
plausible data patterns could still be generated from their extreme values), it is recommended to \softline
reparameterize the model utilizing log, inverse logistic, or other transformations.\par
}{\plain \fs24 \par
}{\plain \fs24 As currently implemented, volume estimation of a region is performed using a multi-dimensional \softline
ellipsoid. This is satisfactory for models that generate regions that are not oddly shaped (sharply \softline
bowed) or discontinuous. Exploratory work ensured that these conditions were satisfied for the \softline
current simulations. However, the algorithm would be more powerful, precise, and useful were it \softline
could be applied to these situations. Work is underway to extend its capabilities.\par
}{\plain \fs24 \par
}{\plain \fs24 Another obviouls extension of PSP is to continuous value data. [Jay, finish this paragraph]\par
}{\plain \fs24 \par
}{\plain \fs24 The current demonstrations reveal the potential of what can be learned by performing a global \softline
analysis of model behavior.\par
}{\plain \fs24 \par
}{\plain \fs24 \par
}\page 
\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \b References}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 Dawson, R.W., & Shamanski, K.S., (1994). Connectionism, confusion, and cognitive science. \softline
}{\plain \fs24 \ul The Journal of Intelligent Systems, 4}{\plain \fs24 , 215-262.\par
}{\plain \fs24 \par
}{\plain \fs24 Feldman, J. (2000). Minimization of Boolean complexity in human concept learning. }{\plain \fs24 \ul Nature}{\plain \fs24 \i\ul , \softline
}{\plain \fs24 \ul 407}{\plain \fs24 , 630-633.\par
}{\plain \fs24 \par
}{\plain \fs24 Frauenfelder, U.H., Segui, J., & Dijkstra, T. (1990).  Lexical effects in phonemic processing:  \softline
Facilitatory or Inhibitory?  }{\plain \fs24 \ul Journal of Experimental Psychology:  Human Perception and \softline
Performance}{\plain \fs24 , }{\plain \fs24 \ul 16}{\plain \fs24 , 77-91.\par
}{\plain \fs24 \par
}{\plain \fs24 Grunwald, P., Myung, I., & Pitt, M.A. (in press). }{\plain \fs24 \ul Advances in Minimum Description Length: \softline
Theory and Application}{\plain \fs24 . Cambridge, MA: MIT Press.\par
}{\plain \fs24 \par
}{\plain \fs24 Kim, W., Navarro, D., Pitt, M. A., Myung, I. (in press). An MCMC-based method of comparing \softline
connectionist models in cognitive science. }{\plain \fs24 \ul Advances in Neural Information Processing Systems, \softline
15}{\plain \fs24 , MIT Press.\par
}{\plain \fs24 \par
}{\plain \fs24 Kontkanen, P., Myllym{\f2\u228\'e4}ki, P., Buntine, W., Rissanen, J. & Tirri, H. (in press). An MDL \softline
framework for data clustering. To appear in P. Gr{\f2\u252\'fc}nwald, I. J. Myung & M. A. Pitt (Eds.) \softline
}{\plain \fs24 \ul Advances in Minimum Description Length: Theory and Applications.}{\plain \fs24  Cambridge, MA: MIT \softline
Press.\par
}{\plain \fs24 \par
}{\plain \fs24 Kruschke, J. K. (1992). ALCOVE: An exemplar-based connectionist model of category learning. \softline
}{\plain \fs24 \ul Psychological Review, 99}{\plain \fs24 , 22-44.\par
}{\plain \fs24 \par
}{\plain \fs24 Kruschke, J. K. (1993). Three principles for models of category learning. }{\plain \fs24 \ul The Psychology of \softline
Learning and Motivation 29}{\plain \fs24 , 57{\u8211\'96}90.}{\plain \fs24 \i \par
}{\plain \fs24 \par
}{\plain \fs24 Kruschke, J. K. & Erikson, M. A. (1995). }{\plain \fs24 \ul Six principles for models of category learning.}{\plain \fs24  Talk \softline
presented at the 36th Annual Meeting of the Psychonomic Society, 10 November 1995, Los \softline
Angeles, CA.\par
}{\plain \fs24 \par
}{\plain \fs24 Lee, M. D., & Navarro, D. J. (2002). Extending the ALCOVE model of category learning to \softline
featural stimulus domains. }{\plain \fs24 \ul Psychonomic Bulletin and Review, 9}{\plain \fs24 , 43-58.\par
}{\plain \fs24 \par
}{\plain \fs24 Luce, R. D. (1963). Detection and recognition. In R. D. Luce, R. R. Bush, & E. Galanter (Eds.), \softline
}{\plain \fs24 \ul Handbook of Mathematical Psychology}{\plain \fs24 \i\ul  }{\plain \fs24 \ul (Vol. 1, p. 103-190}{\plain \fs24 ). New York, NY: Wiley.\par
}{\plain \fs24 \par
}{\plain \fs24 McCloskey, M. (1991). Networks and Theories: The Place of Connectionism in Cognitive \softline
Science. }{\plain \fs24 \ul Psychological Science,2}{\plain \fs24 , 387-395.\par
}{\plain \fs24 \par
}{\plain \fs24 McQueen, J., Norris, D., Cutler, A. (1999). \par
}{\plain \fs24 \par
}{\plain \fs24 Marslen-Wilson, W., & Warren, P. (1994). Levels of perceptual representation and process in \softline
lexical access: Words, phonemes, and features. }{\plain \fs24 \ul Psychological Review}{\plain \fs24 , }{\plain \fs24 \ul 101}{\plain \fs24 , 653-675.\par
}{\plain \fs24 \par
}{\plain \fs24 Navarro, D., Pitt, M.A., & Myung, I. (2004). Assessing the distinguishability of models and the \softline
informativeness of data. }{\plain \fs24 \ul Cognitive Psychology}{\plain \fs24 , }{\plain \fs24 \ul 49}{\plain \fs24 , 47-84.\par
}{\plain \fs24 \par
}{\plain \fs24 Norris, D., McQueen, J.M., & Cutler, A.  (2000).  Merging information in speech recognition: \softline
Feedback is never necessary.  }{\plain \fs24 \ul Behavioral & Brain Sciences 23}{\plain \fs24 , 299-370).\par
}{\plain \fs24 \par
}{\plain \fs24 Nosofsky, R. M., Gluck, M. A., Palmeri, T. J., McKinley, S. C. & Glauthier, P. (1994). \softline
Comparing models of rule-based classification learning: A replication and extension of Shepard, \softline
Hovland, and Jenkins. }{\plain \fs24 \ul Memory & Cognition 22}{\plain \fs24 , 352{\u8211\'96}369.\par
}{\plain \fs24 \par
}{\plain \fs24 Pitt, M.A., Myung,I., & Zhang, S. (2002). Toward a method of selecting among computational \softline
models of cognition. }{\plain \fs24 \ul Psychological Review, 109,}{\plain \fs24  472-491.\par
}{\plain \fs24 \par
}{\plain \fs24 Pitt, M.A., & Navarro, D. (in press). Tools for learning about computational models. In A. Cutler \softline
(Ed.),}{\plain \fs24 \ul  Twenty-First Century Psycholinguistics: Four Cornerstones. }{\plain \fs24 New York, NY: Erlbaum.\par
}{\plain \fs24 \par
}{\plain \fs24 Rissanen, J. (1996). Fisher information and stochastic complexity.}{\plain \fs24 \ul  IEEE Transactions\par
}{\plain \fs24 \ul on Information Theory 42}{\plain \fs24 , 40-47.\par
}{\plain \fs24 \par
}{\plain \fs24 Rissanen, J. (2001).\par
}{\plain \fs24 \par
}{\plain \fs24 Roberts, S. & Pashler, H.  (2000).  How persuasive is a good fit?  A comment on theory testing. \softline
}{\plain \fs24 \ul Psychological Review, 107}{\plain \fs24 , 358-367.\par
}{\plain \fs24 \par
}{\plain \fs24 Shepard, R. N. (1987). Toward a universal law of generalization for psychological science. \softline
}{\plain \fs24 \ul Science, 237}{\plain \fs24 , 1317-1323.\par
}{\plain \fs24 \par
}{\plain \fs24 Shepard, R. N., Hovland, C. L. & Jenkins, H. M. (1961). Learning and memorization of \softline
classification. }{\plain \fs24 \ul Psychological Monographs 75 (13)}{\plain \fs24 , Whole No. 517.\par
}{\plain \fs24 \par
}{\plain \fs24 Wagenmakers, E.-J., Ratcliff, R., Gomez, P., & Iverson, G. J. (2004). Assessing model mimicry \softline
using the parametric bootstrap.}{\plain \fs24 \ul  Journal of Mathematical Psychology, }{\plain \fs24 48, 28-50.\par
}{\plain \fs24 \par
}{\plain \fs24 \par
}\sect \sectd \margtsxn1140\pgndec\headery900\footery1440\endnhere\endnhere 
{\header \fs24{
\posxr\nowrap {\field{\*\fldinst { PAGE  }}}\par}
\pard \fs24\qr 
\chpgn \par \par }
{\*\pnseclvl1\pndec\pnstart1{\pntxta .}}
{\*\pnseclvl2\pnlcltr\pnstart1{\pntxta .}}
{\*\pnseclvl3\pnlcrm\pnstart1{\pntxta .}}
{\*\pnseclvl4\pndec\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl5\pnlcltr\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl6\pnlcrm\pnstart1{\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pndec\pnstart1{\pntxta .}}
{\*\pnseclvl8\pnlcltr\pnstart1{\pntxta .}}
{\*\pnseclvl9\pnlcrm\pnstart1}

\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \b Appendix A: Additional Details about How the PSP Algorithm Works}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 The goal of PSP is to partition a multi-dimensional space of model parameters into an unknown \softline
number of regions, each of which by definition corresponds to a unique data pattern the model \softline
can produce. Five assumptions are made in its application: (1) regions are contiguous with one \softline
another in the sense that a path between any two regions exists }{\plain \fs24 \i within}{\plain \fs24  the partition; (2) the size of \softline
the regions changes smoothly in the parameter space, so small regions tend to cluster together; \softline
(3) model behavior must be stationary in the sense that a given parameter set always generates a \softline
single, fixed data pattern. This means that the boundaries of the region are fixed, not varying \softline
every time the model generates a data pattern; (4) the range of the parameter space to be searched \softline
must be finite. (5) the data space has been discretized in such a way that the total number of data \softline
patterns to be discovered must be finite to the extent that they can be found within a reasonable \softline
amount of computing time.\par
}{\plain \fs24 \par
}{\plain \fs24 The algorithm begins with a given set of parameters and its corresponding data pattern generated \softline
by the model. This initial parameter set serves as the current point in the parameter space from \softline
which a nearby point is sampled. The sampling is performed using a probability distribution, \softline
called a jumping distribution, defined over a small hyper-sphere centered at the current point \softline
(panel a of Figure 3). Once a candidate sample point is drawn from the jumping distribution, the \softline
model is run with the parameter values, and its output is evaluated to determine if the same data \softline
pattern as the current one was generated. If so, the candidate point is accepted as the next point of \softline
the process. That is, a jump is made successfully, so the jumping distribution moves to a new \softline
location, being ready to sample another candidate point. If the candidate point does not yield the \softline
same pattern as the current one, it is rejected as belonging to the current region. That is, the jump \softline
trial is unsuccessful and the jumping distribution stays at the current location to sample again on \softline
the next trial. The sequence of such locations of the jumping distribution, recorded over }{\plain \fs24 \i all }{\plain \fs24 trials, \softline
is called the Markov chain corresponding to the current data pattern. The theory of MCMC \softline
guarantees that the Markov chain will eventually yield a uniformly distributed sample over the \softline
region, regardless of its size or shape.\par
}{\plain \fs24 \par
}{\plain \fs24 While the Markov chain runs inside the current region, every rejected point, which must be \softline
outside the region, is checked to see if it generates a new valid data pattern. If it does, the point is \softline
taken to initiate a new Markov chain corresponding to the newly discovered data pattern. In \softline
effect, accepted points are used to shift the jumping distribution inside the current region whereas \softline
rejected points are used to discover new regions contiguous with the current one. Each time a \softline
new data pattern is found, a new MCMC-based search process is spawned. Over time, as many \softline
Markov chains run simultaneously as there are data patterns found. Consequently, the search \softline
takes place along the boundaries of all the discovered regions, to find yet more regions (i.e., \softline
additional data patterns).\par
}{\plain \fs24 \par
}{\plain \fs24 The size of the jumping distribution (i.e., the radius of the hyper-sphere) in each region must \softline
adapt to its size and shape. If it is too small, almost all candidate points will be accepted, but \softline
every jump will be so small that it will take too many jumps for an exhaustive search of a region. \softline
Also, rejected points will rarely be generated. In contrast, if the size of the jumping distribution is \softline
too large, candidate points will be rejected too often, and the granularity of the jumps will not be \softline
small enough to define the edges of a region, which requires a properly sized jumping 
distribution to succeed. Unless one is dealing with a normal distribution, no theory exists that \softline
defines the optimal jumping distribution. With the PSP algorithm, we have found it best to use an \softline
adaptive jumping distribution, which on average accecpts 20% of sample points.\par
}{\plain \fs24 \par
}{\plain \fs24 The PSP algorithm can be summarized roughly:\par
}{\plain \fs24 \f3 \tab }{\plain \fs22 \f3\fs22 Given{\field{\*\fldinst ADVANCE \\d 7}{\fldrslt }}\fs24
{\object\objemb\rsltmerge\objsetsize\objw286\objh432{\*\objname }
{\*\objdata 01050000020000000f0000004571756174696f6e2e44534d543400000000000000000000
100000d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006
0000000000000000000000010000000100000000000000001000000200000001000000fe
ffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffff04000000feffffff05000000feffffff06000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072
007900000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000016000500ffffffffffffffff0200000003ce020000000000c0
00000000000046000000000000000000000000e08c59d8e348c401030000004005000000
00000001004f006c00650000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a000201ff
ffffffffffffffffffffff00000000000000000000000000000000000000000000000000
0000000000000000000000000000001400000000000000010043006f006d0070004f0062
006a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000069
00000000000000030042004f006c00650050006100720074000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000014
000200ffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000030000001400000000000000feffffff02000000fe
fffffffeffffff05000000060000000700000008000000090000000a0000000b0000000c
0000000d0000000e0000000f000000feffffff11000000120000001300000014000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01
000002000000000000000000000000000000005750204d617468457874656e6465644200
0000000000000000000000000000000000000000000000000000000100feff030a0000ff
ffffff03ce020000000000c000000000000046160000004d6174685479706520352e3020
4571756174696f6e000c0000004d61746854797065204546000f0000004571756174696f
6e2e44534d543400f439b271000000000000000000000000766500000000000000000000
000000000000000000000001000000010000000100000001000000010000000400000000
000000000000000000000000000000000000007473000000000000bc057b001000200101
231400ffffffff030000000400000001000000ffffffff0000000000000000a70100007b
020000ba0200000100090000035d01000002008600000000000500000002010100000005
0000000102ffffff00050000002e0119000000050000000b0200000000050000000c0240
0280011300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff400100
00e60100000b00000026060f000c004d6174685479706500006000050000000902000000
02050000001402e301d7001c000000fb0222ff0000000000009001000000000002001054
696d6573204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d
0100000900000002004f006c006500500072006500730030003000300000000000000000
000000000000000000000000000000000000000000000000000000000000000000000018
0002010300000005000000ffffffff000000000000000000000000000000000000000000
00000000000000000000000000000004000000e202000000000000450071007500610074
0069006f006e0020004e0061007400690076006500000000000000000000000000000000
0000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000010
000000120100000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000320a00000000010000003179bc0105000000140280
0116001c000000fb0280fe0000000000009001010000010002001053796d626f6c007740
000000800f0a861643c3771f43c37720c0c57700003000040000002d01010004000000f0
01000009000000320a0000000001000000717900038600000026060f0002014d61746854
7970655555f600050100050044534d543500001357696e416c6c4261736963436f646550
6167657300110554696d6573204e657720526f6d616e00110353796d626f6c001105436f
7572696572204e65770011044d54204578747261001357696e416c6c436f646550616765
73001106b9d9c5c1c3bc00120008212f458f442f4150f4100f475f4150f21f1e4150f415
0f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f4
8f417f48f4100f412a5f445f45f45f45f45f410f0c010001000102020202000200010101
0003000100040005000a0100020484b8037103001b00000b010002008831000001010000
000b00000026060f000c00ffffffff01000000000000001c000000fb0210000800000000
009001000000810102022253797374656d000000000a0021008a0100000000000000009c
e612002942c377040000002d01000004000000f001010003000000000000000000000000
00000000000000000000000000000000000000000000001c0000000200cac1f600000088
e91200000000008c00a60060e91200050100050044534d543500001357696e416c6c4261
736963436f6465506167657300110554696d6573204e657720526f6d616e00110353796d
626f6c001105436f7572696572204e65770011044d54204578747261001357696e416c6c
436f64655061676573001106b9d9c5c1c3bc00120008212f458f442f4150f4100f475f41
50f21f1e4150f4150f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f4
8f4100f4100f40f48f417f48f4100f412a5f445f45f45f45f45f410f0c01000100010202
02020002000101010003000100040005000a0100020484b8037103001b00000b01000200
883100000101000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000105000005
0000000d0000004d45544146494c455049435400a701000085fdffffc20200000800a701
7b0200000100090000035d01000002008600000000000500000002010100000005000000
0102ffffff00050000002e0119000000050000000b0200000000050000000c0240028001
1300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff40010000e601
00000b00000026060f000c004d6174685479706500006000050000000902000000020500
00001402e301d7001c000000fb0222ff0000000000009001000000000002001054696d65
73204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d010000
09000000320a00000000010000003179bc01050000001402800116001c000000fb0280fe
0000000000009001010000010002001053796d626f6c007740000000800f0a861643c377
1f43c37720c0c57700003000040000002d01010004000000f001000009000000320a0000
000001000000717900038600000026060f0002014d617468547970655555f60005010005
0044534d543500001357696e416c6c4261736963436f6465506167657300110554696d65
73204e657720526f6d616e00110353796d626f6c001105436f7572696572204e65770011
044d54204578747261001357696e416c6c436f64655061676573001106b9d9c5c1c3bc00
120008212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f445f425f48f425f
4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f4100f412a5f44
5f45f45f45f45f410f0c0100010001020202020002000101010003000100040005000a01
00020484b8037103001b00000b010002008831000001010000000b00000026060f000c00
ffffffff01000000000000001c000000fb02100008000000000090010000008101020222
53797374656d000000000a0021008a0100000000000000009ce612002942c37704000000
2d01000004000000f0010100030000000000}{\result \fs24
{\pict\picw286\pich432\picwgoal286\pichgoal432\wmetafile8
010009000003a10000000200140000000000030000001e000400000002010100050000000b020c000c00050000000c02c72e271f0400000007010300070000001604d32e331f0c000c00040000000601010004000000020102000400000002010100040000002e01190005000000140246277d1114000000fb0204ee000000
0000009001000000000402001054696d6573204e657720526f6d616e00040000002d010000050000000902000000020700000021050100310046277d110500000014023b1fd50110000000fb02d5e00000000000009001010000010402001053796d626f6c0000040000002d01010004000000f00100000700000021050100
71003b1fd50110000000fb021c000000000000000000000000010000000053797374656d0000040000002d01000004000000f0010100040000002701ffff030000000000}}}\pard \fs24
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\field{\*\fldinst ADVANCE \\u 7}{\fldrslt }} and Pattern 1,{\plain \fs22 \f3\fs22  set }{\plain \fs22 \i\f3\fs22 m}{\plain \fs22 \f3\fs22  = }{\plain \fs22 \i\f3\fs22 i}{\plain \fs22 \f3\fs22  = 1.}{\plain \fs24 \f3 \par
}{\plain \fs24 \f3 \tab \tab }{\plain \fs22 \i\f3\fs22 Step 1.\ul0 \tab }{\plain \fs22 \f3\fs22 Establish {\field{\*\fldinst ADVANCE \\d 6}{\fldrslt }}\pard \fs24\tx720\tx1440\tx2160
{\object\objemb\rsltmerge\objsetsize\objw816\objh372{\*\objname }
{\*\objdata 01050000020000000f0000004571756174696f6e2e44534d543400000000000000000000
120000d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006
0000000000000000000000010000000100000000000000001000000200000001000000fe
ffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffff04000000feffffff05000000feffffff0600000007
000000feffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072
007900000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000016000500ffffffffffffffff0200000003ce020000000000c0
00000000000046000000000000000000000000c0f3e1dfee48c401030000004006000000
00000001004f006c00650000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a000201ff
ffffffffffffffffffffff00000000000000000000000000000000000000000000000000
0000000000000000000000000000001400000000000000010043006f006d0070004f0062
006a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000069
00000000000000030042004f006c00650050006100720074000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000014
000200ffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000030000001400000000000000feffffff02000000fe
fffffffeffffff05000000060000000700000008000000090000000a0000000b0000000c
0000000d0000000e0000000f00000010000000110000001200000013000000feffffff15
000000160000001700000018000000feffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01
0000020000000000000000000000000000000061006d00460069006c00650073003d0043
003a005c00500072006f006700720061006d002000460069006c000100feff030a0000ff
ffffff03ce020000000000c000000000000046160000004d6174685479706520352e3020
4571756174696f6e000c0000004d61746854797065204546000f0000004571756174696f
6e2e44534d543400f439b2710000000000000000000000000031005c0057004f004f004a
00410045007e0031002e0001000000010000000100000001000000010000007e0031005c
00540065006d007000000054004d0050003d0043003a005c0044004f00430055004d0045
007e00ffffffff030000000400000001000000ffffffff0000000000000000a60500009e
02000096030000010009000003cb01000002008c00000000000500000002010100000005
0000000102ffffff00050000002e0119000000050000000b0200000000050000000c0260
0220051300000026060f001c00ffffffff0000000010000000c0ffffffafffffffe00400
000f0200000b00000026060f000c004d6174685479706500006000050000000902000000
02050000001402a0012a021c000000fb0220fe0000000000009001000000000002001054
696d6573204e657720526f6d616e00be62f577c762f5770100000000003000040000002d
0100000c00000002004f006c006500500072006500730030003000300000000000000000
000000000000000000000000000000000000000000000000000000000000000000000018
0002010300000005000000ffffffff000000000000000000000000000000000000000000
00000000000000000000000000000004000000d803000000000000450071007500610074
0069006f006e0020004e0061007400690076006500000000000000000000000000000000
0000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000014
000000240100000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000320a0000000003000000287c296d3801e400c00305
000000140203021c011c000000fb02c2fe0000000000009001010000000002001054696d
6573204e657720526f6d616e00be62f577c762f5770100000000003000040000002d0101
0004000000f001000009000000320a00000000010000006d797c02050000001402a0013b
001c000000fb0220fe0000000000009001010000000002001054696d6573204e65772052
6f6d616e00be62f577c762f5770100000000003000040000002d01000004000000f00101
0009000000320a00000000010000007179c003050000001402a001c0021c000000fb0220
fe0000000000009001000000010002001053796d626f6c007740000000be110ac8be62f5
77c762f5770100000000003000040000002d01010004000000f00100000a000000320a00
00000002000000d7d71f01c0038c00000026060f000e014d617468547970655555020105
0100050044534d543500001357696e416c6c4261736963436f6465506167657300110554
696d6573204e657720526f6d616e00110353796d626f6c001105436f7572696572204e65
770011044d5420457874726100120008212f458f442f4150f4100f475f4150f21f1e4150
f4150f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f
40f48f417f48f4100f412a5f445f45f45f45f45f410f0c01000100010202020200020001
0101000300010004000009006001000900e0020083710009006003001b00000901e00100
0200836d00000101000900e00200822800020486c522d70200827c00020486c522d70200
82290000000b00000026060f000c00ffffffff01000000000000001c000000fb02140009
0000000000bc02000000000102022253797374656d000000000a00000004000000000000
0000000100000000003000040000002d01000004000000f0010100030000000000000000
0000000000000000000000000000004e414e490000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000001c0000000200e1c208
01000004ef1200000000008c009300dcee1200050100050044534d543500001357696e41
6c6c4261736963436f6465506167657300110554696d6573204e657720526f6d616e0011
0353796d626f6c001105436f7572696572204e65770011044d5420457874726100120008
212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f445f425f48f425f4100f4
100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f4100f412a5f445f45f4
5f45f45f410f0c01000100010202020200020001010100030001000400000900c0010009
6400800002008371000900c003001b0000096401800001000200836d0000010100096400
80000200822800020486c522d70200827c00020486c522d7020082290000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000001050000050000000d0000004d45544146494c455049435400a605000062fdffff
9e0300000800a6059e020000010009000003cb01000002008c0000000000050000000201
01000000050000000102ffffff00050000002e0119000000050000000b02000000000500
00000c02600220051300000026060f001c00ffffffff0000000010000000c0ffffffafff
ffffe00400000f0200000b00000026060f000c004d617468547970650000600005000000
090200000002050000001402a0012a021c000000fb0220fe000000000000900100000000
0002001054696d6573204e657720526f6d616e00be62f577c762f5770100000000003000
040000002d0100000c000000320a0000000003000000287c296d3801e400c00305000000
140203021c011c000000fb02c2fe0000000000009001010000000002001054696d657320
4e657720526f6d616e00be62f577c762f5770100000000003000040000002d0101000400
0000f001000009000000320a00000000010000006d797c02050000001402a0013b001c00
0000fb0220fe0000000000009001010000000002001054696d6573204e657720526f6d61
6e00be62f577c762f5770100000000003000040000002d01000004000000f00101000900
0000320a00000000010000007179c003050000001402a001c0021c000000fb0220fe0000
000000009001000000010002001053796d626f6c007740000000be110ac8be62f577c762
f5770100000000003000040000002d01010004000000f00100000a000000320a00000000
02000000d7d71f01c0038c00000026060f000e014d617468547970655555020105010005
0044534d543500001357696e416c6c4261736963436f6465506167657300110554696d65
73204e657720526f6d616e00110353796d626f6c001105436f7572696572204e65770011
044d5420457874726100120008212f458f442f4150f4100f475f4150f21f1e4150f4150f
4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f
417f48f4100f412a5f445f45f45f45f45f410f0c01000100010202020200020001010100
0300010004000009006001000900e0020083710009006003001b00000901e00100020083
6d00000101000900e00200822800020486c522d70200827c00020486c522d70200822900
00000b00000026060f000c00ffffffff01000000000000001c000000fb02140009000000
0000bc02000000000102022253797374656d000000000a00000004000000000000000000
0100000000003000040000002d01000004000000f0010100030000000000}{\result \fs24
{\pict\picw816\pich372\picwgoal816\pichgoal372\wmetafile8
010009000003f20000000200140000000000030000001e000400000002010100050000000b020c000c00050000000c029f15c72e0400000007010300070000001604ab15d32e0c000c00040000000601010004000000020102000400000002010100040000002e011900050000001402d70ecd1314000000fb02fbee5d0d00
0000009001000000000402001054696d6573204e657720526f6d616e00040000002d010000050000000902000000020800000021050300287c2900d70ecd130500000014025c122c0a14000000fb02b4f40000000000009001010000000402001054696d6573204e657720526f6d616e00040000002d01010004000000f001
000007000000210501006d005c122c0a050000001402d70e270214000000fb02fbee0000000000009001010000000402001054696d6573204e657720526f6d616e00040000002d01000004000000f001010007000000210501007100d70e2702050000001402d70e261910000000fb02fbee8f180000000090010000000104
02001053796d626f6c0000040000002d01010004000000f00100000700000021050200d7d7d70e261910000000fb021c000000000000000000000000010000000053797374656d0000040000002d01000004000000f0010100040000002701ffff030000000000}}}\pard \fs24
}\pard \fs22\fi-3600\li2160\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\field{\*\fldinst ADVANCE \\u 6}{\fldrslt }} by adapting the size of its hyper-spherical domain. Go to Step 2.\par
\pard \fs22\fi-2880\li2160\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
 \ul0 \tab {\plain \fs22 \i\f3\fs22 \ul0 \tab Step 2.\ul0 \tab }{\plain \fs22 \f3\fs22 Set }{\plain \fs22 \i\f3\fs22 i }{\plain \fs22 \f3\fs22 = mod(}{\plain \fs22 \i\f3\fs22 i}{\plain \fs22 \f3\fs22 , }{\plain \fs22 \i\f3\fs22 m}{\plain \fs22 \f3\fs22 ) + 1. Go to Step 3.}{\plain \fs22 \f3\fs22 \par
}{\plain \fs22 \f3\fs22 }{\plain \fs22 \i\f3\fs22 Step 3.\ul0 \tab }{\plain \fs22 \f3\fs22 Sample {\field{\*\fldinst ADVANCE \\d 8}{\fldrslt }}\pard \fs24\tx720\tx1440\tx2160
{\object\objemb\rsltmerge\objsetsize\objw334\objh454{\*\objname }
{\*\objdata 01050000020000000f0000004571756174696f6e2e44534d543400000000000000000000
100000d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006
0000000000000000000000010000000100000000000000001000000200000001000000fe
ffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffff04000000feffffff05000000feffffff06000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072
007900000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000016000500ffffffffffffffff0200000003ce020000000000c0
00000000000046000000000000000000000000f0878ad8e348c401030000004005000000
00000001004f006c00650000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a000201ff
ffffffffffffffffffffff00000000000000000000000000000000000000000000000000
0000000000000000000000000000001400000000000000010043006f006d0070004f0062
006a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000069
00000000000000030042004f006c00650050006100720074000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000014
000200ffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000030000001400000000000000feffffff02000000fe
fffffffeffffff05000000060000000700000008000000090000000a0000000b0000000c
0000000d0000000e0000000f000000feffffff11000000120000001300000014000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01
00000200000000000000000000000000000000575020477265656b2048656c7665000000
0000000000000000000000000000000000000000000000000000000100feff030a0000ff
ffffff03ce020000000000c000000000000046160000004d6174685479706520352e3020
4571756174696f6e000c0000004d61746854797065204546000f0000004571756174696f
6e2e44534d543400f439b271000000000000000000000000000000000000000000000000
000000000000000000000001000000010000000100000001000000010000000400000000
000000000000000000000000000000000000007473000000000000f4057b001000200101
231400ffffffff030000000400000001000000ffffffff0000000000000000ed0100009e
020000ba0200000100090000035d01000002008600000000000500000002010100000005
0000000102ffffff00050000002e0119000000050000000b0200000000050000000c0260
02c0011300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff800100
00060200000b00000026060f000c004d6174685479706500007000050000000902000000
02050000001402e30103011c000000fb0222ff0000000000009001010000000002001054
696d6573204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d
0100000900000002004f006c006500500072006500730030003000300000000000000000
000000000000000000000000000000000000000000000000000000000000000000000018
0002010300000005000000ffffffff000000000000000000000000000000000000000000
00000000000000000000000000000004000000e202000000000000450071007500610074
0069006f006e0020004e0061007400690076006500000000000000000000000000000000
0000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000010
000000120100000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000320a00000000010000007979bc0105000000140280
0116001c000000fb0280fe0000000000009001010000010002001053796d626f6c007740
000000f50f0a761643c3771f43c37720c0c57700003000040000002d01010004000000f0
01000009000000320a0000000001000000717900038600000026060f0002014d61746854
7970655555f600050100050044534d543500001357696e416c6c4261736963436f646550
6167657300110554696d6573204e657720526f6d616e00110353796d626f6c001105436f
7572696572204e65770011044d54204578747261001357696e416c6c436f646550616765
73001106b9d9c5c1c3bc00120008212f458f442f4150f4100f475f4150f21f1e4150f415
0f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f4
8f417f48f4100f412a5f445f45f45f45f45f410f0c010001000102020202000200010101
0003000100040005000a0100020484b8037103001b00000b010002008379000001010000
000b00000026060f000c00ffffffff01000000000000001c000000fb0210000800000000
009001000000810102022253797374656d000000000a0021008a01000000000000000038
e612002942c377040000002d01000004000000f001010003000000000000000000000000
00000000000000000000000000000000000000000000001c0000000200cac1f600000024
e91200000000008c00a600fce81200050100050044534d543500001357696e416c6c4261
736963436f6465506167657300110554696d6573204e657720526f6d616e00110353796d
626f6c001105436f7572696572204e65770011044d54204578747261001357696e416c6c
436f64655061676573001106b9d9c5c1c3bc00120008212f458f442f4150f4100f475f41
50f21f1e4150f4150f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f4
8f4100f4100f40f48f417f48f4100f412a5f445f45f45f45f45f410f0c01000100010202
02020002000101010003000100040005000a0100020484b8037103001b00000b01000200
837900000101000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000105000005
0000000d0000004d45544146494c455049435400ed01000062fdffffc20200000800ed01
9e0200000100090000035d01000002008600000000000500000002010100000005000000
0102ffffff00050000002e0119000000050000000b0200000000050000000c026002c001
1300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff800100000602
00000b00000026060f000c004d6174685479706500007000050000000902000000020500
00001402e30103011c000000fb0222ff0000000000009001010000000002001054696d65
73204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d010000
09000000320a00000000010000007979bc01050000001402800116001c000000fb0280fe
0000000000009001010000010002001053796d626f6c007740000000f50f0a761643c377
1f43c37720c0c57700003000040000002d01010004000000f001000009000000320a0000
000001000000717900038600000026060f0002014d617468547970655555f60005010005
0044534d543500001357696e416c6c4261736963436f6465506167657300110554696d65
73204e657720526f6d616e00110353796d626f6c001105436f7572696572204e65770011
044d54204578747261001357696e416c6c436f64655061676573001106b9d9c5c1c3bc00
120008212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f445f425f48f425f
4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f4100f412a5f44
5f45f45f45f45f410f0c0100010001020202020002000101010003000100040005000a01
00020484b8037103001b00000b010002008379000001010000000b00000026060f000c00
ffffffff01000000000000001c000000fb02100008000000000090010000008101020222
53797374656d000000000a0021008a01000000000000000038e612002942c37704000000
2d01000004000000f0010100030000000000}{\result \fs24
{\pict\picw334\pich454\picwgoal334\pichgoal454\wmetafile8
010009000003a10000000200140000000000030000001e000400000002010100050000000b020c000c00050000000c02c72e71220400000007010300070000001604d32e7d220c000c00040000000601010004000000020102000400000002010100040000002e0119000500000014023525f51314000000fb02f6ee000000
0000009001010000000402001054696d6573204e657720526f6d616e00040000002d01000005000000090200000002070000002105010079003525f513050000001402971dbd0110000000fb0279e20000000000009001010000010402001053796d626f6c0000040000002d01010004000000f00100000700000021050100
7100971dbd0110000000fb021c000000000000000000000000010000000053797374656d0000040000002d01000004000000f0010100040000002701ffff030000000000}}}\pard \fs24
}{\field{\*\fldinst ADVANCE \\u 8}{\fldrslt }} from {\field{\*\fldinst ADVANCE \\d 6}{\fldrslt }}\pard \fs24
{\object\objemb\rsltmerge\objsetsize\objw888\objh396{\*\objname }
{\*\objdata 01050000020000000f0000004571756174696f6e2e44534d543400000000000000000000
120000d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006
0000000000000000000000010000000100000000000000001000000200000001000000fe
ffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffff04000000feffffff05000000feffffff0600000007
000000feffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072
007900000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000016000500ffffffffffffffff0200000003ce020000000000c0
000000000000460000000000000000000000001093aad8e348c401030000008006000000
00000001004f006c00650000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a000201ff
ffffffffffffffffffffff00000000000000000000000000000000000000000000000000
0000000000000000000000000000001400000000000000010043006f006d0070004f0062
006a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000069
00000000000000030042004f006c00650050006100720074000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000014
000200ffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000030000001400000000000000feffffff02000000fe
fffffffeffffff05000000060000000700000008000000090000000a0000000b0000000c
0000000d0000000e0000000f0000001000000011000000120000001300000014000000fe
ffffff16000000170000001800000019000000feffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01
00000200000000000000000000000000000000575020437972696c6c6963410000000000
0000000000000000000000000000000000000000000000000000000100feff030a0000ff
ffffff03ce020000000000c000000000000046160000004d6174685479706520352e3020
4571756174696f6e000c0000004d61746854797065204546000f0000004571756174696f
6e2e44534d543400f439b271000000000000000000000000000000000000000000000000
000000000000000000000001000000010000000100000001000000010000000400000000
00000000000000000000000000000000000000747300000000000084067b001000200101
231400ffffffff030000000400000001000000ffffffff000000000000000033060000c1
020000140400000100090000030a02000002009900000000000500000002010100000005
0000000102ffffff00050000002e0119000000050000000b0200000000050000000c0280
02a0051300000026060f001c00ffffffff0000000010000000c0ffffffafffffff600500
002f0200000b00000026060f000c004d6174685479706500007000050000000902000000
02050000001402a0019b011c000000fb0220fe0000000000009001000000000002001054
696d6573204e657720526f6d616e00be62f577c762f5770100000000003000040000002d
0100000c00000002004f006c006500500072006500730030003000300000000000000000
000000000000000000000000000000000000000000000000000000000000000000000018
0002010300000005000000ffffffff000000000000000000000000000000000000000000
000000000000000000000000000000040000003c04000000000000450071007500610074
0069006f006e0020004e0061007400690076006500000000000000000000000000000000
0000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000015
000000370100000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000320a0000000003000000287c29003801f501c00305
0000001402280214011c000000fb02c2fe0000000000009001010000000002001054696d
6573204e657720526f6d616e00be62f577c762f5770100000000003000040000002d0101
0004000000f00100000a000000320a0000000002000000696926037c02050000001402a0
013b001c000000fb0220fe0000000000009001010000000002001054696d6573204e6577
20526f6d616e00be62f577c762f5770100000000003000040000002d01000004000000f0
01010009000000320a00000000010000007169c003050000001402a00138031c000000fb
0220fe0000000000009001010000010002001053796d626f6c00774000000013080ab6be
62f577c762f5770100000000003000040000002d01010004000000f00100000900000032
0a00000000010000007169c003050000001402a00131021c000000fb0220fe0000000000
009001000000010002001053796d626f6c007740000000de0d0a1bbe62f577c762f57701
00000000003000040000002d01000004000000f001010009000000320a00000000010000
00d769c0039900000026060f0027014d6174685479706555551b01050100050044534d54
3500001357696e416c6c4261736963436f6465506167657300110554696d6573204e6577
20526f6d616e00110353796d626f6c001105436f7572696572204e65770011044d542045
7874726100120008212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f445f4
25f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f410
0f412a5f445f45f45f45f45f410f0c010001000102020202000200010101000300010004
00000900a001000900e002008371000900a003001b00000901e001000200836900000101
000900e00200822800020486c522d70200827c00020484b803710900a003001b00000901
e001000200836900000101000900e002008229000000300b00000026060f000c00ffffff
ff01000000000000001c000000fb021400090000000000bc020000000001020222537973
74656d000000000a000000040000000000010000000100000000003000040000002d0101
0004000000f0010000030000000000000000001c0000000200e9c21b010000d8ee120000
0000008c009300b0ee1200050100050044534d543500001357696e416c6c426173696343
6f6465506167657300110554696d6573204e657720526f6d616e00110353796d626f6c00
1105436f7572696572204e65770011044d5420457874726100120008212f458f442f4150
f4100f475f4150f21f1e4150f4150f4100f445f425f48f425f4100f4100f435f4100f48f
45f42a5f48f48f4100f4100f40f48f417f48f4100f412a5f445f45f45f45f45f410f0c01
000100010202020200020001010100030001000400000900a001000900e0020083710009
00a003001b00000901e001000200836900000101000900e00200822800020486c522d702
00827c00020484b803710900a003001b00000901e001000200836900000101000900e002
008229000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000001050000050000000d0000004d45544146494c455049435400330600003ffdffff
1c04000008003306c10200000100090000030a0200000200990000000000050000000201
01000000050000000102ffffff00050000002e0119000000050000000b02000000000500
00000c028002a0051300000026060f001c00ffffffff0000000010000000c0ffffffafff
ffff600500002f0200000b00000026060f000c004d617468547970650000700005000000
090200000002050000001402a0019b011c000000fb0220fe000000000000900100000000
0002001054696d6573204e657720526f6d616e00be62f577c762f5770100000000003000
040000002d0100000c000000320a0000000003000000287c29003801f501c00305000000
1402280214011c000000fb02c2fe0000000000009001010000000002001054696d657320
4e657720526f6d616e00be62f577c762f5770100000000003000040000002d0101000400
0000f00100000a000000320a0000000002000000696926037c02050000001402a0013b00
1c000000fb0220fe0000000000009001010000000002001054696d6573204e657720526f
6d616e00be62f577c762f5770100000000003000040000002d01000004000000f0010100
09000000320a00000000010000007169c003050000001402a00138031c000000fb0220fe
0000000000009001010000010002001053796d626f6c00774000000013080ab6be62f577
c762f5770100000000003000040000002d01010004000000f001000009000000320a0000
0000010000007169c003050000001402a00131021c000000fb0220fe0000000000009001
000000010002001053796d626f6c007740000000de0d0a1bbe62f577c762f57701000000
00003000040000002d01000004000000f001010009000000320a0000000001000000d769
c0039900000026060f0027014d6174685479706555551b01050100050044534d54350000
1357696e416c6c4261736963436f6465506167657300110554696d6573204e657720526f
6d616e00110353796d626f6c001105436f7572696572204e65770011044d542045787472
6100120008212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f445f425f48f
425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f4100f412a
5f445f45f45f45f45f410f0c010001000102020202000200010101000300010004000009
00a001000900e002008371000900a003001b00000901e001000200836900000101000900
e00200822800020486c522d70200827c00020484b803710900a003001b00000901e00100
0200836900000101000900e002008229000000300b00000026060f000c00ffffffff0100
0000000000001c000000fb021400090000000000bc02000000000102022253797374656d
000000000a000000040000000000010000000100000000003000040000002d0101000400
0000f0010000030000000000}{\result \fs24
{\pict\picw888\pich396\picwgoal888\pichgoal396\wmetafile8
010009000003160100000200140000000000030000001e000400000002010100050000000b020c000c00050000000c02bc14c72e0400000007010300070000001604c814d32e0c000c00040000000601010004000000020102000400000002010100040000002e011900050000001402860d660d14000000fb027ef0531200
0000009001000000000402001054696d6573204e657720526f6d616e00040000002d010000050000000902000000020800000021050300287c2900860d660d050000001402ee11030914000000fb02b5f5dd25000000009001010000000402001054696d6573204e657720526f6d616e00040000002d01010004000000f001
000007000000210502006969ee110309050000001402860df70114000000fb027ef00000000000009001010000000402001054696d6573204e657720526f6d616e00040000002d01000004000000f001010007000000210501007100860df701050000001402860dd01a10000000fb027ef000000000000090010100000104
02001053796d626f6c0000040000002d01010004000000f001000007000000210501007100860dd01a050000001402860d451210000000fb027ef00000000000009001000000010402001053796d626f6c0000040000002d01000004000000f00101000700000021050100d700860d451210000000fb021c00000000000000
0000000000010000000053797374656d0000040000002d01010004000000f0010000040000002701ffff030000000000}}}{\field{\*\fldinst ADVANCE \\u 6}{\fldrslt }}. If {\field{\*\fldinst ADVANCE \\d 8}{\fldrslt }}\pard \fs24
{\object\objemb\rsltmerge\objsetsize\objw334\objh454{\*\objname }
{\*\objdata 01050000020000000f0000004571756174696f6e2e44534d543400000000000000000000
100000d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006
0000000000000000000000010000000100000000000000001000000200000001000000fe
ffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffff04000000feffffff05000000feffffff06000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072
007900000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000016000500ffffffffffffffff0200000003ce020000000000c0
0000000000004600000000000000000000000010c450ecc95ec401030000004005000000
00000001004f006c00650000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a000201ff
ffffffffffffffffffffff00000000000000000000000000000000000000000000000000
0000000000000000000000000000001400000000000000010043006f006d0070004f0062
006a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000069
00000000000000030042004f006c00650050006100720074000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000014
000200ffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000030000001400000000000000feffffff02000000fe
fffffffeffffff05000000060000000700000008000000090000000a0000000b0000000c
0000000d0000000e0000000f000000feffffff11000000120000001300000014000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01
000002000000000000000000000000000000001098140000000000000000000000000000
0000000000000000000000000000000000000000000000000000000100feff030a0000ff
ffffff03ce020000000000c000000000000046160000004d6174685479706520352e3020
4571756174696f6e000c0000004d61746854797065204546000f0000004571756174696f
6e2e44534d543400f439b271000000000000000000000000000000000000000000000000
000000000000000000000001000000010000000100000001000000010000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000ffffffff030000000400000001000000ffffffff0000000000000000ed0100009e
020000ba0200000100090000035d01000002008600000000000500000002010100000005
0000000102ffffff00050000002e0119000000050000000b0200000000050000000c0260
02c0011300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff800100
00060200000b00000026060f000c004d6174685479706500007000050000000902000000
02050000001402e30103011c000000fb0222ff0000000000009001010000000002001054
696d6573204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d
0100000900000002004f006c006500500072006500730030003000300000000000000000
000000000000000000000000000000000000000000000000000000000000000000000018
0002010300000005000000ffffffff000000000000000000000000000000000000000000
00000000000000000000000000000004000000e202000000000000450071007500610074
0069006f006e0020004e0061007400690076006500000000000000000000000000000000
0000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000010
000000120100000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000320a00000000010000007979bc0105000000140280
0116001c000000fb0280fe0000000000009001010000010002001053796d626f6c007740
000000f50f0a761643c3771f43c37720c0c57700003000040000002d01010004000000f0
01000009000000320a0000000001000000717900038600000026060f0002014d61746854
7970655555f600050100050044534d543500001357696e416c6c4261736963436f646550
6167657300110554696d6573204e657720526f6d616e00110353796d626f6c001105436f
7572696572204e65770011044d54204578747261001357696e416c6c436f646550616765
73001106b9d9c5c1c3bc00120008212f458f442f4150f4100f475f4150f21f1e4150f415
0f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f4
8f417f48f4100f412a5f445f45f45f45f45f410f0c010001000102020202000200010101
0003000100040005000a0100020484b8037103001b00000b010002008379000001010000
000b00000026060f000c00ffffffff01000000000000001c000000fb0210000800000000
009001000000810102022253797374656d000000000a0021008a01000000000000000038
e612002942c377040000002d01000004000000f001010003000000000000000000000000
000000c4087b00030007000100000078a91400e8441a001c0000000200cac1f600000024
e91200000000008c00a600fce81200050100050044534d543500001357696e416c6c4261
736963436f6465506167657300110554696d6573204e657720526f6d616e00110353796d
626f6c001105436f7572696572204e65770011044d54204578747261001357696e416c6c
436f64655061676573001106b9d9c5c1c3bc00120008212f458f442f4150f4100f475f41
50f21f1e4150f4150f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f4
8f4100f4100f40f48f417f48f4100f412a5f445f45f45f45f45f410f0c01000100010202
02020002000101010003000100040005000a0100020484b8037103001b00000b01000200
837900000101000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000105000005
0000000d0000004d45544146494c455049435400ed01000062fdffffc20200000800ed01
9e0200000100090000035d01000002008600000000000500000002010100000005000000
0102ffffff00050000002e0119000000050000000b0200000000050000000c026002c001
1300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff800100000602
00000b00000026060f000c004d6174685479706500007000050000000902000000020500
00001402e30103011c000000fb0222ff0000000000009001010000000002001054696d65
73204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d010000
09000000320a00000000010000007979bc01050000001402800116001c000000fb0280fe
0000000000009001010000010002001053796d626f6c007740000000f50f0a761643c377
1f43c37720c0c57700003000040000002d01010004000000f001000009000000320a0000
000001000000717900038600000026060f0002014d617468547970655555f60005010005
0044534d543500001357696e416c6c4261736963436f6465506167657300110554696d65
73204e657720526f6d616e00110353796d626f6c001105436f7572696572204e65770011
044d54204578747261001357696e416c6c436f64655061676573001106b9d9c5c1c3bc00
120008212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f445f425f48f425f
4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f4100f412a5f44
5f45f45f45f45f410f0c0100010001020202020002000101010003000100040005000a01
00020484b8037103001b00000b010002008379000001010000000b00000026060f000c00
ffffffff01000000000000001c000000fb02100008000000000090010000008101020222
53797374656d000000000a0021008a01000000000000000038e612002942c37704000000
2d01000004000000f0010100030000000000}{\result \fs24
{\pict\picw334\pich454\picwgoal334\pichgoal454\wmetafile8
010009000003a10000000200140000000000030000001e000400000002010100050000000b020c000c00050000000c02c72e71220400000007010300070000001604d32e7d220c000c00040000000601010004000000020102000400000002010100040000002e0119000500000014023525f51314000000fb02f6ee000000
0000009001010000000402001054696d6573204e657720526f6d616e00040000002d01000005000000090200000002070000002105010079003525f513050000001402971dbd0110000000fb0279e20000000000009001010000010402001053796d626f6c0000040000002d01010004000000f00100000700000021050100
7100971dbd0110000000fb021c000000000000000000000000010000000053797374656d0000040000002d01000004000000f0010100040000002701ffff030000000000}}}{\field{\*\fldinst ADVANCE \\u 8}{\fldrslt }}{\plain \fs22 \f3\fs22  generates a new valid \softline
pattern, set }{\plain \fs22 \i\f3\fs22 m}{\plain \fs22 \f3\fs22  = }{\plain \fs22 \i\f3\fs22 m}{\plain \fs22 \f3\fs22  + 1, {\field{\*\fldinst ADVANCE \\d 7}{\fldrslt }}\pard \fs24
{\object\objemb\rsltmerge\objsetsize\objw912\objh408{\*\objname }
{\*\objdata 01050000020000000f0000004571756174696f6e2e44534d543400000000000000000000
100000d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006
0000000000000000000000010000000100000000000000001000000200000001000000fe
ffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffff04000000feffffff05000000feffffff06000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072
007900000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000016000500ffffffffffffffff0200000003ce020000000000c0
000000000000460000000000000000000000007088ef7fed48c40103000000c005000000
00000001004f006c00650000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a000201ff
ffffffffffffffffffffff00000000000000000000000000000000000000000000000000
0000000000000000000000000000001400000000000000010043006f006d0070004f0062
006a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000069
00000000000000030042004f006c00650050006100720074000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000014
000200ffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000030000001400000000000000feffffff02000000fe
fffffffeffffff05000000060000000700000008000000090000000a0000000b0000000c
0000000d0000000e0000000f0000001000000011000000feffffff130000001400000015
00000016000000feffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01
0000020000000000000000000000000000000061006d00460069006c00650073003d0043
003a005c00500072006f006700720061006d002000460069006c000100feff030a0000ff
ffffff03ce020000000000c000000000000046160000004d6174685479706520352e3020
4571756174696f6e000c0000004d61746854797065204546000f0000004571756174696f
6e2e44534d543400f439b2710000000000000000000000000031005c0057004f004f004a
00410045007e0031002e0001000000010000000100000001000000010000007e0031005c
00540065006d007000000054004d0050003d0043003a005c0044004f00430055004d0045
007e00ffffffff030000000400000001000000ffffffff000000000000000056060000e4
020000300300000100090000039801000002008d00000000000500000002010100000005
0000000102ffffff00050000002e0119000000050000000b0200000000050000000c02a0
02c0051300000026060f001c00ffffffff0000000010000000c0ffffffafffffff800500
004f0200000b00000026060f000c004d6174685479706500008000050000000902000000
02050000001402030214011c000000fb02c2fe0000000000009001010000000002001054
696d6573204e657720526f6d616e00be62f577c762f5770100000000003000040000002d
0100000a00000002004f006c006500500072006500730030003000300000000000000000
000000000000000000000000000000000000000000000000000000000000000000000018
0002010300000005000000ffffffff000000000000000000000000000000000000000000
000000000000000000000000000000040000007203000000000000450071007500610074
0069006f006e0020004e0061007400690076006500000000000000000000000000000000
0000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000012
000000260100000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000320a00000000020000006d79c7037c020500000014
02a0010a001c000000fb0220fe0000000000009001010000010002001053796d626f6c00
7740000000cb0f0aeabe62f577c762f5770100000000003000040000002d010100040000
00f00100000a000000320a00000000020000007171a503c003050000001402a0017d021c
000000fb0220fe0000000000009001000000010002001053796d626f6c007740000000f7
0d0abfbe62f577c762f5770100000000003000040000002d01000004000000f001010009
000000320a00000000010000003d71c0038d00000026060f0010014d6174685479706555
550401050100050044534d543500001357696e416c6c4261736963436f64655061676573
00110554696d6573204e657720526f6d616e00110353796d626f6c001105436f75726965
72204e65770011044d5420457874726100120008212f458f442f4150f4100f475f4150f2
1f1e4150f4150f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f41
00f4100f40f48f417f48f4100f412a5f445f45f45f45f45f410f0c010001000102020202
00020001010100030001000400000a01000900e0020484b803710a03001b00000901e001
000200836d00000101000900e00204863d003d020484b803710a03001b00000901e00100
02008379000001010000000b00000026060f000c00ffffffff01000000000000001c0000
00fb021400090000000000bc02000000000102022253797374656d000000000a00000004
0000000000010000000100000000003000040000002d01010004000000f0010000030000
0000000000000000000000000000000000000000004e414e49000000001c000000fb0214
000900000000001c0000000200e1c20a010000d8ee1200000000008c009300b0ee120005
0100050044534d543500001357696e416c6c4261736963436f6465506167657300110554
696d6573204e657720526f6d616e00110353796d626f6c001105436f7572696572204e65
770011044d5420457874726100120008212f458f442f4150f4100f475f4150f21f1e4150
f4150f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f
40f48f417f48f4100f412a5f445f45f45f45f45f410f0c01000100010202020200020001
010100030001000400000900c001000900e0020484b803710900c003001b00000901e001
000200836900000101000900e00204863d003d020484b803710900c003001b00000901e0
01000200837900000101000000f48f4100f4100f40f48f417f48f4100f412a5f445f45f4
5f45f45f410f0c01000100010202020200020001010100030001000400000900c0010009
00e0020484b803710900c003001b00000901e00100020083690000010100090105000005
0000000d0000004d45544146494c455049435400560600001cfdffff3803000008005606
e40200000100090000039801000002008d00000000000500000002010100000005000000
0102ffffff00050000002e0119000000050000000b0200000000050000000c02a002c005
1300000026060f001c00ffffffff0000000010000000c0ffffffafffffff800500004f02
00000b00000026060f000c004d6174685479706500008000050000000902000000020500
00001402030214011c000000fb02c2fe0000000000009001010000000002001054696d65
73204e657720526f6d616e00be62f577c762f5770100000000003000040000002d010000
0a000000320a00000000020000006d79c7037c02050000001402a0010a001c000000fb02
20fe0000000000009001010000010002001053796d626f6c007740000000cb0f0aeabe62
f577c762f5770100000000003000040000002d01010004000000f00100000a000000320a
00000000020000007171a503c003050000001402a0017d021c000000fb0220fe00000000
00009001000000010002001053796d626f6c007740000000f70d0abfbe62f577c762f577
0100000000003000040000002d01000004000000f001010009000000320a000000000100
00003d71c0038d00000026060f0010014d6174685479706555550401050100050044534d
543500001357696e416c6c4261736963436f6465506167657300110554696d6573204e65
7720526f6d616e00110353796d626f6c001105436f7572696572204e65770011044d5420
457874726100120008212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f445
f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f4
100f412a5f445f45f45f45f45f410f0c0100010001020202020002000101010003000100
0400000a01000900e0020484b803710a03001b00000901e001000200836d000001010009
00e00204863d003d020484b803710a03001b00000901e001000200837900000101000000
0b00000026060f000c00ffffffff01000000000000001c000000fb021400090000000000
bc02000000000102022253797374656d000000000a000000040000000000010000000100
000000003000040000002d01010004000000f0010000030000000000}{\result \fs24
{\pict\picw912\pich408\picwgoal912\pichgoal408\wmetafile8
010009000003c50000000200140000000000030000001e000400000002010100050000000b020c000c00050000000c024d15c72e04000000070103000700000016045915d32e0c000c00040000000601010004000000020102000400000002010100040000002e0119000500000014025f10d10814000000fb02eef52f1500
0000009001010000000402001054696d6573204e657720526f6d616e00040000002d0100000500000009020000000207000000210502006d795f10d1080500000014023c0d5d0010000000fb02d4f02622000000009001010000010402001053796d626f6c0000040000002d01010004000000f00100000700000021050200
71713c0d5d000500000014023c0d4a1410000000fb02d4f00000000000009001000000010402001053796d626f6c0000040000002d01000004000000f001010007000000210501003d003c0d4a1410000000fb021c000000000000000000000000010000000053797374656d0000040000002d01010004000000f001000004
0000002701ffff030000000000}}}\pard \fs24
}{\field{\*\fldinst ADVANCE \\u 7}{\fldrslt }}{\plain \fs22 \f3\fs22 , and}{\plain \fs22 \f3\fs22  record the new \softline
pattern as Pattern }{\plain \fs22 \i\f3\fs22 m}{\plain \fs22 \f3\fs22 , and then go to Step 1. If {\field{\*\fldinst ADVANCE \\d 8}{\fldrslt }}\pard \fs24
{\object\objemb\rsltmerge\objsetsize\objw334\objh454{\*\objname }
{\*\objdata 01050000020000000f0000004571756174696f6e2e44534d543400000000000000000000
100000d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006
0000000000000000000000010000000100000000000000001000000200000001000000fe
ffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffff04000000feffffff05000000feffffff06000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072
007900000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000016000500ffffffffffffffff0200000003ce020000000000c0
00000000000046000000000000000000000000603a03d9e348c401030000004005000000
00000001004f006c00650000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a000201ff
ffffffffffffffffffffff00000000000000000000000000000000000000000000000000
0000000000000000000000000000001400000000000000010043006f006d0070004f0062
006a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000069
00000000000000030042004f006c00650050006100720074000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000014
000200ffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000030000001400000000000000feffffff02000000fe
fffffffeffffff05000000060000000700000008000000090000000a0000000b0000000c
0000000d0000000e0000000f000000feffffff11000000120000001300000014000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01
000002000000000000000000000000000000005750204a6170616e657365000000000000
0000000000000000000000000000000000000000000000000000000100feff030a0000ff
ffffff03ce020000000000c000000000000046160000004d6174685479706520352e3020
4571756174696f6e000c0000004d61746854797065204546000f0000004571756174696f
6e2e44534d543400f439b271000000000000000000000000000000000000000000000000
000000000000000000000001000000010000000100000001000000010000000400000000
000000000000000000000000000000000000006500630000000000d4057b001000200101
231400ffffffff030000000400000001000000ffffffff0000000000000000ed0100009e
020000ba0200000100090000035d01000002008600000000000500000002010100000005
0000000102ffffff00050000002e0119000000050000000b0200000000050000000c0260
02c0011300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff800100
00060200000b00000026060f000c004d6174685479706500007000050000000902000000
02050000001402e30103011c000000fb0222ff0000000000009001010000000002001054
696d6573204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d
0100000900000002004f006c006500500072006500730030003000300000000000000000
000000000000000000000000000000000000000000000000000000000000000000000018
0002010300000005000000ffffffff000000000000000000000000000000000000000000
00000000000000000000000000000004000000e202000000000000450071007500610074
0069006f006e0020004e0061007400690076006500000000000000000000000000000000
0000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000010
000000120100000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000320a00000000010000007979bc0105000000140280
0116001c000000fb0280fe0000000000009001010000010002001053796d626f6c007740
0000003d000a951643c3771f43c37720c0c57700003000040000002d01010004000000f0
01000009000000320a0000000001000000717900038600000026060f0002014d61746854
7970655555f600050100050044534d543500001357696e416c6c4261736963436f646550
6167657300110554696d6573204e657720526f6d616e00110353796d626f6c001105436f
7572696572204e65770011044d54204578747261001357696e416c6c436f646550616765
73001106b9d9c5c1c3bc00120008212f458f442f4150f4100f475f4150f21f1e4150f415
0f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f4
8f417f48f4100f412a5f445f45f45f45f45f410f0c010001000102020202000200010101
0003000100040005000a0100020484b8037103001b00000b010002008379000001010000
000b00000026060f000c00ffffffff01000000000000001c000000fb0210000800000000
009001000000810102022253797374656d000000000a0021008a01000000000000000094
e412002942c377040000002d01000004000000f001010003000000000000000000000000
00000000000000000000000000000000000000000000001c0000000200cac1f600000080
e71200000000008c00a60058e71200050100050044534d543500001357696e416c6c4261
736963436f6465506167657300110554696d6573204e657720526f6d616e00110353796d
626f6c001105436f7572696572204e65770011044d54204578747261001357696e416c6c
436f64655061676573001106b9d9c5c1c3bc00120008212f458f442f4150f4100f475f41
50f21f1e4150f4150f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f4
8f4100f4100f40f48f417f48f4100f412a5f445f45f45f45f45f410f0c01000100010202
02020002000101010003000100040005000a0100020484b8037103001b00000b01000200
837900000101000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000105000005
0000000d0000004d45544146494c455049435400ed01000062fdffffc20200000800ed01
9e0200000100090000035d01000002008600000000000500000002010100000005000000
0102ffffff00050000002e0119000000050000000b0200000000050000000c026002c001
1300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff800100000602
00000b00000026060f000c004d6174685479706500007000050000000902000000020500
00001402e30103011c000000fb0222ff0000000000009001010000000002001054696d65
73204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d010000
09000000320a00000000010000007979bc01050000001402800116001c000000fb0280fe
0000000000009001010000010002001053796d626f6c0077400000003d000a951643c377
1f43c37720c0c57700003000040000002d01010004000000f001000009000000320a0000
000001000000717900038600000026060f0002014d617468547970655555f60005010005
0044534d543500001357696e416c6c4261736963436f6465506167657300110554696d65
73204e657720526f6d616e00110353796d626f6c001105436f7572696572204e65770011
044d54204578747261001357696e416c6c436f64655061676573001106b9d9c5c1c3bc00
120008212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f445f425f48f425f
4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f4100f412a5f44
5f45f45f45f45f410f0c0100010001020202020002000101010003000100040005000a01
00020484b8037103001b00000b010002008379000001010000000b00000026060f000c00
ffffffff01000000000000001c000000fb02100008000000000090010000008101020222
53797374656d000000000a0021008a01000000000000000094e412002942c37704000000
2d01000004000000f0010100030000000000}{\result \fs24
{\pict\picw334\pich454\picwgoal334\pichgoal454\wmetafile8
010009000003a10000000200140000000000030000001e000400000002010100050000000b020c000c00050000000c02c72e71220400000007010300070000001604d32e7d220c000c00040000000601010004000000020102000400000002010100040000002e0119000500000014023525f51314000000fb02f6ee000000
0000009001010000000402001054696d6573204e657720526f6d616e00040000002d01000005000000090200000002070000002105010079003525f513050000001402971dbd0110000000fb0279e20000000000009001010000010402001053796d626f6c0000040000002d01010004000000f00100000700000021050100
7100971dbd0110000000fb021c000000000000000000000000010000000053797374656d0000040000002d01000004000000f0010100040000002701ffff030000000000}}}\pard \fs24
}{\field{\*\fldinst ADVANCE \\u 8}{\fldrslt }} \softline
generates Pattern {\plain \fs22 \i\f3\fs22 i}{\plain \fs22 \f3\fs22 , set {\field{\*\fldinst ADVANCE \\d 8}{\fldrslt }}\pard \fs24
{\object\objemb\rsltmerge\objsetsize\objw838\objh454{\*\objname }
{\*\objdata 01050000020000000f0000004571756174696f6e2e44534d543400000000000000000000
100000d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006
0000000000000000000000010000000100000000000000001000000200000001000000fe
ffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffff04000000feffffff05000000feffffff06000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072
007900000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000016000500ffffffffffffffff0200000003ce020000000000c0
00000000000046000000000000000000000000a0b11ed9e348c40103000000c005000000
00000001004f006c00650000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a000201ff
ffffffffffffffffffffff00000000000000000000000000000000000000000000000000
0000000000000000000000000000001400000000000000010043006f006d0070004f0062
006a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000069
00000000000000030042004f006c00650050006100720074000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000014
000200ffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000030000001400000000000000feffffff02000000fe
fffffffeffffff05000000060000000700000008000000090000000a0000000b0000000c
0000000d0000000e0000000f0000001000000011000000feffffff130000001400000015
00000016000000feffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01
0000020000000000000000000000000000000057502049636f6e696353796d626f6c7342
0000000000000000000000000000000000000000000000000000000100feff030a0000ff
ffffff03ce020000000000c000000000000046160000004d6174685479706520352e3020
4571756174696f6e000c0000004d61746854797065204546000f0000004571756174696f
6e2e44534d543400f439b271000000000000000000000000000000000000000000000000
000000000000000000000001000000010000000100000001000000010000000400000000
000000000000000000000000000000000000006f00720000000000bc067b001000200101
231400ffffffff030000000400000001000000ffffffff0000000000000000d20400009e
02000040030000010009000003a001000002009500000000000500000002010100000005
0000000102ffffff00050000002e0119000000050000000b0200000000050000000c0260
0260041300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff200400
00060200000b00000026060f000c004d6174685479706500007000050000000902000000
02050000001402e301e8001c000000fb0222ff0000000000009001010000000002001054
696d6573204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d
0100000a00000002004f006c006500500072006500730030003000300000000000000000
000000000000000000000000000000000000000000000000000000000000000000000018
0002010300000005000000ffffffff000000000000000000000000000000000000000000
000000000000000000000000000000040000006803000000000000450071007500610074
0069006f006e0020004e0061007400690076006500000000000000000000000000000000
0000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000012
000000300100000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000320a00000000020000006979b902bc010500000014
02800116001c000000fb0280fe0000000000009001010000010002001053796d626f6c00
774000000050120add1643c3771f43c37720c0c57700003000040000002d010100040000
00f00100000a000000320a000000000200000071719e0200030500000014028001ac011c
000000fb0280fe0000000000009001000000010002001053796d626f6c00774000000078
0c0a361643c3771f43c37720c0c57700003000040000002d01000004000000f001010009
000000320a00000000010000003d7100039500000026060f0020014d6174685479706555
551401050100050044534d543500001357696e416c6c4261736963436f64655061676573
00110554696d6573204e657720526f6d616e00110353796d626f6c001105436f75726965
72204e65770011044d54204578747261001357696e416c6c436f64655061676573001106
b9d9c5c1c3bc00120008212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f4
45f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48
f4100f412a5f445f45f45f45f45f410f0c01000100010202020200020001010100030001
00040005000a0100020484b8037103001b00000b01000200836900000101000a0204863d
003d020484b8037103001b00000b010002008379000001010000000b00000026060f000c
00ffffffff01000000000000001c000000fb021000080000000000900100000081010202
2253797374656d000000000a0021008a01000000000100000058e612002942c377040000
002d01010004000000f00100000300000000000000000000000000000000000000000000
000000000000001c0000000200cac114010000fce81200000000008c00a600d4e8120005
0100050044534d543500001357696e416c6c4261736963436f6465506167657300110554
696d6573204e657720526f6d616e00110353796d626f6c001105436f7572696572204e65
770011044d54204578747261001357696e416c6c436f64655061676573001106b9d9c5c1
c3bc00120008212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f445f425f4
8f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f4100f41
2a5f445f45f45f45f45f410f0c0100010001020202020002000101010003000100040005
000a0100020484b8037103001b00000b01000200836900000101000a0204863d003d0204
84b8037103001b00000b0100020083790000010100000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000105000005
0000000d0000004d45544146494c455049435400d204000062fdffff480300000800d204
9e020000010009000003a001000002009500000000000500000002010100000005000000
0102ffffff00050000002e0119000000050000000b0200000000050000000c0260026004
1300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff200400000602
00000b00000026060f000c004d6174685479706500007000050000000902000000020500
00001402e301e8001c000000fb0222ff0000000000009001010000000002001054696d65
73204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d010000
0a000000320a00000000020000006979b902bc01050000001402800116001c000000fb02
80fe0000000000009001010000010002001053796d626f6c00774000000050120add1643
c3771f43c37720c0c57700003000040000002d01010004000000f00100000a000000320a
000000000200000071719e0200030500000014028001ac011c000000fb0280fe00000000
00009001000000010002001053796d626f6c007740000000780c0a361643c3771f43c377
20c0c57700003000040000002d01000004000000f001010009000000320a000000000100
00003d7100039500000026060f0020014d6174685479706555551401050100050044534d
543500001357696e416c6c4261736963436f6465506167657300110554696d6573204e65
7720526f6d616e00110353796d626f6c001105436f7572696572204e65770011044d5420
4578747261001357696e416c6c436f64655061676573001106b9d9c5c1c3bc0012000821
2f458f442f4150f4100f475f4150f21f1e4150f4150f4100f445f425f48f425f4100f410
0f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f4100f412a5f445f45f45f
45f45f410f0c0100010001020202020002000101010003000100040005000a0100020484
b8037103001b00000b01000200836900000101000a0204863d003d020484b8037103001b
00000b010002008379000001010000000b00000026060f000c00ffffffff010000000000
00001c000000fb0210000800000000009001000000810102022253797374656d00000000
0a0021008a01000000000100000058e612002942c377040000002d01010004000000f001
0000030000000000}{\result \fs24
{\pict\picw838\pich454\picwgoal838\pichgoal454\wmetafile8
010009000003c50000000200140000000000030000001e000400000002010100050000000b020c000c00050000000c025919c72e04000000070103000700000016046519d32e0c000c00040000000601010004000000020102000400000002010100040000002e0119000500000014022f14bd0914000000fb02c5f66a2000
0000009001010000000402001054696d6573204e657720526f6d616e00040000002d01000005000000090200000002070000002105020069792f14bd090500000014020e10f70010000000fb0200f03b20000000009001010000010402001053796d626f6c0000040000002d01010004000000f00100000700000021050200
71710e10f7000500000014020e10ec1110000000fb0200f00000000000009001000000010402001053796d626f6c0000040000002d01000004000000f001010007000000210501003d000e10ec1110000000fb021c000000000000000000000000010000000053797374656d0000040000002d01010004000000f001000004
0000002701ffff030000000000}}}\pard \fs24
}\pard \fs24\fi-2160\li2160\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\field{\*\fldinst ADVANCE \\u 8}{\fldrslt }} and go to Step 2.{\plain \fs22 \f3\fs22  \softline
Otherwise, go to step 2.}{\plain \fs24 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 \par
}{\plain \fs24 Note that {\field{\*\fldinst ADVANCE \\d 7}{\fldrslt }}\fs24
{\object\objemb\rsltmerge\objsetsize\objw933\objh432{\*\objname }
{\*\objdata 01050000020000000f0000004571756174696f6e2e44534d543400000000000000000000
120000d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006
0000000000000000000000010000000100000000000000001000000200000001000000fe
ffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffff04000000feffffff05000000feffffff0600000007
000000feffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072
007900000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000016000500ffffffffffffffff0200000003ce020000000000c0
0000000000004600000000000000000000000050d153ecc95ec40103000000c006000000
00000001004f006c00650000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a000201ff
ffffffffffffffffffffff00000000000000000000000000000000000000000000000000
0000000000000000000000000000001400000000000000010043006f006d0070004f0062
006a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000069
00000000000000030042004f006c00650050006100720074000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000014
000200ffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000030000001400000000000000feffffff02000000fe
fffffffeffffff05000000060000000700000008000000090000000a0000000b0000000c
0000000d0000000e0000000f000000100000001100000012000000130000001400000015
000000feffffff1700000018000000190000001a000000feffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01
000002000000000000000000000000000000001098140000000000000000000000000000
0000000000000000000000000000000000000000000000000000000100feff030a0000ff
ffffff03ce020000000000c000000000000046160000004d6174685479706520352e3020
4571756174696f6e000c0000004d61746854797065204546000f0000004571756174696f
6e2e44534d543400f439b271000000000000000000000000000000000000000000000000
000000000000000000000001000000010000000100000001000000010000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000ffffffff030000000400000001000000ffffffff00000000000000005f0500007b
0200001c0400000100090000030e02000002009d00000000000500000002010100000005
0000000102ffffff00050000002e0119000000050000000b0200000000050000000c0240
02e0041300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffffa00400
00e60100000b00000026060f000c004d6174685479706500006000050000000902000000
02050000001402800162011c000000fb0280fe0000000000009001000000000002001054
696d6573204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d
0100000c00000002004f006c006500500072006500730030003000300000000000000000
000000000000000000000000000000000000000000000000000000000000000000000018
0002010300000005000000ffffffff000000000000000000000000000000000000000000
000000000000000000000000000000040000004404000000000000450071007500610074
0069006f006e0020004e0061007400690076006500000000000000000000000000000000
0000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000016
0000003f0100000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000320a0000000003000000287c29000801b401000305
0000001402e301f2001c000000fb0222ff0000000000009001010000000002001054696d
6573204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d0101
0004000000f00100000a000000320a00000000020000006969bc02bc0105000000140280
013a001c000000fb0280fe0000000000009001010000000002001054696d6573204e6577
20526f6d616e001643c3771f43c37720c0c57700003000040000002d01000004000000f0
01010009000000320a0000000001000000716900030500000014028001dc021c000000fb
0280fe0000000000009001010000010002001053796d626f6c00774000000046120ab716
43c3771f43c37720c0c57700003000040000002d01010004000000f00100000900000032
0a0000000001000000716900030500000014028001da011c000000fb0280fe0000000000
009001000000010002001053796d626f6c007740000000af120a7d1643c3771f43c37720
c0c57700003000040000002d01000004000000f001010009000000320a00000000010000
00d76900039d00000026060f002f014d6174685479706555552301050100050044534d54
3500001357696e416c6c4261736963436f6465506167657300110554696d6573204e6577
20526f6d616e00110353796d626f6c001105436f7572696572204e65770011044d542045
78747261001357696e416c6c436f64655061676573001106b9d9c5c1c3bc00120008212f
458f442f4150f4100f475f4150f21f1e4150f4150f4100f445f425f48f425f4100f4100f
435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f4100f412a5f445f45f45f45
f45f410f0c0100010001020202020002000101010003000100040005000a010002008371
0003001b00000b01000200836900000101000a0200822800020486c522d70200827c0002
0484b8037103001b00000b01000200836900000101000a02008229000000000b00000026
060f000c00ffffffff01000000000000001c000000fb0210000800000000009001000000
810102022253797374656d000000000a0021008a01000000000100000058e612002942c3
77040000002d01010004000000f001000003000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001c0000000200cac12301000024e91200000000008c00a600fc
e81200050100050044534d543500001357696e416c6c4261736963436f64655061676573
00110554696d6573204e657720526f6d616e00110353796d626f6c001105436f75726965
72204e65770011044d54204578747261001357696e416c6c436f64655061676573001106
b9d9c5c1c3bc00120008212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f4
45f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48
f4100f412a5f445f45f45f45f45f410f0c01000100010202020200020001010100030001
00040005000a0100020083710003001b00000b01000200836900000101000a0200822800
020486c522d70200827c00020484b8037103001b00000b01000200836900000101000a02
008229000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000001050000050000000d0000004d45544146494c4550494354005f05000085fdffff
2404000008005f057b0200000100090000030e02000002009d0000000000050000000201
01000000050000000102ffffff00050000002e0119000000050000000b02000000000500
00000c024002e0041300000026060f001c00ffffffff00004d0010000000c0ffffffa6ff
ffffa0040000e60100000b00000026060f000c004d617468547970650000600005000000
090200000002050000001402800162011c000000fb0280fe000000000000900100000000
0002001054696d6573204e657720526f6d616e001643c3771f43c37720c0c57700003000
040000002d0100000c000000320a0000000003000000287c29000801b401000305000000
1402e301f2001c000000fb0222ff0000000000009001010000000002001054696d657320
4e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d0101000400
0000f00100000a000000320a00000000020000006969bc02bc0105000000140280013a00
1c000000fb0280fe0000000000009001010000000002001054696d6573204e657720526f
6d616e001643c3771f43c37720c0c57700003000040000002d01000004000000f0010100
09000000320a0000000001000000716900030500000014028001dc021c000000fb0280fe
0000000000009001010000010002001053796d626f6c00774000000046120ab71643c377
1f43c37720c0c57700003000040000002d01010004000000f001000009000000320a0000
000001000000716900030500000014028001da011c000000fb0280fe0000000000009001
000000010002001053796d626f6c007740000000af120a7d1643c3771f43c37720c0c577
00003000040000002d01000004000000f001010009000000320a0000000001000000d769
00039d00000026060f002f014d6174685479706555552301050100050044534d54350000
1357696e416c6c4261736963436f6465506167657300110554696d6573204e657720526f
6d616e00110353796d626f6c001105436f7572696572204e65770011044d542045787472
61001357696e416c6c436f64655061676573001106b9d9c5c1c3bc00120008212f458f44
2f4150f4100f475f4150f21f1e4150f4150f4100f445f425f48f425f4100f4100f435f41
00f48f45f42a5f48f48f4100f4100f40f48f417f48f4100f412a5f445f45f45f45f45f41
0f0c0100010001020202020002000101010003000100040005000a010002008371000300
1b00000b01000200836900000101000a0200822800020486c522d70200827c00020484b8
037103001b00000b01000200836900000101000a02008229000000000b00000026060f00
0c00ffffffff01000000000000001c000000fb0210000800000000009001000000810102
022253797374656d000000000a0021008a01000000000100000058e612002942c3770400
00002d01010004000000f0010000030000000000}{\result \fs24
{\pict\picw933\pich432\picwgoal933\pichgoal432\wmetafile8
010009000003160100000200140000000000030000001e000400000002010100050000000b020c000c00050000000c028915c72e04000000070103000700000016049515d32e0c000c00040000000601010004000000020102000400000002010100040000002e011900050000001402670e510d14000000fb02a7f1361200
0000009001000000000402001054696d6573204e657720526f6d616e00040000002d010000050000000902000000020800000021050300287c2900670e510d0500000014021b121e0914000000fb02b9f7f225000000009001010000000402001054696d6573204e657720526f6d616e00040000002d01010004000000f001
0000070000002105020069691b121e09050000001402670e390214000000fb02a7f10000000000009001010000000402001054696d6573204e657720526f6d616e00040000002d01000004000000f001010007000000210501007100670e3902050000001402670e7c1b10000000fb02a7f100000000000090010100000104
02001053796d626f6c0000040000002d01010004000000f001000007000000210501007100670e7c1b050000001402670ed01110000000fb02a7f10000000000009001000000010402001053796d626f6c0000040000002d01000004000000f00101000700000021050100d700670ed01110000000fb021c00000000000000
0000000000010000000053797374656d0000040000002d01010004000000f0010000040000002701ffff030000000000}}}\pard \fs24
}{\field{\*\fldinst ADVANCE \\u 7}{\fldrslt }} is the jumping distribution of the region corresponding to Pattern {\plain \fs24 \i i}{\plain \fs24 , whose \softline
center is at {\field{\*\fldinst ADVANCE \\d 7}{\fldrslt }}\pard \fs24
{\object\objemb\rsltmerge\objsetsize\objw286\objh432{\*\objname }
{\*\objdata 01050000020000000f0000004571756174696f6e2e44534d543400000000000000000000
100000d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006
0000000000000000000000010000000100000000000000001000000200000001000000fe
ffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffff04000000feffffff05000000feffffff06000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072
007900000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000016000500ffffffffffffffff0200000003ce020000000000c0
0000000000004600000000000000000000000090de56ecc95ec401030000004005000000
00000001004f006c00650000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a000201ff
ffffffffffffffffffffff00000000000000000000000000000000000000000000000000
0000000000000000000000000000001400000000000000010043006f006d0070004f0062
006a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000069
00000000000000030042004f006c00650050006100720074000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000014
000200ffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000030000001400000000000000feffffff02000000fe
fffffffeffffff05000000060000000700000008000000090000000a0000000b0000000c
0000000d0000000e0000000f000000feffffff11000000120000001300000014000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01
000002000000000000000000000000000000001098140000000000000000000000000000
0000000000000000000000000000000000000000000000000000000100feff030a0000ff
ffffff03ce020000000000c000000000000046160000004d6174685479706520352e3020
4571756174696f6e000c0000004d61746854797065204546000f0000004571756174696f
6e2e44534d543400f439b271000000000000000000000000000000000000000000000000
000000000000000000000001000000010000000100000001000000010000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000ffffffff030000000400000001000000ffffffff0000000000000000a70100007b
020000ba0200000100090000035d01000002008600000000000500000002010100000005
0000000102ffffff00050000002e0119000000050000000b0200000000050000000c0240
0280011300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff400100
00e60100000b00000026060f000c004d6174685479706500006000050000000902000000
02050000001402e301e8001c000000fb0222ff0000000000009001010000000002001054
696d6573204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d
0100000900000002004f006c006500500072006500730030003000300000000000000000
000000000000000000000000000000000000000000000000000000000000000000000018
0002010300000005000000ffffffff000000000000000000000000000000000000000000
00000000000000000000000000000004000000e202000000000000450071007500610074
0069006f006e0020004e0061007400690076006500000000000000000000000000000000
0000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000010
000000120100000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000320a00000000010000006979bc0105000000140280
0116001c000000fb0280fe0000000000009001010000010002001053796d626f6c007740
000000d70e0a4c1643c3771f43c37720c0c57700003000040000002d01010004000000f0
01000009000000320a0000000001000000717900038600000026060f0002014d61746854
7970655555f600050100050044534d543500001357696e416c6c4261736963436f646550
6167657300110554696d6573204e657720526f6d616e00110353796d626f6c001105436f
7572696572204e65770011044d54204578747261001357696e416c6c436f646550616765
73001106b9d9c5c1c3bc00120008212f458f442f4150f4100f475f4150f21f1e4150f415
0f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f4
8f417f48f4100f412a5f445f45f45f45f45f410f0c010001000102020202000200010101
0003000100040005000a0100020484b8037103001b00000b010002008369000001010000
000b00000026060f000c00ffffffff01000000000000001c000000fb0210000800000000
009001000000810102022253797374656d000000000a0021008a0100000000000000009c
e612002942c377040000002d01000004000000f001010003000000000005000123140000
00000000000000000000000000000001000000e8441a001c0000000200cac1f600000088
e91200000000008c00a60060e91200050100050044534d543500001357696e416c6c4261
736963436f6465506167657300110554696d6573204e657720526f6d616e00110353796d
626f6c001105436f7572696572204e65770011044d54204578747261001357696e416c6c
436f64655061676573001106b9d9c5c1c3bc00120008212f458f442f4150f4100f475f41
50f21f1e4150f4150f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f4
8f4100f4100f40f48f417f48f4100f412a5f445f45f45f45f45f410f0c01000100010202
02020002000101010003000100040005000a0100020484b8037103001b00000b01000200
836900000101000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000105000005
0000000d0000004d45544146494c455049435400a701000085fdffffc20200000800a701
7b0200000100090000035d01000002008600000000000500000002010100000005000000
0102ffffff00050000002e0119000000050000000b0200000000050000000c0240028001
1300000026060f001c00ffffffff00004d0010000000c0ffffffa6ffffff40010000e601
00000b00000026060f000c004d6174685479706500006000050000000902000000020500
00001402e301e8001c000000fb0222ff0000000000009001010000000002001054696d65
73204e657720526f6d616e001643c3771f43c37720c0c57700003000040000002d010000
09000000320a00000000010000006979bc01050000001402800116001c000000fb0280fe
0000000000009001010000010002001053796d626f6c007740000000d70e0a4c1643c377
1f43c37720c0c57700003000040000002d01010004000000f001000009000000320a0000
000001000000717900038600000026060f0002014d617468547970655555f60005010005
0044534d543500001357696e416c6c4261736963436f6465506167657300110554696d65
73204e657720526f6d616e00110353796d626f6c001105436f7572696572204e65770011
044d54204578747261001357696e416c6c436f64655061676573001106b9d9c5c1c3bc00
120008212f458f442f4150f4100f475f4150f21f1e4150f4150f4100f445f425f48f425f
4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40f48f417f48f4100f412a5f44
5f45f45f45f45f410f0c0100010001020202020002000101010003000100040005000a01
00020484b8037103001b00000b010002008369000001010000000b00000026060f000c00
ffffffff01000000000000001c000000fb02100008000000000090010000008101020222
53797374656d000000000a0021008a0100000000000000009ce612002942c37704000000
2d01000004000000f0010100030000000000}{\result \fs24
{\pict\picw286\pich432\picwgoal286\pichgoal432\wmetafile8
010009000003a10000000200140000000000030000001e000400000002010100050000000b020c000c00050000000c02c72e271f0400000007010300070000001604d32e331f0c000c00040000000601010004000000020102000400000002010100040000002e0119000500000014024627de1214000000fb0204ee000000
0000009001010000000402001054696d6573204e657720526f6d616e00040000002d01000005000000090200000002070000002105010069004627de120500000014023b1fd50110000000fb02d5e00000000000009001010000010402001053796d626f6c0000040000002d01010004000000f00100000700000021050100
71003b1fd50110000000fb021c000000000000000000000000010000000053797374656d0000040000002d01000004000000f0010100040000002701ffff030000000000}}}\pard \fs24
}{\field{\*\fldinst ADVANCE \\u 7}{\fldrslt }}, and that {\plain \fs24 \i  i {\field{\*\fldinst ADVANCE \\d 6}{\fldrslt }}\pard \fs24
{\object\objemb\rsltmerge\objsetsize\objw1245\objh382{\*\objname }
{\*\objdata 01050000020000000f0000004571756174696f6e2e44534d543400000000000000000000
100000d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006
0000000000000000000000010000000100000000000000001000000200000001000000fe
ffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffff04000000feffffff05000000feffffff06000000fe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072
007900000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000016000500ffffffffffffffff0200000003ce020000000000c0
00000000000046000000000000000000000000d0eb59ecc95ec40103000000c005000000
00000001004f006c00650000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a000201ff
ffffffffffffffffffffff00000000000000000000000000000000000000000000000000
0000000000000000000000000000001400000000000000010043006f006d0070004f0062
006a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000120002010100000004000000ffffffff0000000000
000000000000000000000000000000000000000000000000000000000000000100000069
00000000000000030042004f006c00650050006100720074000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000014
000200ffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000030000001400000000000000feffffff02000000fe
fffffffeffffff05000000060000000700000008000000090000000a0000000b0000000c
0000000d0000000e0000000f0000001000000011000000feffffff130000001400000015
00000016000000feffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01
000002000000000000000000000000000000001098140000000000000000000000000000
0000000000000000000000000000000000000000000000000000000100feff030a0000ff
ffffff03ce020000000000c000000000000046160000004d6174685479706520352e3020
4571756174696f6e000c0000004d61746854797065204546000f0000004571756174696f
6e2e44534d543400f439b271000000000000000000000000000000000000000000000000
000000000000000000000001000000010000000100000001000000010000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000ffffffff030000000400000001000000ffffffff00000000000000002a07000034
0200001c0300000100090000038e01000002008000000000000500000002010100000005
0000000102ffffff00050000002e0119000000050000000b0200000000050000000c0200
0280061300000026060f001c00ffffffff00004d0010000000c0ffffffc6ffffff400600
00c60100000b00000026060f000c004d6174685479706500005000050000000902000000
02050000001402600134001c000000fb0280fe0000000000009001000000000002001054
696d6573204e657720526f6d616e0015abc7771eabc777c0a9ca7700003000040000002d
0100000c00000002004f006c006500500072006500730030003000300000000000000000
000000000000000000000000000000000000000000000000000000000000000000000018
0002010300000005000000ffffffff000000000000000000000000000000000000000000
000000000000000000000000000000040000004403000000000000450071007500610074
0069006f006e0020004e0061007400690076006500000000000000000000000000000000
0000000000000000000000000000000000000020000200ffffffffffffffffffffffff00
000000000000000000000000000000000000000000000000000000000000000000000012
000000050100000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000320a00000000030000002831290060001c05000305
00000014026001a4021c000000fb0280fe0000000000009001010000000002001054696d
6573204e657720526f6d616e0015abc7771eabc777c0a9ca7700003000040000002d0101
0004000000f00100000a000000320a0000000002000000696df201000305000000140260
0184011c000000fb0280fe0000000000009001000000010002001053796d626f6c007740
0000007a0b0a5715abc7771eabc777c0a9ca7700003000040000002d01000004000000f0
0101000a000000320a0000000002000000a3a3e60100038000000026060f00f5004d6174
68547970655555e900050100050144534d543500001357696e416c6c4261736963436f64
65506167657300110554696d6573204e657720526f6d616e00110353796d626f6c001105
436f7572696572204e65770011044d5420457874726100120008212f458f442f4150f410
0f475f4150f21f1e4150f4150f4100f445f425f48f425f4100f4100f435f4100f48f45f4
2a5f48f48f4100f4100f40f48f417f48f4100f412a5f445f45f45f45f45f410f0c010101
00010202020200020001010100030001000400000a010002008228000200883100020486
6422a302008369000204866422a30200836d0002008229000000000b00000026060f000c
00ffffffff01000000000000001c000000fb021000070000000000bc0200000000010202
2253797374656d000000000a0021008a010000000001000000b0e61200aaafc777040000
002d01010004000000f00100000300000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000001c00000002005fc2e900000018e912000000000034009e00f0e8120005
0100050144534d543500001357696e416c6c4261736963436f6465506167657300110554
696d6573204e657720526f6d616e00110353796d626f6c001105436f7572696572204e65
770011044d5420457874726100120008212f458f442f4150f4100f475f4150f21f1e4150
f4150f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f
40f48f417f48f4100f412a5f445f45f45f45f45f410f0c01010100010202020200020001
010100030001000400000a0100020082280002008831000204866422a302008369000204
866422a30200836d00020082290000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000105000005
0000000d0000004d45544146494c4550494354002a070000ccfdffff2403000008002a07
340200000100090000038e01000002008000000000000500000002010100000005000000
0102ffffff00050000002e0119000000050000000b0200000000050000000c0200028006
1300000026060f001c00ffffffff00004d0010000000c0ffffffc6ffffff40060000c601
00000b00000026060f000c004d6174685479706500005000050000000902000000020500
00001402600134001c000000fb0280fe0000000000009001000000000002001054696d65
73204e657720526f6d616e0015abc7771eabc777c0a9ca7700003000040000002d010000
0c000000320a00000000030000002831290060001c0500030500000014026001a4021c00
0000fb0280fe0000000000009001010000000002001054696d6573204e657720526f6d61
6e0015abc7771eabc777c0a9ca7700003000040000002d01010004000000f00100000a00
0000320a0000000002000000696df2010003050000001402600184011c000000fb0280fe
0000000000009001000000010002001053796d626f6c0077400000007a0b0a5715abc777
1eabc777c0a9ca7700003000040000002d01000004000000f00101000a000000320a0000
000002000000a3a3e60100038000000026060f00f5004d617468547970655555e9000501
00050144534d543500001357696e416c6c4261736963436f646550616765730011055469
6d6573204e657720526f6d616e00110353796d626f6c001105436f7572696572204e6577
0011044d5420457874726100120008212f458f442f4150f4100f475f4150f21f1e4150f4
150f4100f445f425f48f425f4100f4100f435f4100f48f45f42a5f48f48f4100f4100f40
f48f417f48f4100f412a5f445f45f45f45f45f410f0c0101010001020202020002000101
0100030001000400000a0100020082280002008831000204866422a30200836900020486
6422a30200836d0002008229000000000b00000026060f000c00ffffffff010000000000
00001c000000fb021000070000000000bc02000000000102022253797374656d00000000
0a0021008a010000000001000000b0e61200aaafc777040000002d01010004000000f001
0000030000000000}{\result \fs24
{\pict\picw1245\pich382\picwgoal1245\pichgoal382\wmetafile8
010009000003ca0000000200140000000000030000001e000400000002010100050000000b020c000c00050000000c02530ec72e04000000070103000700000016045f0ed32e0c000c00040000000601010004000000020102000400000002010100040000002e011900050000001402e509820114000000fb0244f55b1400
0000009001000000000402001054696d6573204e657720526f6d616e00040000002d01000005000000090200000002080000002105030028312900e5098201050000001402e5090d1314000000fb0244f5400b000000009001010000000402001054696d6573204e657720526f6d616e00040000002d01010004000000f001
00000700000021050200696de5090d13050000001402e509f40a10000000fb0244f5f10e000000009001000000010402001053796d626f6c0000040000002d01000004000000f00101000700000021050200a3a3e509f40a10000000fb021c000000000000000000000000010000000053797374656d0000040000002d0101
0004000000f0010000040000002701ffff030000000000}}}\pard \fs24
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\field{\*\fldinst ADVANCE \\u 6}{\fldrslt }}{\plain \fs24 indexes the region from which we are currently sampling, \softline
and }{\plain \fs24 \i m}{\plain \fs24  represents the number of regions (or number of data patterns) found so far.\par
}{\plain \fs24 \par
}{\plain \fs24 The search process terminates if the following two conditions are met. First, a certain preset size \softline
of MCMC samples is obtained for each of the discovered regions. To compensate for the fact that \softline
regions discovered early in the search process are likely to be sampled more than regions \softline
discovered later, the algorithm concentrates more on the newly discovered regions in such a way \softline
that the total number of trials in the search history will eventually be the same for all discovered \softline
regions. Second, if a new pattern is not discovered after a set number of trials (or time), the \softline
algorithm terminates.\par
}{\plain \fs24 \par
}{\plain \fs24 The PSP algorithm also has the desirable property of focusing on each region in equal proportion, \softline
irrespective of its size. An equal number of search trials is performed in each region. As a \softline
consequence, closer attention is paid to the small regions. This means that the resulting sampling \softline
distribution over the whole parameter space is essentially a mixture distribution that gives higher \softline
density to points known to lie near many regions.\par
}{\plain \fs24 \par
}{\plain \fs24 \par
}\page 
\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \b Appendix B\par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs24 The weak order that defines a data pattern in the ALCOVE example can be decomposed into a \softline
set of equivalence relations, and a strong order on the equivalence classes. The strong order part \softline
is easy. We simply rank them in terms of mean learning rate. The equivalence relations are more \softline
difficult to derive, requiring that we partition the six curves using a suitable clustering procedure. \par
}{\plain \fs24 \par
}{\plain \fs24 The clustering procedure we employed was a minor variant on the clustering technique \softline
introduced by Kontkanen, Myllym{\f2\u228\'e4}ki, Buntine, Rissanen, and Tirri (in press). The essence of the \softline
technique is to view a clustering solution as a probabilistic model for the data. In the current \softline
application, the likelihood function for the data takes the form of a mixture of binomials, with a \softline
single multivariate binomial for each cluster. The clustering procedure now reduces to a \softline
statistical inference problem, which is solved by choosing the set of clusters that optimizes a \softline
Minimum Description Length statistic. The six learning curves reported by Nosofsky et al. \softline
(1994) are averaged across 40 subjects over the first 16 blocks, consisting of 16 stimulus \softline
presentations each. Each data point is thus pooled across 40 x 16 = 640 trials. Using this \softline
technique it is possible to infer that I<II<(III, IV, V)<VI is indeed the natural structure for these \softline
data. \par
}{\plain \fs24 \par
}{\plain \fs24 Lastly, we need to be able to associate a set of }{\plain \fs24 \i predicted}{\plain \fs24  learning curves with a data pattern, \softline
which is not the same thing as associating a set of }{\plain \fs24 \i observed}{\plain \fs24  learning curves with a data pattern. \softline
Nevertheless, it is not difficult to do. A set of response probabilities is first discretized to the \softline
same resolution as the empirical data. This is straightforward, by finding the expected values for \softline
the data, given by }{\plain \fs24 \i np}{\plain \fs24 , where }{\plain \fs24 \i n}{\plain \fs24  is the sample size and }{\plain \fs24 \i p}{\plain \fs24  is the average response probability \softline
predicted for some category type across any given block of trials, and then rounding to the \softline
nearest integer. While the rounding error is a nuisance, it is negligible for }{\plain \fs24 \i n}{\plain \fs24 =640. The discretized \softline
curves are then mapped onto a qualitative data pattern by using the same clustering technique \softline
used to classify the empirical data.}{\plain \fs24 \par
}{\plain \fs24 \par
}\page 
\pard \fs24\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs24 \b Appendix C: }{\plain \fs24 \b Parameters used for each model}{\plain \fs24 \par
}{\plain \fs24 \par
}\trowd \trql\trleft1440
\clbrdrt\brdrs\brdrw16\brdrcf2\clvertalc\cellx4680
\clbrdrt\brdrs\brdrw16\brdrcf2\clvertalc\cellx5700
\clbrdrt\brdrs\brdrw16\brdrcf2\clvertalc\cellx6720
\clbrdrt\brdrs\brdrw16\brdrcf2\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Parameter}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 TRACE}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 Merge}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 Range}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clbrdrt\brdrs\brdrw16\brdrcf2\clvertalc\cellx4680
\clbrdrt\brdrs\brdrw16\brdrcf2\clvertalc\cellx5700
\clbrdrt\brdrs\brdrw16\brdrcf2\clvertalc\cellx6720
\clbrdrt\brdrs\brdrw16\brdrcf2\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Phoneme excitation}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Phoneme to word excitation}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Phoneme to word inhibition}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i -}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Phoneme to target excitation}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i -}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Phoneme decay}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Wored to target excitation}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i -}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Word to phoneme excitation}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i -}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Word to word inhibition}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Word decay}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Target to target inhibition}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i -}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Target decay}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i -}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Target momentum}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i -}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\cellx4680
\clvertalc\cellx5700
\clvertalc\cellx6720
\clvertalc\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Phoneme to phoneme inhibition}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i -}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 (0,1)}
\cell \pard \intbl \row
\trowd \trql\trleft1440
\clvertalc\clbrdrb\brdrs\brdrw16\brdrcf2\cellx4680
\clvertalc\clbrdrb\brdrs\brdrw16\brdrcf2\cellx5700
\clvertalc\clbrdrb\brdrs\brdrw16\brdrcf2\cellx6720
\clvertalc\clbrdrb\brdrs\brdrw16\brdrcf2\cellx7740
\qc\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
\pard \fs24\intbl \ql\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320 
{\plain \fs24 Cycles per input slice}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs24\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 \i V}
\cell \pard \intbl \qc \pard \fs20\intbl \qc\fi0\li0\ri0\sb12\sa6\sl240\slmult1\tx0\tx720 
{\plain \fs24 Fixed}
\cell \pard \intbl \row
\pard \pard \fs20\qj\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs20 \f4\fs20\lang1042 \par
}\pard \fs20\qj\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920 
{\plain \fs20 \f4\fs20\lang1042 Note: word to word inhibition does not apply to models in Frauenfelder design. \softline
}{\plain \fs20 \f4\fs20\lang1042 Cycles per input slice were fixed to 15 for models in subphonemic mismatch \softline
design,}{\plain \fs20 \f4\fs20\lang1042  and 3 for models in Frauenfelder design.\par
}\pard \fs20\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
{\plain \fs20 \f5\fs20\lang1042 \par
}\pard \fs24\tx0\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920
}
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Visio-model.vsd)
%%Version: 1 4
%%Creator: (PScript5.dll Version 5.2.2)
%%CreationDate: (D:20060609012907Z)
%%For: (Dan)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 25 487 500 732
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
25 487 moveto 500 487 lineto 500 732 lineto 25 732 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.
%%Version: 1.13 0
systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelse
exch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25
add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exch
def/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun known
not ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont known
def/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500
string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{
pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevel
known{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFont
findresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exch
length sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFont
findresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+
{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vm
exch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vm
setglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$
type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data
/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{
Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcode
exch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod put
stringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 3
1 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{
$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvm
setglobal}if end}def/:{string currentfile exch readstring pop}executeonly def
end ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09
/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C
/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F
/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42
/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55
/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68
/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B
/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E
/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1
/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4
/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7
/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA
/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED
/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.001
0 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx exch
errordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get
(Error: )print dup(                    )cvs print errordict exch get exec stop
}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8
bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility
/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dup
string/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def
2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 index
add 2 index length le{2 index getinterval dst_string dst_index 2 index
putinterval length dst_index add/dst_index exch def exit}{1 index length 1
index sub dup 4 1 roll getinterval dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2
index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}loop
pop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{
/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename
/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomark
currentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresource
begin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecode
filter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}
ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def
/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal
/Generic/Category findresource dup length dict copy dup/InstanceType/dicttype
put/CIDFont exch/Category defineresource pop setglobal}ifelse
ct_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)
def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def
/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1
begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMap
defineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def
/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2
copy known{get dup dup maxlength exch length eq{dup length 10 add dict copy
ct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop
/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1
index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop
/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource
/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copy
known{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop
/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus
/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init
{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()
/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup
(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring
}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelse
load exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZE
le{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put
}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1
exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2
index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch
1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2
index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec pop
dup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop pop
false exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArray
get 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc
1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop pop
pop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 0
1 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index
2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin
/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{
ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin
/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{
currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end
/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSET
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{
exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exch
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 roll
GlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}
for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontName
currentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartData
ct_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSet
ct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop
/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInit
ct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSet
defineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def
/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSet
defineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index begin
CIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCode
exch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop
0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}
ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}
ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval
/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid
0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 roll
true charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}
def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidth
moveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aload
pop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}
ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{
currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dup
maxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}
{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def
/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1
dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdict
end/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup
/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring put
rootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfont
ct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{
currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidth
setlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDict
ct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dup
ct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}
ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private
3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869
internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Private
get mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse get
exec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def
/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def
/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def
/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding
ct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11
dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load def
ct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def
/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string def
currentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dup
not{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WMode
exch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrix
matrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}if
def/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{
2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if array
def BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont
/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProc
known{CIDFont/CDevProc get/CDevProc exch def}if currentdict end
BaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVector
exch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 mul
def FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}
for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefont
setfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths get
begin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2
index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astore
def}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def
/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop pop
exch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName
3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}
bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMap
ct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind
def currentdict readonly pop end end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 5.0 14
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
pathbbox
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
background length 0 gt { background aload pop setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
background length 0 gt { background aload pop setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
ext0 {
0 getrampcolor
r1 r2 eq c1x c2x eq and c1y c2y eq and
{
c1x c1y r1 0 360 arc fill
}
{
r1 r2 lt
{
/backsteps r1 rInc div floor def
/cx c1x xInc backsteps mul sub def
/cy c1y yInc backsteps mul sub def
/radius r1 rInc backsteps mul sub def
newpath
{
cx cy radius 0 360 arc
fill
radius r1 ge { exit} if
/radius radius rInc add def
/cx cx xInc add def
/cy cy yInc add def
} loop
}
{
/cx c1x def
/cy c1y def
/radius r1 def
newpath
{
cx cy radius 360 0 arcn
/cx cx xInc sub def
/cy cy yInc sub def
/radius radius rInc sub def
cx cy radius 0 360 arc
areaOfConcern ineofill not { exit } if
eofill
} loop
} ifelse
} ifelse
} if
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
r2 r1 le
{
r2 r1 eq c1x c2x eq and c1y c2y eq and
{
c1x c1y r1 0 360 arc
areaOfConcern uappend
eofill
}
{
{
cx cy radius 0 360 arc
areaOfConcern infill not { exit } if
fill
/radius radius rInc add def
/cx cx xInc add def
/cy cy yInc add def
} loop
} ifelse
}
{
{
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
areaOfConcern ineofill not { exit } if
eofill
} loop
} ifelse
} if
grestore
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[userdict /pdf_svglb currentglobal put true setglobal
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end

userdict /pdf_svglb get setglobal
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
25 487 475 244 rectclip
/N15 [/CIEBasedABC  9 dict 
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop

%%BeginResource: font LNOKEL+Arial,Bold
11 dict begin
/FontName /LNOKEL+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1674 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/LNOKEL+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
pop
%%EndResource
[/N34/LNOKEL+Arial,Bold 1 TZ
%%BeginResource: font LNOKDP+Arial
11 dict begin
/FontName /LNOKDP+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1674 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666d66d67924090fad2e
914020d503aadf9240d9b1c6a63953b30ccff5415597f5a6c26fdee68dec
bc331692c1b3543bfce7c82b9d704f4fab4f> ND 
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0b35ceb7dd46fb51adbfd88390
4d8bf636baa28a31c262d1a3078da5849c1c2b98c958c72994f2c3f78ea4
d099458941ceee627e3f06f9f9a16a1d0c> ND 
/B 
<10bf317026ba62063ac1fc9b1b7e78ffd02405a6073c267edcf7d4772d8b
d58886357b255f6a34ffdb28ea7dd3bcde9e8d86152df16bbf95464b3da5
81a80241ab3a15cb834fac879964bca12ae45a2346542b45e7f82e769dc6
0e9db083a82e08534c9f6f82aa9d811f6505bf0b1bb832cbb587ac8320f0
ae1ae42aea897a566c4e8001af359257dc731487787c0d93ef9b2f1ed840
41901425e5e82bd0ae3793e0dd4c50ff12905ccd193e1ae08c7b651a3ee6
9ac2a8d60e0001b1e2cb724d65cbbbc80d6c9cf4edb8b286a76ac8c6d7e6
c234df3f063f1d91> ND 
/D 
<10bf31702a859cc72343fc5a00cbe95321e18bb8a769a7bb762c302002c9
2b982836fa4260fe2a0c8ce27d8958937313533c8e6b2532aa8f3c2ccda0
580c74d4a11a4bc549192867065c4c563d8e65b752154cdb3b974ad93d22
39c345160f109954785d974e06de814d5117d5cceba690e455cf1260fe1e
56dd78848498e3603eee9eb4dfbe5866301d46b163af11b944ec34affd> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0466fa484e27564
2ef62da05fc0e561425aa7c0cf759f2df2fed9f5cab4e563d9d485ca6e49
6a23023cc7d5336a38ed163f6d25eac0416c891913363ad8aab5312feed7
de0b0bbcc0db8b66958d96174480f5040af2cfb1590a9410022fc6398cb1
d4435f6325a11aad4c77347983eb4748b4ada02263a3> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e3232b3823cbdb2
63dcf8e5b5846268df4eba2210bb667f400c46f76ed43d4b268aed98cf98
689dff659a93d69b1917cc1e5f49aadef7d4b3b6109675927aeb98089c> ND 
/h 
<10bf31703f932f5ecb68c849e33d1fed17c766a03dcb89fd4259247501b2
92adfc2297be69c7091e34ced000096d0ca29850717d0ee8abe567011317
96a4072dab7df40090735d5712990fb13b0847093cc929cc1cd64c87dd80
565b94c081eb> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/LNOKDP+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 66 /B put
dup 68 /D put
dup 73 /I put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 160 /space put
pop
%%EndResource
[/N30/LNOKDP+Arial 1 TZ
%%BeginResource: font LNOKDD+TimesNewRoman,Bold
11 dict begin
/FontName /LNOKDD+TimesNewRoman,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1674 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/F 
<10bf31705374f7ae1784e643b579ae16530511aa244cfaa7e3c92fa872e6
d2ada9ac7ce930632579722e70942c1d53be9aa78c59cf9b81b797d63901
796328c17724ac54e396942b4d047f04d62ba71b6f94e5b53386cfbe3e64
a23742961201c2326d7e543e0ed9a23e2f7be167c065402bbfc6cd642ff2
93e271e022de3b5deb038f775ad35b03668ad8ab682837a0f1ddc52af4dc
ac449eeb306b108990fb276b337675d71700a63a07b344ac2adc42d092> ND 
/w 
<10bf3170612fa8ae28795d29fec6efa9d16d893b9641e57ac4552ccf243c
a125ce88784d4da3c1bf938b1e2bf4fad95f01b589dd470663253d01cccc
10da8c5c9f8b224917e05224805bfaae9dc0d95631be9743895f8f02b1f7
8caf0dec6da601e3b8c071e476045a8159c8dc7c778ab64e2ff35fa40d44
81581d6dc0b876022106f0743c3663f2ade937d664b8b55dd5ccbe11c2ee
7e68afd63f216fd01d5af6632767de7a3a6e7f7d73affdc1bd4d7f13ce6f
e22652> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/LNOKDD+TimesNewRoman,Bold findfont /Encoding get
dup 0 /.notdef put
dup 70 /F put
dup 119 /w put
pop
%%EndResource
[/N22/LNOKDD+TimesNewRoman,Bold 1 TZ
%%BeginResource: font LNOKCH+TimesNewRoman,Italic
11 dict begin
/FontName /LNOKCH+TimesNewRoman,Italic def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 940 dict dup begin
/.notdef 
<10bf317005b8302fd45b07fb1549d56700cd874f9785acaaa30edf166f7d
7fe0592f51d07c5aaaff66bb85fa> ND 
/parenleft 
<10bf31703d39c9b38be6d7685d6665deccf44dec34893cf9adbeb2c9fd84
600883566744d02010c770dd2fff45e6eefb18d899bdb4618e0cb3f6cc66
92cb6e940dd9e40911249888230e594c> ND 
/parenright 
<10bf317009e1b57cd3bc29c751d8a7edbd8c91db651e026f4e1b41896bd6
7a65235b37146cef15a94cac54e000e20c655859f14948e0771a1ec3b8ef
28613366c2a7693678b7518f2ae81a6ce08017> ND 
/hyphen 
<10bf3170573182d8da0ab6c17e80ea7ae30e211c543c9127cdab> ND 
/slash 
<10bf31709b6d6255a9d2b0d409a8885921f18f075c076af78b6b5b6b22> ND 
/one 
<10bf31703a9bd692ccb54a3320fcd57838ffc18c28738c3cff6df75cb0b6
941ff65298cf7246e8e2c6d31d40a68f434892a0fd9a8e2aa2a4b3b5ec3c
95ca854a8570ce87c7d96a0e563c0d1acc083137f6cf92eb333a3b9d81e1
b46800d2b26e62fe266e8fa6f31d7055112c9ab964fb9e0d06b41f416120
> ND 
/two 
<10bf317069b1fd7149af4ad1ce0782ea062b0ef2bee03800737707cfa55d
c5b9f47cc0d99055bce09f65a1ee1003e1895b6884a7bb3443402e0079dc
90bd5bc6940910d95d4afe07f90ccdb1477bfc25fc97c07ce35f57a4fc4d
b4ff60ed43d43d56c19f4f1e2088b887ec69835bd6faf6655978e7f8109b
fdbba9b67e9be850b8a5f55d7e56> ND 
/n 
<10bf31706c4c5babe2189495ddde2b9373264a7a928dce69ea574f750bc9
3936dca6784a06b0b80e689a2229e6ef44eee9152971cbd9df02a5391a70
99881b20618c2565b340cb3d7ed02aad7a971759a5e3ffcfa7c6cb458108
ec8cbf3d1978bd60113d37f1e46a87c5ae5bdc0ce7a3651d25446e649841
4bfc4c620a4b68ffbb46b586db9fbe809299328f092a75e76eb2de927e67
28923e48dadc1bf28eb67e5ad34159a4c611c536ce98a28c9808aa8e0b2d
3bc45a0f9207ba54a0dc05041f1c7e0c3ce92199983bfd0075d4c92fcb95
81109866bac621390cb4b52179227dda54c600d8> ND 
/s 
<10bf31707016ab84b2076cdfe71a8fe086d06d63166a068d7d4bf8fa4473
f664bff9df9b513bcf8e514732d30fc0490298d291b1bfbc8e585249b1c6
41f999b0ca54fc833e679f599e6e4816a8bfb24536fcf5f934e2e1b1a7a5
aa5081e9adbbda814a7e1ba59ee8c9b050fd2fcfe7d54f6b446475fd516a
e3d6133fe657a00a9c618cafd70f0f0b1434f03c7a9ede74164e9ebb884d
881281b507fa0d2f563456070ed63f9a3fdc9d19bcd786823048c8b4bc22
e93edbbc5c4d68b7eaa72680c7f6773e8e6804e14e6f29f51ab09aeacbae
64be5962e5b1f76ecbd8> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/LNOKCH+TimesNewRoman,Italic findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 110 /n put
dup 115 /s put
dup 173 /hyphen put
pop
%%EndResource
[/N18/LNOKCH+TimesNewRoman,Italic 1 TZ
 Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%!PS-Adobe-3.0 Resource-CIDFont
%%DocumentNeededResources: procset CIDInit
%%IncludeResource: procset CIDInit
%%BeginResource: CIDFont LNOKBL+SymbolMT
%%Title: (LNOKBL+SymbolMT Adobe Identity 0)
%%Version: 1
/CIDInit /ProcSet findresource begin
20 dict begin
/CIDFontName /LNOKBL+SymbolMT def
/CIDFontVersion 1 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
  /Registry (Adobe) def
  /Ordering (Identity) def
  /Supplement 0 def
end def
/CIDMapOffset 0 def
/FDBytes 0 def
/GDBytes 3 def
/FontBBox [0 -220 1113 1005] def
/FontInfo 2 dict dup begin
/FSType 4 def
/OrigFontType /TrueType def
end readonly def
/CIDCount 65535 def
/FDArray 1 array
dup 0
  %ADOBeginFontDict
  10 dict begin
  /FontType 1 def
  /PaintType 0 def
  /FontName /LNOKBL+SymbolMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
  %ADOBeginPrivateDict
  /Private 8 dict dup begin
  /BlueValues [-15 0 600 650] def
  /MinFeature {16 16} def
  /LanguageGroup 1 def
  /password 5839 def
  /lenIV 4 def
  end def
  %ADOEndPrivateDict
currentdict end
%ADOEndFontDict
put def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin GlyphDirectory +
0 <10bf31704faacd68130743d1032b19039b05d30ed4559c5ecf2da4ace2ab
53168b5c58eb3d8c199cf05ae7> |
!
end
%%BeginData: 21 Binary Bytes
(Binary) 0 StartData
%%EndData
%%EndResource
 ct_restoreCIDInit /LNOKBL+SymbolMT-Identity-H /Identity-H 0 [/LNOKBL+SymbolMT] ct_ComposeFont pop end end 
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N10 (LNOKBL+SymbolMT-Identity-H)
/N10 (LNOKBL+SymbolMT-Identity-H) /Identity-H [ (LNOKBL+SymbolMT) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
%%BeginResource: font LNOKBA+PalatinoLinotype-Italic
11 dict begin
/FontName /LNOKBA+PalatinoLinotype-Italic def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1328 dict dup begin
/.notdef 
<10bf31707a0762f2a0f232be61cacb0cb0e4274dcf72c7794a91d99e960d
12f10275d642a6895bdd348d3ac11add0c86ab2a9890106ce8611f02f0c3
74a0bb4be47068aba7f237cfcf7e642036ee8e12cf18b96b9e2c00ac1b2f
c76a70ca5a3a072cc34a0d96dc0be6031b26bd342fc6c7b7633202772f39
992f96a847afb44da2be7eadd8a191ce6daa9dcf5c0f4326f69608a2fd74
c7673b778b419f6c81a926e1f243d19b93b854250df8296079957c5e8202
4183002edef83d68af257e3c995ddb0671d8b20964653e58dfda266d9f26
e8e8fc0a134d53eb76abd288aaba3d162cea8b634cf96bfa5d479d3b1182
e86d25b6d056366d252ffe777e89b58edb2c95a0887655ca219bb65b7520
bfc732c5f8a54c5aaf56ec11b5d46796fcdaabb7131f863ccce2f79e46fd
d5eb918986d5bcc0657c7bf861bde9b49664eddc40b680d2fe89bcc4a5f4
7935da719ea6eb3b550e9635c6b9af229ddade3cbe2efbe4> ND 
/space 
<10bf317079c757bf91> ND 
/one 
<10bf3170396d24118542f7b65a41ad027953c37144b5823427129d51cff8
9706517c3bea5dccc142bdbb39e7660a020c885f4ee77a8825fe76c6f0ba
36334b574dd2fb679feba00bb4d9f8ce234662dd4c354f5b0fb971beddaa
4f804a5ef7a8f2d3f2e5ad5014a84689616160c7f08b815d1ae94db9b2ed
8c4fedcbbc287b2ea092797ebb55245d47ff80ba4b108aee19b8cd0b78f0
84648a> ND 
/two 
<10bf31707fff174759264ad45c96b9e00d22a151995a3c4c837607a2234a
66f63a1b7873913fb2fae669b5c7bc0d967c2c54455cb2fa90e8e14f3398
0a5fdcd759dc12e5d5bf173362c2494a6803e9e4f1cac6cc4a06a2826157
35ffecaf982c053b7c71d05226b4e6903f9b4802ce2935524bc3b50c8d3e
ee145347acbc4fe00e071331fa6bd328da2ba04047d2b3c102d58debe4a2
77cb30e193471abec1d6352d95f79aa6a622> ND 
/three 
<10bf31707c638dafe66b45eaaf8bd80a10781d7f46c91dbd61bba636a9fb
16f87b3484992f15e29fc5a64e99c0712400c8609f89efdfe99258b5f2c7
514998a5d7699a87e178b074c9ec0dff73d48fc8a76dc81e8eaa6194f271
3cf08d5df44243453c04ca39302d2d706625d581bfde091fff47fbdd92d1
ab1c9a72991ccf19cb3ba613f702de2977f3b16efe1d4df826c1c28beb11
1f551aafa8c47f7590bd5c960c7990be751ae7eec1273f2394e806e51f73
b3afac6e3c4aa877589dab8a1eedc55dcca1a975789b63fc9df790f6172a
92f793ca325bd3ce829f78e80ba44177f4972a90e9ecc1194411bcf17db3
88ec4d977e4827d5fe05> ND 
/four 
<10bf317079c82f067960cdccd2b47010a7ffdce0af6906c1f9b7d5d720f6
b9f1964dc32b27d8212b0925507319665b240e82f9ab112fc05d590a39c0
88789c39ba98ab549ea2363d31b4fcb7d5e168e6358c10f25712e51f8f45
040eceab599a845affdb54c8eb6ca006741ab8697af4efb3e9177dfe6475
a157d63df3facaaff2b8e0fe7a7e2cd4682582a6f23c68296cb774cc3f79
2545b3b0746fb8b192b9989d366337864a3135d9b77d7b0136c464145846
f3e5cabf2fc502f00665b9194866117ff06696ae58083d3df7616d9e4470
1df8f1215f0949b673e3fcf19b> ND 
/equal 
<10bf317068834bf47659152fa0cb66152540baaf711706a8dade09a0dca1
94d273b508a2b3fdaa> ND 
/f 
<10bf317009c7bc3ee376ba7a2bb8def0ababac7f1ab4119798d9cd07b243
31c103f88c5ac9c35faaf2ce484d168fe41bf603c64381587f46cfae1633
963a480035d7579b155b0a4c41bda908014b593b5d97b93c27041fff1b70
61669dd9c502b523c9898d4c11cdfa6725d8151128acd743c2d3f5ceab29
3ea7a54ebba43d37a668a4755c0c2d9182fea7be3cd57981ecae2e1da5b2
85d276e987d5f9efaabdfe106f7fed4ce12b98e3705ab9b59548f81a987a
f64ddce9b5af9c1454423e435a916240415bbecf1930e81188786796d898
ed71fd078738b5bd3a0bd38752e27af247d93b7de587ce257db03213ac37
9e8797a0dc7ea490837842fafb7ee84d8fb914797aa0547d5c> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/LNOKBA+PalatinoLinotype-Italic findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 61 /equal put
dup 102 /f put
dup 160 /space put
pop
%%EndResource
[/N11/LNOKBA+PalatinoLinotype-Italic 1 TZ
1 J
1 j
0.240005 w
10 M
[] 0 d
false setSA
n
274.02 578.42 37.68 37.74 re
q
[/CIEBasedABC  9 dict 
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/E3 exch /ColorSpace defineRes

cs 0.753006 0.753006 0.753006 sc
eofill
Q
/E3 /ColorSpace findRes cs 0 0 0 sc
S
280.2 593.66 m
/N11 12 Tf
(f) show
283.56 589.7 m
/N11 7.98 Tf
(21) show
293.58 593.66 m
/N11 12 Tf
(=1) show
n
119.52 590 m
119.52 558.5 l
S
n
122.28 559.1 m
119.52 556.34 l
116.76 559.1 l
122.28 559.1 l
eofill
n
119.7 702.86 m
119.7 692.24 l
119.52 692.24 l
119.52 677.36 l
S
n
122.28 677.9 m
119.52 675.14 l
116.76 677.9 l
122.28 677.9 l
eofill
n
122.1 702.86 m
123.48 702.98 l
124.86 703.34 l
126.18 703.88 l
127.38 704.6 l
128.46 705.5 l
129.36 706.58 l
130.08 707.78 l
130.62 709.1 l
130.98 710.48 l
131.1 711.86 l
131.1 716.66 l
130.98 718.04 l
130.62 719.42 l
130.08 720.74 l
129.36 721.94 l
128.46 723.02 l
127.38 723.92 l
126.18 724.7 l
124.86 725.24 l
123.48 725.54 l
122.1 725.66 l
117.3 725.66 l
115.92 725.54 l
114.54 725.24 l
113.22 724.7 l
112.02 723.92 l
110.94 723.02 l
110.04 721.94 l
109.26 720.74 l
108.72 719.42 l
108.42 718.04 l
108.3 716.66 l
108.3 711.86 l
108.42 710.48 l
108.72 709.1 l
109.26 707.78 l
110.04 706.58 l
110.94 705.5 l
112.02 704.6 l
113.22 703.88 l
114.54 703.34 l
115.92 702.98 l
117.3 702.86 l
122.1 702.86 l
S
116.58 711.26 m
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
/LNOKBL+SymbolMT 1
GetGlyphDirectory
68 <10bf317046e98b07a55059c296002221a6bcec28633df7a787e1d7463c85
ebb8b48537717f23eb91164c991c9e37d75745a7d248b244db4c115534d3
bea9f059af807d0184f76d84408472e11a0332a8f562d95d542206bbf82e
2b72c35ffe861c8367794dc74f39d312092139882c80ba7bbc5162b5182b
b39c133498bd7b2ebe92a9ec6b04c5fd8bd5538e778742f6ab0c09d03c58
ccb5f9da31294ff46d754db787e82e56a4652a394025fdad7d27a0bca774
f4950d6054a8c2fc78f338f870fe4b9928ebd9aa44dd66f8d53608295298
b5a6d6f6f999f0ef1e6459> |
!
end end end
/N10 [10.02 0 3.427 10.02 0 0] Tf
(\000D) show
n
107.94 544.76 m
108.06 546.38 l
108.42 548 l
108.96 549.56 l
109.74 551 l
110.76 552.32 l
111.9 553.52 l
113.22 554.48 l
114.72 555.26 l
116.22 555.86 l
117.84 556.22 l
119.52 556.34 l
121.14 556.22 l
122.76 555.86 l
124.32 555.26 l
125.76 554.48 l
127.08 553.52 l
128.28 552.32 l
129.24 551 l
130.02 549.56 l
130.62 548 l
130.98 546.38 l
131.1 544.76 l
130.98 543.08 l
130.62 541.46 l
130.02 539.96 l
129.24 538.46 l
128.28 537.14 l
127.08 536 l
125.76 534.98 l
124.32 534.2 l
122.76 533.66 l
121.14 533.3 l
119.52 533.18 l
117.84 533.3 l
116.22 533.66 l
114.72 534.2 l
113.22 534.98 l
111.9 536 l
110.76 537.14 l
109.74 538.46 l
108.96 539.96 l
108.42 541.46 l
108.06 543.08 l
107.94 544.76 l
h
q
0.753006 0.753006 0.753006 sc
eofill
Q
S
117.54 541.76 m
/N18 10.02 Tf
(s) show
n
91.44 514.7 55.5 111.84 re
S
114.54 517.82 m
(n\(n-1\)/2) show
n
107.94 601.58 m
108.06 603.2 l
108.42 604.82 l
108.96 606.38 l
109.74 607.82 l
110.76 609.14 l
111.9 610.34 l
113.22 611.3 l
114.72 612.08 l
116.22 612.68 l
117.84 613.04 l
119.52 613.16 l
121.14 613.04 l
122.76 612.68 l
124.32 612.08 l
125.76 611.3 l
127.08 610.34 l
128.28 609.14 l
129.24 607.82 l
130.02 606.38 l
130.62 604.82 l
130.98 603.2 l
131.1 601.58 l
130.98 599.9 l
130.62 598.28 l
130.02 596.78 l
129.24 595.28 l
128.28 593.96 l
127.08 592.82 l
125.76 591.8 l
124.32 591.02 l
122.76 590.48 l
121.14 590.12 l
119.52 590 l
117.84 590.12 l
116.22 590.48 l
114.72 591.02 l
113.22 591.8 l
111.9 592.82 l
110.76 593.96 l
109.74 595.28 l
108.96 596.78 l
108.42 598.28 l
108.06 599.9 l
107.94 601.58 l
S
116.64 598.58 m
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
/LNOKBL+SymbolMT 1
GetGlyphDirectory
80 <10bf31703a9b8a5acb6cc34e29a78b3543a02f44016a183fa96ee22a4672
260280f37155abc7c5dd97ad1eed691514dd9f216a99d6f5b4ee5ea0e3df
6c86a85cb1432d35d8f83e1dd0e44a84390fd2f3a1bc7a09f154c36bf455
f4e857f45dd2fe43a0a4ae4c94bb93a23f7c67d5a71adfb73c796b01d659
91243f757228ab435b3e5d2cc3be58b1b0f54c63f9a199a520853094fb2c
45d796cbff56c5a93e203b5825ac6ec7293ac1040f3ebb56f6bab9aba62d
aea3cca824d247bf924306d142b5e90d84b404bcf2de9e6844d2f6527427
e9e9b39dc18696fc835d944e> |
!
end end end
/N10 [10.02 0 3.427 10.02 0 0] Tf
(\000P) show
n
171 544.76 m
133.26 544.76 l
S
n
133.86 542 m
131.1 544.76 l
133.86 547.52 l
133.86 542 l
eofill
n
107.94 663.56 m
108.06 665.24 l
108.42 666.86 l
108.96 668.36 l
109.74 669.86 l
110.76 671.18 l
111.9 672.32 l
113.22 673.34 l
114.72 674.12 l
116.22 674.66 l
117.84 675.02 l
119.52 675.14 l
121.14 675.02 l
122.76 674.66 l
124.32 674.12 l
125.76 673.34 l
127.08 672.32 l
128.28 671.18 l
129.24 669.86 l
130.02 668.36 l
130.62 666.86 l
130.98 665.24 l
131.1 663.56 l
130.98 661.94 l
130.62 660.32 l
130.02 658.76 l
129.24 657.32 l
128.28 656 l
127.08 654.8 l
125.76 653.84 l
124.32 653.06 l
122.76 652.46 l
121.14 652.1 l
119.52 651.98 l
117.84 652.1 l
116.22 652.46 l
114.72 653.06 l
113.22 653.84 l
111.9 654.8 l
110.76 656 l
109.74 657.32 l
108.96 658.76 l
108.42 660.32 l
108.06 661.94 l
107.94 663.56 l
S
116.46 660.56 m
/N22 10.02 Tf
(F) show
n
55.62 662.96 m
55.74 664.58 l
56.1 666.2 l
56.7 667.76 l
57.48 669.2 l
58.44 670.52 l
59.64 671.72 l
60.96 672.68 l
62.4 673.52 l
63.96 674.06 l
65.58 674.42 l
67.2 674.54 l
68.88 674.42 l
70.44 674.06 l
72 673.52 l
73.44 672.68 l
74.76 671.72 l
75.96 670.52 l
76.92 669.2 l
77.76 667.76 l
78.3 666.2 l
78.66 664.58 l
78.78 662.96 l
78.66 661.34 l
78.3 659.72 l
77.76 658.16 l
76.92 656.72 l
75.96 655.4 l
74.76 654.2 l
73.44 653.24 l
72 652.46 l
70.44 651.86 l
68.88 651.5 l
67.2 651.38 l
65.58 651.5 l
63.96 651.86 l
62.4 652.46 l
60.96 653.24 l
59.64 654.2 l
58.44 655.4 l
57.48 656.72 l
56.7 658.16 l
56.1 659.72 l
55.74 661.34 l
55.62 662.96 l
S
63.6 659.96 m
(w) show
n
69.6 701.9 m
70.98 702.02 l
72.36 702.32 l
73.68 702.86 l
74.88 703.64 l
75.96 704.54 l
76.86 705.62 l
77.64 706.82 l
78.18 708.14 l
78.48 709.46 l
78.6 710.9 l
78.6 715.64 l
78.48 717.08 l
78.18 718.46 l
77.64 719.78 l
76.86 720.98 l
75.96 722.06 l
74.88 722.96 l
73.68 723.68 l
72.36 724.22 l
70.98 724.58 l
69.6 724.64 l
64.8 724.64 l
63.42 724.58 l
62.04 724.22 l
60.72 723.68 l
59.52 722.96 l
58.44 722.06 l
57.54 720.98 l
56.82 719.78 l
56.28 718.46 l
55.92 717.08 l
55.8 715.64 l
55.8 710.9 l
55.92 709.46 l
56.28 708.14 l
56.82 706.82 l
57.54 705.62 l
58.44 704.54 l
59.52 703.64 l
60.72 702.86 l
62.04 702.32 l
63.42 702.02 l
64.8 701.9 l
69.6 701.9 l
S
64.44 710.3 m
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
/LNOKBL+SymbolMT 1
GetGlyphDirectory
79 <10bf31705117747dbada4170e449d77601f8bd7d217a7113dfe1b796a5e0
5378f54375cdef14895af2641e4d47f031fa80cf723e9a66f3c7b8d788f5
48ad3ed92fd1104330388dd6fa8991ae3f0fd72c689628085077ea364bd4
22023ba366e97469042e1acf5789ad406ebf63d244ef5a29dcaa971addc8
67e1abf79a9b7f40a30d38f160e757bfbd18e99153c73777ac9e170b59b8
3fbcb440b0ea17e725c8b8> |
!
end end end
/N10 [10.02 0 3.427 10.02 0 0] Tf
(\000O) show
n
119.52 651.98 m
119.52 615.32 l
S
n
122.28 615.92 m
119.52 613.16 l
116.76 615.92 l
122.28 615.92 l
eofill
n
67.2 701.9 m
67.2 676.76 l
S
n
69.96 677.3 m
67.2 674.54 l
64.44 677.3 l
69.96 677.3 l
eofill
n
67.2 651.38 m
67.2 601.58 l
105.72 601.58 l
S
n
105.18 604.34 m
107.94 601.58 l
105.18 598.82 l
105.18 604.34 l
eofill
n
184.8 533.36 m
186.18 533.48 l
187.56 533.78 l
188.88 534.32 l
190.08 535.1 l
191.16 536 l
192.06 537.08 l
192.78 538.28 l
193.32 539.6 l
193.68 540.92 l
193.8 542.36 l
193.8 547.16 l
193.68 548.54 l
193.32 549.92 l
192.78 551.24 l
192.06 552.44 l
191.16 553.52 l
190.08 554.42 l
188.88 555.14 l
187.56 555.68 l
186.18 556.04 l
184.8 556.16 l
180 556.16 l
178.62 556.04 l
177.24 555.68 l
175.92 555.14 l
174.72 554.42 l
173.64 553.52 l
172.74 552.44 l
171.96 551.24 l
171.42 549.92 l
171.12 548.54 l
171 547.16 l
171 542.36 l
171.12 540.92 l
171.42 539.6 l
171.96 538.28 l
172.74 537.08 l
173.64 536 l
174.72 535.1 l
175.92 534.32 l
177.24 533.78 l
178.62 533.48 l
180 533.36 l
184.8 533.36 l
S
179.34 541.76 m
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
/LNOKBL+SymbolMT 1
GetGlyphDirectory
86 <10bf3170435d2235884e2dc572559ec7dc3c3a00c9629a182e946e59c858
25c882ef64a465d6b88acd65914eb4df2fd090d2e91cb1c2c827a16eb613
71e58f37873d8285c03cbff5d78a947622eb4c5f0975240dbb8da569b5cc
89faf27c987816428c0b5f3c1722b1589e405ce48db51df5a3861184549f
205bc5e406030289a8340e504cdff8975d2c8d6b6688ba4413f0355a> |
!
end end end
(\000V) show
n
462 704.78 m
273.48 704.78 l
273.48 659.78 l
462 659.78 l
311.22 681.2 m
311.1 683 l
310.74 684.8 l
310.2 686.48 l
309.42 688.16 l
308.4 689.66 l
307.2 691.04 l
305.88 692.24 l
304.38 693.32 l
302.82 694.16 l
301.08 694.76 l
299.34 695.18 l
297.54 695.36 l
295.74 695.3 l
293.94 695 l
292.2 694.46 l
290.52 693.74 l
288.96 692.78 l
287.58 691.64 l
286.32 690.38 l
285.24 688.94 l
284.34 687.32 l
283.68 685.64 l
283.2 683.9 l
282.96 682.1 l
282.96 680.3 l
283.2 678.5 l
283.68 676.76 l
284.34 675.08 l
285.24 673.46 l
286.32 672.02 l
287.58 670.76 l
288.96 669.62 l
290.52 668.66 l
292.2 667.94 l
293.94 667.4 l
295.74 667.1 l
297.54 667.1 l
299.34 667.22 l
301.08 667.64 l
302.82 668.3 l
304.38 669.14 l
305.88 670.16 l
307.2 671.36 l
308.4 672.74 l
309.42 674.24 l
310.2 675.92 l
310.74 677.6 l
311.1 679.4 l
311.22 681.2 l
S
293.4 677.6 m
/N11 12 Tf
(f) show
296.76 673.58 m
/N11 7.98 Tf
(1) show
n
348.9 681.2 m
348.78 683 l
348.48 684.8 l
347.88 686.48 l
347.1 688.16 l
346.08 689.66 l
344.94 691.04 l
343.56 692.24 l
342.12 693.32 l
340.5 694.16 l
338.82 694.76 l
337.02 695.18 l
335.22 695.36 l
333.42 695.3 l
331.62 695 l
329.88 694.46 l
328.26 693.74 l
326.7 692.78 l
325.26 691.64 l
324 690.38 l
322.92 688.94 l
322.02 687.32 l
321.36 685.64 l
320.88 683.9 l
320.64 682.1 l
320.64 680.3 l
320.88 678.5 l
321.36 676.76 l
322.02 675.08 l
322.92 673.46 l
324 672.02 l
325.26 670.76 l
326.7 669.62 l
328.26 668.66 l
329.88 667.94 l
331.62 667.4 l
333.42 667.1 l
335.22 667.1 l
337.02 667.22 l
338.82 667.64 l
340.5 668.3 l
342.12 669.14 l
343.56 670.16 l
344.94 671.36 l
346.08 672.74 l
347.1 674.24 l
347.88 675.92 l
348.48 677.6 l
348.78 679.4 l
348.9 681.2 l
S
331.08 677.6 m
/N11 12 Tf
(f) show
334.44 673.58 m
/N11 7.98 Tf
(2) show
n
386.64 681.2 m
386.52 683 l
386.16 684.8 l
385.56 686.48 l
384.78 688.16 l
383.82 689.66 l
382.62 691.04 l
381.3 692.24 l
379.8 693.32 l
378.18 694.16 l
376.5 694.76 l
374.76 695.18 l
372.9 695.36 l
371.1 695.3 l
369.36 695 l
367.62 694.46 l
365.94 693.74 l
364.38 692.78 l
363 691.64 l
361.74 690.38 l
360.6 688.94 l
359.76 687.32 l
359.04 685.64 l
358.62 683.9 l
358.38 682.1 l
358.38 680.3 l
358.62 678.5 l
359.04 676.76 l
359.76 675.08 l
360.6 673.46 l
361.74 672.02 l
363 670.76 l
364.38 669.62 l
365.94 668.66 l
367.62 667.94 l
369.36 667.4 l
371.1 667.1 l
372.9 667.1 l
374.76 667.22 l
376.5 667.64 l
378.18 668.3 l
379.8 669.14 l
381.3 670.16 l
382.62 671.36 l
383.82 672.74 l
384.78 674.24 l
385.56 675.92 l
386.16 677.6 l
386.52 679.4 l
386.64 681.2 l
S
368.82 677.6 m
/N11 12 Tf
(f) show
372.18 673.58 m
/N11 7.98 Tf
(3) show
n
424.32 681.2 m
424.2 683 l
423.84 684.8 l
423.3 686.48 l
422.52 688.16 l
421.5 689.66 l
420.36 691.04 l
418.98 692.24 l
417.48 693.32 l
415.92 694.16 l
414.18 694.76 l
412.44 695.18 l
410.64 695.36 l
408.84 695.3 l
407.04 695 l
405.3 694.46 l
403.62 693.74 l
402.06 692.78 l
400.68 691.64 l
399.42 690.38 l
398.34 688.94 l
397.44 687.32 l
396.78 685.64 l
396.3 683.9 l
396.06 682.1 l
396.06 680.3 l
396.3 678.5 l
396.78 676.76 l
397.44 675.08 l
398.34 673.46 l
399.42 672.02 l
400.68 670.76 l
402.06 669.62 l
403.62 668.66 l
405.3 667.94 l
407.04 667.4 l
408.84 667.1 l
410.64 667.1 l
412.44 667.22 l
414.18 667.64 l
415.92 668.3 l
417.48 669.14 l
418.98 670.16 l
420.36 671.36 l
421.5 672.74 l
422.52 674.24 l
423.3 675.92 l
423.84 677.6 l
424.2 679.4 l
424.32 681.2 l
S
406.5 677.6 m
/N11 12 Tf
(f) show
409.86 673.58 m
/N11 7.98 Tf
(4) show
277.08 708.86 m
/N30 10.02 Tf
(The Indian Buffet) show
210.42 657.14 m
(The Diners) show
n
274.02 616.16 37.68 37.38 re
q
0.753006 0.753006 0.753006 sc
eofill
Q
S
280.2 631.28 m
/N11 12 Tf
(f) show
283.56 627.26 m
/N11 7.98 Tf
(11) show
293.58 631.28 m
/N11 12 Tf
(=1) show
n
311.46 616.16 37.68 36.78 re
q
0.753006 0.753006 0.753006 sc
eofill
Q
S
317.64 630.92 m
(f) show
321 626.96 m
/N11 7.98 Tf
(12) show
331.02 630.92 m
/N11 12 Tf
(=1) show
n
305.22 672.74 m
305.22 607.4 l
302.46 610.16 m
305.22 607.4 l
307.98 610.16 l
S
n
348.9 578.42 37.68 37.74 re
q
0.753006 0.753006 0.753006 sc
eofill
Q
S
355.02 593.66 m
(f) show
358.38 589.7 m
/N11 7.98 Tf
(23) show
368.4 593.66 m
/N11 12 Tf
(=1) show
1.2 w
n
462 653.24 m
274.02 653.24 l
274.02 529.1 l
S
0.240005 w
n
254.64 635.18 m
267.84 635.18 l
265.08 632.42 m
267.84 635.18 l
265.08 637.94 l
254.94 595.22 m
268.08 595.22 l
265.32 592.46 m
268.08 595.22 l
265.32 597.98 l
254.64 557.84 m
267.84 557.84 l
265.08 555.08 m
267.84 557.84 l
265.08 560.6 l
333.84 672.74 m
333.84 642.56 l
331.08 645.32 m
333.84 642.56 l
336.6 645.32 l
296.16 672.74 m
296.16 642.56 l
293.4 645.32 m
296.16 642.56 l
298.92 645.32 l
S
n
348.72 540.98 37.74 37.74 re
q
0.753006 0.753006 0.753006 sc
eofill
Q
S
354.9 556.28 m
(f) show
358.26 552.26 m
/N11 7.98 Tf
(33) show
368.28 556.28 m
/N11 12 Tf
(=1) show
n
386.28 540.98 37.74 37.74 re
q
0.753006 0.753006 0.753006 sc
eofill
Q
S
392.46 556.28 m
(f) show
395.82 552.26 m
/N11 7.98 Tf
(34) show
405.84 556.28 m
/N11 12 Tf
(=1) show
435.54 679.16 m
/N34 10.02 Tf
(...) show
n
373.8 672.74 m
373.8 607.4 l
371.04 610.16 m
373.8 607.4 l
376.56 610.16 l
S
1.2 w
n
311.46 653.24 m
311.46 528.8 l
349.14 652.34 m
349.14 527.84 l
386.28 652.34 m
386.28 527.84 l
423.72 652.34 m
423.72 527.84 l
274.02 616.16 m
461.16 616.16 l
274.02 578.42 m
461.16 578.42 l
274.02 541.28 m
461.16 541.28 l
S
0.240005 w
n
380.04 672.26 m
380.04 566.24 l
377.28 569 m
380.04 566.24 l
382.8 569 l
411.24 672.26 m
411.24 566.24 l
408.48 569 m
411.24 566.24 l
414 569 l
S
351.72 492.44 m
/N30 10.02 Tf
(\(b\)) show
117.78 492.44 m
(\(a\)) show
q
21.84 0 0 28.56 231.18 575.3 cm
q
n
0 0 1 1 re
q
W
[/Indexed /N15 /ColorSpace findRes 255
<~!!!!"!<E6'!WrN,"9\i2"U,)7"pYA<#RC\B#mgqG$4@4L$k*OR%1NdW%M''\&.fBb
&J5Wg&ebol'GM5r'bqK"()Ic'(`4)-)&X>2)B0V7*#oq=*??1B*ZlIG+<VdM+X&$R
+sS<W,U=W],palb-7:/g-n$Jm.4H_r.P!#"/1`>(/M/S-/h\k20JG180ekF=1,C^B
1c.$H2)R9M2E*QR3&ilX3B9,]3]fDb4?P_h4Zttm5!M7r5X7S#5s[h(6:4+-6psF3
77B[87Ros=84Z9C8P)NH8kVfM9MA,S9heAX:/=Y]:f'tc;,L4h;H$Lm<)cgs<E3(#
<``@(=BJ[.=]np3>$G38>[1N>?!UcC?=.&H?smAN@:<VS@UinXA7T4^AS#IcAnPah
BP;'nBk_<sC27U#Ci!p)D/F0.DJsH3E,]c9EH-#>EcZ;CFEDVIF`hkNG'A.SG^+IY
H$O^^H@(!cI!g<iI=6QnIXcisJ:N0$JUrE)JqJ].KS5#4KnY89L51P>LkpkDM2@+I
MMmCNN/W^TNK&sYNfT6^OH>QdOcbfiP*;)nPa%DtQ'IZ$QC!r)R$a8/R@0M4R[]e9
S=H+?SXl@DStDXITV.sOTqS3TU8+KYUnjf_V5:&dVPg>iW2QYoWMuntWiN2$XK8M*
Xf\b/Y-5%4Yct@:Z*CU?ZEpmD['[3J[C*HO[^W`T\@B&Z\[f;_]">Sd]Y(nj]tM.o
^;%Ft^qdb%_84"*_Sa:/`5KU5`Poj:`lH-?aN2HEaiV]Jb0.uObfn;Uc-=PZcHjh_
d*U.edF$CjdaQ[oeC<!ue^`7%f%8O*f\"j0g"G*5g=tB:gt^]@h;-rEhV[5Ji8EPP
iSieUioB(ZjQ,C`jlPXek3(pjkih6pl07KulKdd%m-O*+mHs?0mdKW5nF5r;naZ2@
o(2JEo^qeKp%A%Pp@n=Uq"XX[q>'m`qYU0er;?KkrVc`prr<#u~>]
cs 
<<
/ImageType 1
/Width 58
/Height 76
/ImageMatrix [58 0 0 -76 0 76] 
/BitsPerComponent 8
/Decode [0 255 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J3Vsg3"u,srdD6&j?TXt'FBQsJRLlcM:DKV_';ge*$,OeI_4X$pcJ0:a?5DJJDaZp
&dnnt8-t&.@LXQP8L)Xi'QO]\DBqcHTV+[m$jD7a_'#tDr7cZiB/Af-L.<>/,tK2@
W),#d)3>(i0Xt4A;-^gb<B/KRrB.-qT8Z*5==7DdR?Hh,EC,Hp&0;do]3V]M<M%4g
c_T3,,SCFhN+p8"d6M%JKE:$$C.6T0_a,m+$re,&Fp`mh6)(Y:9!;,8LOju#3gMd*
4XU"F4I3+GIPhJK:mbLTJP)dN`;t4B1(hca"(aqPl2A9Og[pf`oAs4:%0hO,jJ#?7
5o#3o!V#c$-5@%3gjOXj=+B"LUdZHRq#qI*&>D^#'SPFYJhRS+YV$7aTrE']]*ZnL
O<)K;cp38Wi&i'Aj?Uj,"i6Rh5a>oS8i-VmRfH3UOGiK5[&7m^'S@OL81"[Pcs@Ut
j]T*5S)r;Z$aJY69aEqbnbRF/LWO!HK(2Yg%KledG!m:i8^_Sn+e"8q$&38XhEJth
W.(6=GWH*2TO8TAK47DWEudb:W\/q)\4felXkQ1BT8-=CIieimN!_!>O>&M]B49A1
&0[Dt$jFScf$I4`;>>0.BBe&CL<+<J"pJQ]eor-'0U``165_Cs.PpYK5T^3,3dho6
GU0):UM7Mf*QK#,)?tf07W=tkZftVjBA)WkQ7XS8DNJR7*ZgY<C#F0#iQtUDOTqND
=Op'd8q!:cnU++AG*:^1)?W5OV2Y]tk'<NZ-tEsEU\Ud5gm26iO.M'q&i5CH#]"W+
LI!$l2Sd]iH(O30jAq#Nn3.m,LH5*??rZCU</=qL*XDl,Han\MLLE"K9q[<8B-/MK
oQurL=>C3c61HRLi&DY3HPV2u-3^7Hk#@A6q.W/2V1<5C<h>*"pjO;t&FL,35_pm,
P/hHmOVX[!-DUZmLdW(oR:4B7LL>Fk$PCEcXfJ(L_1jNDNMn0AP6Z7sQ*'5;80J#T
J/f1/UG/.G/k82U)1b%4&.8poI?K[;#N>)ZMSR"I#(e"T2L+:&Jdd'o+j^u,o"`W7
<u5E=7X,T?L^jIdJ1t"tSVQAgc6%hHF=74TBGq^#HP]YESqJL;"+#J_E)2p7d>jch
AS?GnJ:@h3*L2D`LZ+k\Tk5EuTK!>_"=.mPe>)3COstrgTF:u2A_FjY`fVPgU;.rQ
QbrNL&@NYkS`,X7arisR"a>J6%gOh@4;\BF*^]?OJM7Z4J2e>oj.pf,Jj)@f&5WC(
*Us7eE'@Z>`#Z^2'ED5F!<?4c'23Y0&(1/6Kg8B7!%7sMJ.`#PR(aU$aEW]r3]I4t
&HIos!J"!s/]YK?L*Q&.#nT04iEuloi]M2kOnLtoCPMq`-6iNKE$!")nfItlHO_5b
5"/:!!7=UE!)QiI#CK^1c!d*%iJ\S'FC5)V#QXoZ$k%_Zc5\'>;1q1P&O8ks#f<*R
O+qI7LWZhCA#MJ>f6I'rhus+r82UiBo$uh-^(`n)6jJgV$:&,7HnmHHJ8e=&6jRc;
!&<++J/Aec)"2A&mPBlcoK@pO9m:LG<.J?d!eH`>*TPdsN0*rJO(]O:^mkpd&.oAI
>`=%q/.'&BoE%='QQ8fV]FV9u4WAcpJl25A3FEI(7!R9$ifktpi#i,PJ//8qQk4h!
+Z\Z>NKk/R!e=)W"p<N<A+"KP%aiES"'?3:d\mBOYV6.>^^psLTLT*Y=9="d&d+f2
('7;t#QZn&!>6jt9i)rK`bV&l&H$*rY]9eZ(^USdcng5tfE)%N`<T6K"G!-d$:;7/
#N2No"(:756Ehg<2"1OgO;8N7'JMjmaA<(k.nIH($4Xi`3W[;cli9mQ!EJIjK!>)"
6pO!?^mHR/_6Pga^eY#QU/V+h(_?k$pLFf)GD>$t!beM9!<I:&"u%7uT@DEm+>=3-
5r(48@$1[Y<"9-6b/Hki]+!V@Bn/GY#6O+qI*P%:Npq2r5WtM8e$''^)`']D8/r,W
.!CXpas$hI#m'#OH+/@m1P==<!lZ],#B?;FSQ3?)Ds#9ibE$YY0G"X[7!q\EjreKU
#nSdBc4?Vg/];=7%"^0JO,&D[gu.XRotl.%9FXEU82q?:g#4lP"Ra&bK;_OeI1JWT
1^=TbUNcd1?om7tYlhZAiXK!s;$I&lk_,^LTRDlDmQK:1oW;W:fKSWKLZM&@%3n4H
O.cf3">23LKC!sr60:=?0d++gG8e_F/dfGQ8dD"]#lmdE(e-+L4%&@$>S%Agne7S5
UW@WhJ]Kog<P65S'Es&LL`Jm^X;D#G-NK")&B4%p,K&k7e:8/VEst5S,G\b*0d7dZ
\A]M-df=pF+9mD$C)"QZFUp4j3<P2C!Fa[>\IA9[^hB%X/pM5iE3]s>GUj"BPZa&;
;h.2J;@MPUA<-caK1D;TNF4_;B<:eM!,r8H!d:7J_=BV*d!>oS<g6![/f+_.)8IHs
@?!"oZ;?q`&).3m$3RE.KHLg,J4NJnk--rOi-5MMC^P_#OS&T5+qt4mq[W?[lA*`;
!OZ$(mIK$r`#''eTM/,l1%IL50VSk8Zj;4BLOfGML#:P,m-FLE!lSuj-i=4#M8@=r
7_k&iH\p/O?n;F523&2p9^NpN/"\:V#RmK&%$0B>+Lhsr&H`SO#N/e@M1?9G@=0)9
O<,RUAcXM/n3]:HHmlCBDVlnI#_gY/)Snb7!J",u$'@t#m)5n+id5tsUCq$ki.ZOY
&-N,%J$pGtI+TPm&H^lH&IE\!$mPI^%,g;/^b?'#ir<^5Z8b&O,^ZVc4?g2$Lce%q
jKpOA#R)r!2b+_4%,Lsl#;NWer%T-4Je#d#:j=Jq3;2:jb[q"E;+2h9$O7ktD[pd,
0S1%UGJ[=&H4F6EKFe<RJ.)S`T\q'5n<OW:9F47gqqsb2M&ZW1G7DA$#cSXF#=>)1
Hg]5L4r!:+[9*b:5T>S0m>_Ap#](#[mQCbV>lh0#!sF1'fm>G6+.ies`D@$jlB&)t
#Qc-]']H^t61Q)5Ad><4!5Q5dm25I>2"YQ#GH.;:XnM]!=9,"?('2Q!@IP?m&elH^
T3r';J`b'mIfaO$XIpaD@,_\>oF2q+"CN"MLVa&lO;B(g*fr]1+lj6..#\-7&)m*`
:VQs>$H2uP$)*G$_<;qke/7-Y$(s\7W[\#L-jKb9(P0.<J`%QbU^VbbJD^hI&+KTC
E9W5)!9!&^8Has&O;,MN&"q>WTO7pG>R',<$6\aJ_$g`;5*8);&+J$,OOau@nc;#a
#iu'-J_Cu-((*<I"oq[,i&h).gl)OV!208OOUrdS\8`W8'(HGZ@ItQ@D@bZo#67A4
kB<RB"9>+g/PO[u@QGT>"=7G8'X:Ci@ItU,YS5rn"DQ)]J-l`Oi:kW<+JJK?%Sd-m
=VpCKI3G$m!4W,l'S,*K#f2]6-\b(m9,ZY;!PgZ.Z#"^G7N\Is)^,=f+;C@Pq?'"f
,34uDdDS+tndkdB!C.h>/nl>'eq_*6*5P;XAO<,p!XJgUA+!NAZ1;b*ljlVW!<@?Z
m\:msf-#Y0*.^ci!#XPm-kL(oI-.S'L/q6gf^3&\$"7MVE\r#qYTEo,)o4'0-h;]D
@MB3N-:.DIB*]SfS-bhoSNmkq_.Xj&b\n,]CC-ArL2;m$i#JGH%mW1Y!"]?C7_5mm
+(<N5U-9UV/d0;E!$DCF+F"D_4r,;T(?'3K!GiO&=;.AL&Kr2/TiMq;C_oC))aV1V
iE-C?1]ZHE'5<\Gkft.mZQ4VR(''^&+9V[#,qQh;!J!WDJ92$HHj?<f#2iMa%JBgq
1'N2M#U#-8TbnPRKSV$mQ[fDGK014D<Z3Rh*C4o]!-eO.,;O=bSOf]AP:$2m$j!"f
#U$J\TJi>iGQ<7V%Dc3cJ[-2fA0\qc*$H@.TH>SgGrp)X40uCTd`XSB"p&+D%A=mW
T]dYpg_3;?O`S3!oAMkhK03O:#N11<i^t+3ci[4S5#_DEo-BHk$j,?d"s@M#+9~>

Q
n
Q
Q
q
21.36 0 0 33.9 230.52 613.76 cm
q
n
0 0 1 1 re
q
W
[/Indexed /N15 /ColorSpace findRes 255
<~!!!!"!<E6'!WrN,"9\i2"U,)7"pYA<#RC\B#mgqG$4@4L$k*OR%1NdW%M''\&.fBb
&J5Wg&ebol'GM5r'bqK"()Ic'(`4)-)&X>2)B0V7*#oq=*??1B*ZlIG+<VdM+X&$R
+sS<W,U=W],palb-7:/g-n$Jm.4H_r.P!#"/1`>(/M/S-/h\k20JG180ekF=1,C^B
1c.$H2)R9M2E*QR3&ilX3B9,]3]fDb4?P_h4Zttm5!M7r5X7S#5s[h(6:4+-6psF3
77B[87Ros=84Z9C8P)NH8kVfM9MA,S9heAX:/=Y]:f'tc;,L4h;H$Lm<)cgs<E3(#
<``@(=BJ[.=]np3>$G38>[1N>?!UcC?=.&H?smAN@:<VS@UinXA7T4^AS#IcAnPah
BP;'nBk_<sC27U#Ci!p)D/F0.DJsH3E,]c9EH-#>EcZ;CFEDVIF`hkNG'A.SG^+IY
H$O^^H@(!cI!g<iI=6QnIXcisJ:N0$JUrE)JqJ].KS5#4KnY89L51P>LkpkDM2@+I
MMmCNN/W^TNK&sYNfT6^OH>QdOcbfiP*;)nPa%DtQ'IZ$QC!r)R$a8/R@0M4R[]e9
S=H+?SXl@DStDXITV.sOTqS3TU8+KYUnjf_V5:&dVPg>iW2QYoWMuntWiN2$XK8M*
Xf\b/Y-5%4Yct@:Z*CU?ZEpmD['[3J[C*HO[^W`T\@B&Z\[f;_]">Sd]Y(nj]tM.o
^;%Ft^qdb%_84"*_Sa:/`5KU5`Poj:`lH-?aN2HEaiV]Jb0.uObfn;Uc-=PZcHjh_
d*U.edF$CjdaQ[oeC<!ue^`7%f%8O*f\"j0g"G*5g=tB:gt^]@h;-rEhV[5Ji8EPP
iSieUioB(ZjQ,C`jlPXek3(pjkih6pl07KulKdd%m-O*+mHs?0mdKW5nF5r;naZ2@
o(2JEo^qeKp%A%Pp@n=Uq"XX[q>'m`qYU0er;?KkrVc`prr<#u~>]
cs 
<<
/ImageType 1
/Width 48
/Height 76
/ImageMatrix [48 0 0 -76 0 76] 
/BitsPerComponent 8
/Decode [0 255 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J,hhW+q"SJrdR/k:oHbWqXIC>5Yrj?&:U[*5@Lh,6p4pL!e@(3fFS<bV0^!%E6(E:
^jQPXjIee"$+B\j7c-r$BXe?m!<_>3Ju_p0.u(fEBb73[#8<4#6:+R[H20IM5+5!(
J05)(!JR7u+HgoO8;'+S@6cdd#Qt3[_-lc*82+qG`ue!lco;D@!WiPV0KK!5$&u[N
UYnkb,$I[E=DHgq<$!>k5%AN^flS$+!<BpOJe@k!"ZsQ`0&tkD$jHtag2;[ETsgBu
K#,D!NZJ&q;$D%A+<YdGTPMn6LKr>KqU6kp!2+q-.E^ae0N:C.GUsUK69O:4oLL?o
$7I@Xn";"X#\eQZ?]4IL+:JZBZl/(:+L!m4JWB4@*>a`Mp-jMrO9?&T-F5N9/&2u-
-CW3M>$H`sBGM)@-*W[NK],HW$%kLq1'[kiag@$LA:P)G!+D9rH6Y^`-FWuKThp'J
Bk`GOK#"<]/I9`(<[E\KaZ<mg^h=>hPpbPeI?JPA"p,,9P7ARbJ26$r&a&WUIa!T3
pi7"a0LcNT+Xg)#LrO_KEul];'F"QqE@io;7$nCU!CPQ&PmN"/m+;bYU!Y;_LZ.fG
(.)[m$j4=JSo:5Kg%Kh7j00<O'aMSIH4J'o6510U3YY3p5_omPJO(^6>b9GRpjQ.q
TP=i9_<IhEdAPC5,_9>g2K9dnR=lQe!)UUO.-LEU?4"Dd%Kc^hd+i9*ot>6kSu.n9
%t[,fdp!l(i)0a\,&u1[*Fe$@d"QTL&qqE_Z!8/slZ`aDMId+>I8`YXa@q3d?lC>]
ns(2#KOAa=)Or1Kk\pUJ!"Lb(p5/d(*Q*[IYI#E+3'%sJH/<9G_%hh4$jSfe>T;[Y
*!HCS$/g0%,Q&26"/RJdZl_^r5>rgm(aLGh6a2d`JNuaC&!nZ_2KK;"E"E/)Kk]=d
S"W`/!J+`@`K+NmEO7D#BbJGm?dm)NC7c6On4Ea_\.BYn`JG?H.DQK%*gdiad!m,`
\9*h,S81Fq#::IB1EN:C(]pi`!/;MG[4hdj&C_`h_k)O[96p'+&-`d^ETG8cNaS4_
[k7&`J--*I;U1Q,#O1)H%RLFLTCJQkOCg@@EU[ZR^l-q*kof4G]_@uV&:L-^;$7hh
RQq-+b=L=]GT!4DCnO*[@)-[I*i`=l+(o;45R5O5"=L.lfuup;=X-665^4gg@gU%:
kGgm>i:IjpC^,Dt&.qC+4ZDA^VNpWVC]V%f'o@dp^h=3J8&3"L!'ga?dAI,&fR<j4
]ENqlg*B,>jB)t:%mfb+4N,S\!MEh0TjdX95YqXc@6e7^&bM<E<&KE+1jt9i.K_r'
TcW:Y1k?2\&B4/68$ONr5_3_U5[Y*1_dqX8OJ2mZ5b:Gu2D.GJ/dm2##m4XEH_)tW
&&=P^(N1WY`oDM#6.0'>iCIa__:T+1GTR]uqEDpXpb%-pcNAc$H7?,'"TVpC(+5,3
aQXhHJ1sY7K>`!B5U$9FLqT"8FsWXR512]`Kc1%]6(Q@O"Cb'+JAeg"^1+kZJ^AlX
@0?dbTM.-J`&*fLTRI9!E*pBt"T`"A&colh!!Bah0_6mj'%(G#QFI5&^iTspF5-p$
q!OJ)E.sJ&A-?(t9b@EI(VS:^!Whf)IC$/DMZfOP7/5g^U.>b,(6S`N(pJ4*Z?D`-
?3:0u%2a`QI#d/*#G-/E"i;C#cagPYBRLI1A*l&_&JPD.GT%3IY&2P.)F#V=#m%pt
_iMXR)1[5F"bU]Ydc+@m`F'2W5X8m*dI]&AS3%_=Y+IV7ngM;8$j)\.Up5Fg"\-I)
Vo0^&#gb+)5k*!L6b!U+i$]t.`6+pooPXr<.Kb6@c@SF9."NKj(InpLTnDuKK`E;!
_;N[l6g-f:n1"qPf_qeFXF?*NL]bG36Q/clILH44#/M^I+-nI3f[,KX^j&;$k%o-p
n5'>,@/@3_."7+/NFW)5dmCtEH3t3i#/^%I[<=AO!8n\&a>'/*Jq+X<i1PI7fYIiO
'FG,nh\$SVn.WU5$\NH"6L""<(]b&RJ8f`^LG8?Aj4JPb!:mul^k81YE.3`WMGoH>
.gmN)2?r[!'S.0/!5PgE=K<6J69NU]5S\)s2pME=@#hR;r*Y2$OTgYici?ZC"k;;6
&Y/J0!9`%2)A"#;YcZRq=?)EC5Wg!=aGgUYP(N`W%MOS6rkcPK8=C)$*=#F6*eS,i
!HsV3K\5[q;_3BU(;s:ii2Ug-jC&/=ScHTOWOWcqIL536KRpqM2+."VKr2iqKP9\m
Ep.rX`$.X(n\-&1Ts9/6jSLLdr")Htd0,#XO%7!'Cg\qO6@@c7M$O1a_6*DBdI\GO
E!$+!DRjBkrn,%@SK<M26\(?6!CAc```2_^B_+P%"p;t+ih-`%cj0j[7NnV^Fg6VS
"D5Z(;?5g+"Gj0[6T&;G$C,.^%e1;=8pCLng,ZEk_4ZLSJA2>#49>c\<DuEMJ2AD(
>Ki7n3l:DO!.kCVlELSg5er3scq&WsKh?=eDNi:b1k#`O/Y[inZ7eNH5_Hn:[A.9U
++fR_0Ao#@7uTubiWAlTi4:X5P*t6,Xu;?gC(+#0"9@B(7L[!4R0Ufd!<p7A!?b2T
`'Bq1j%O[;aVmB5:fII/hu`ukKU>aNoF[`^XamVu"[Mi;#_?)=MP8#2\7jk5^q@+Z
i"-/]=MGj9OA1=;8d<*#,6^?^*s>uI*<h2XiK2Q<NknU.J:k3]',W`gJZpR(O=19?
`#/XgAe"k:6j\Et8e&A!5X5~>

Q
n
Q
Q
q
18.72 0 0 33.9 233.7 532.88 cm
q
n
0 0 1 1 re
q
W
[/Indexed /N15 /ColorSpace findRes 255
<~!!!!"!<E6'!WrN,"9\i2"U,)7"pYA<#RC\B#mgqG$4@4L$k*OR%1NdW%M''\&.fBb
&J5Wg&ebol'GM5r'bqK"()Ic'(`4)-)&X>2)B0V7*#oq=*??1B*ZlIG+<VdM+X&$R
+sS<W,U=W],palb-7:/g-n$Jm.4H_r.P!#"/1`>(/M/S-/h\k20JG180ekF=1,C^B
1c.$H2)R9M2E*QR3&ilX3B9,]3]fDb4?P_h4Zttm5!M7r5X7S#5s[h(6:4+-6psF3
77B[87Ros=84Z9C8P)NH8kVfM9MA,S9heAX:/=Y]:f'tc;,L4h;H$Lm<)cgs<E3(#
<``@(=BJ[.=]np3>$G38>[1N>?!UcC?=.&H?smAN@:<VS@UinXA7T4^AS#IcAnPah
BP;'nBk_<sC27U#Ci!p)D/F0.DJsH3E,]c9EH-#>EcZ;CFEDVIF`hkNG'A.SG^+IY
H$O^^H@(!cI!g<iI=6QnIXcisJ:N0$JUrE)JqJ].KS5#4KnY89L51P>LkpkDM2@+I
MMmCNN/W^TNK&sYNfT6^OH>QdOcbfiP*;)nPa%DtQ'IZ$QC!r)R$a8/R@0M4R[]e9
S=H+?SXl@DStDXITV.sOTqS3TU8+KYUnjf_V5:&dVPg>iW2QYoWMuntWiN2$XK8M*
Xf\b/Y-5%4Yct@:Z*CU?ZEpmD['[3J[C*HO[^W`T\@B&Z\[f;_]">Sd]Y(nj]tM.o
^;%Ft^qdb%_84"*_Sa:/`5KU5`Poj:`lH-?aN2HEaiV]Jb0.uObfn;Uc-=PZcHjh_
d*U.edF$CjdaQ[oeC<!ue^`7%f%8O*f\"j0g"G*5g=tB:gt^]@h;-rEhV[5Ji8EPP
iSieUioB(ZjQ,C`jlPXek3(pjkih6pl07KulKdd%m-O*+mHs?0mdKW5nF5r;naZ2@
o(2JEo^qeKp%A%Pp@n=Uq"XX[q>'m`qYU0er;?KkrVc`prr<#u~>]
cs 
<<
/ImageType 1
/Width 42
/Height 76
/ImageMatrix [42 0 0 -76 0 76] 
/BitsPerComponent 8
/Decode [0 255 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J3T[Pf8>5Z!W^)&+@5k+jSaWoTCFn:<[SK<7::&C!V@fHKReT)F;&Na&W97k&X]?d
q!1J)5eo?E#Qt;;$&Pe)j9eg$N'ns(2p8lo'a'"PJ3YM&'FtNRK*Jf\qL9<452FLs
`=;h/>`_6.d"uHj^gS`!+[C:7D#(,-i(oYB&H9bBeX4E#GSgi#9XNUcVaG;T)$PYL
bo,nT"SuXE`'Vt[mP:dr!e?qqHR6hqC+p>H!-g%1)F?RS0rNJK\./WDO70T2p)o\N
!eB4Hb;l/I+c=12&8%:N4'gVf:Y*'i(J4k)+'WBiNaPHaK*-q[OXOB\'8Ah^T\*ot
'.YtJZj63].Lr9U!Qd:Dnat3p+k*9laB27i#[q+9'o<"UYYH%Pa;P25`B#-!1$4RT
"0#ZnC1\OM_;IQ^J[p5&#f.WE&Hnde<$N9Xai\k!KNJul!Ml1TLnA:(YR#cP-kmjC
B7]8fOK:],FrWqqQ4<usn5La(kJ?k?T1=.m"\&X=Aq(n7e"%J1!eHGXSqh#H$3:,\
14:RIJ7o;l_<IhE[a25"-@oPi-r@p(aNas>J/Ah:R?I[*=p,;]&._A<TqXIJ^lY43
+-VQF:^'*l*Zc0`&bp:(J7SKXK'*a0HQApW49heCaK%-;UsLe"!MX;U8=t[ZGS,M"
?sZa&c)K,QJhuTr#b)'umWk(JkS=@*Jp@]2*leik&HPU^_K;DgZ+MLdJ4LeF+m=LN
<J,fM"p+g9_;K[3VXPi5JABg]?(FL=^.s<R:_Es7jij6C*2=cc"+qo#VV<00a:Sc9
L:QGl)dpGi!W_21@!]LtE2Ej@+D?.:T*O?MHkMRW#Qk;8o4WTF7Z`1XJAIXIFI`S[
17<ZC@+955j-W4=JY>)X3$lV?S>H;&!FkntB(3;6.:?9eD]@c)6]'V#fpp50@RrB_
"%;Q2gE3=Yf.m?a3$pX+B;sTMJZ;fZ&sMIG2@sX(:o\?tLmW,jJmetL)5!h;LdhfH
6a@@;"dp2Ac_)*`)ig\l@[VaS89A16kbr5-!hk1<Tcckip3E'9QmoCo5l`;7VTH>5
&_"k+#S[unZW8#e!Kj5,+t(d(-ijXPA)i))+,lZi"**'#U7q?C$&&6q<du2ZW$11E
?LNu<"i\4PMMg?%+:FV:!X*fXi(poOrWl%!$kc94,`</J\/YjC'"Rp)#.Q)_/ReCg
&-N$O&EnEC=@A`g-73$G(`pP)%=leR'8)ZZ"i)7B4l?YTKsTe`_E8Wbn0AagX+VB7
0F.[J<],YGk8$?_UcB18!_f9V2.TZXKOq_!7&%@LjW"F(i9i`;YkT-RO?s/u_A5J:
<"5S'G<iH3,smLt!9$1X19os\&6KPXA=_/0_=g$I:u<4eJ9N"mmT%30<G);N8e3ZK
5)/Pn!IuR-M`:S,iRpF._-,Cj0Fea1#k/W1L^*r'_Dg9o=->sT6+[Ab"U%*=)Bopp
!T@_q@sjK'@TY*?J-H(ki.;Mk":"qB68?Nk?Be>Y8d+Vnnpi0e"Meu]PCWKhMp/Ml
6:;q8U_j>%\-uWffEqlrh]QMC'bR++#([>S+bP"lG-8ad"7^pWVMkobi%,.k!QI%9
GT2gl,oqmg)`UFaL&q?##E2&+4+pu_!08B,K!>b1,n08eJf0RKd?\VSi:.C)a9)Ho
*]dmB![?,+Nf:jG56i$:!WXbd\&k=/KI@?3+?3pn61cc0Qjj,`nrM)t!!K2G,pFT+
D?4,`"^t+WS0>6IJC#i&h>ljDJ2dlBWFJ>QpeV'#6k>7.J3?5\&d#m_DpTDa5Jbto
!e@EFOb*-J5mS52K'`0\G<?.]\25*W!.G=VL'L"8OWTjUMM!TR"p)'F-mPBJJri)6
a458UJBkM`kC>ceTV2O^A1j/%"@'_n=p.1ib>U.\.)AFj#t)k9;'9NW5`cco,J^sT
iSl4N(_R#t@X$C2C^34M%gO;SFY$tf42uWI!C0UPNuL/C!PfiZ?lg9ki7o6'E+oX:
I@(*+HWb,<3s;W:\H$4!;P#QE!MVcgf0FQed%e`gpL3+_Yk<3U0K]KiKp.%?b<Fa<
"9QGtkZ)SB#S<X4"6$IXM"&=g07X*+![)Yjq8*MF=9\dlfQ<0OkV`OQ'.1L'.Lk$!
;?3d#!5N\V1dU[c_9k*VK4>;:+:O8q0K'_*<.9i]ZTc/A//0>\"&0SrahcoJ[%kPr
@fRtu`ssto=,6q]@>9`]\89.b/2.MplV]F(%1M97P6XP$+bIs6YZOR3$((!Z6p'f:
?l(%uqBYuirKJN/n5KFbKEfCYkc4*m-Wd<[1P1:hF!;tl</9NLL=>E.P&Qii;#?ku
Q4qQIWfr'UBE8R66Bk6t*K/)k9ZKD&T3r3q\_>;f^sJ1P`2n<@>rEWoY*+r:0c^F;
XT+(&JAqTYAB%2P0U"*>"2\SnW>C./(GYIgUD.taQ*V`J&0!Pn(^,IG*2$8er?!3m
Kpf.l$:=fN'I)=H>"Wm*!U(I'(n_1g5oqsT\G@7u3!Xta&d#k!('HnP+pB[Y.L.73
P$u!JJCEMs!=3<SA!h<E0MVh&cl</GPSXFPH4Y[9E#'\<E"haY)M%he!.Z=,#/QTa
"b8K7+KQB3+D)(6cohX8(bUY+!K`*C~>

Q
n
Q
Q
/LNOKDD+TimesNewRoman,Bold /Font _pdfUndefineResource
/N22 /Font _pdfUndefineResource
/LNOKBA+PalatinoLinotype-Italic /Font _pdfUndefineResource
/N11 /Font _pdfUndefineResource
/LNOKEL+Arial,Bold /Font _pdfUndefineResource
/N34 /Font _pdfUndefineResource
/LNOKCH+TimesNewRoman,Italic /Font _pdfUndefineResource
/N18 /Font _pdfUndefineResource
/LNOKDP+Arial /Font _pdfUndefineResource
/N30 /Font _pdfUndefineResource
/LNOKBL+SymbolMT /CIDFont _pdfUndefineResource
/LNOKBL+SymbolMT-Identity-H /Font _pdfUndefineResource
/N10 /Font _pdfUndefineResource
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF
